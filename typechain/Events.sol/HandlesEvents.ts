/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface HandlesEventsInterface extends utils.Interface {
  functions: {};

  events: {
    "BatchMetadataUpdate(uint256,uint256)": EventFragment;
    "HandleMinted(string,string,uint256,address,uint256)": EventFragment;
    "TokenGuardianStateChanged(address,bool,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BatchMetadataUpdate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "HandleMinted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenGuardianStateChanged"): EventFragment;
}

export interface BatchMetadataUpdateEventObject {
  fromTokenId: BigNumber;
  toTokenId: BigNumber;
}
export type BatchMetadataUpdateEvent = TypedEvent<
  [BigNumber, BigNumber],
  BatchMetadataUpdateEventObject
>;

export type BatchMetadataUpdateEventFilter =
  TypedEventFilter<BatchMetadataUpdateEvent>;

export interface HandleMintedEventObject {
  handle: string;
  namespace: string;
  handleId: BigNumber;
  to: string;
  timestamp: BigNumber;
}
export type HandleMintedEvent = TypedEvent<
  [string, string, BigNumber, string, BigNumber],
  HandleMintedEventObject
>;

export type HandleMintedEventFilter = TypedEventFilter<HandleMintedEvent>;

export interface TokenGuardianStateChangedEventObject {
  wallet: string;
  enabled: boolean;
  tokenGuardianDisablingTimestamp: BigNumber;
  timestamp: BigNumber;
}
export type TokenGuardianStateChangedEvent = TypedEvent<
  [string, boolean, BigNumber, BigNumber],
  TokenGuardianStateChangedEventObject
>;

export type TokenGuardianStateChangedEventFilter =
  TypedEventFilter<TokenGuardianStateChangedEvent>;

export interface HandlesEvents extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: HandlesEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "BatchMetadataUpdate(uint256,uint256)"(
      fromTokenId?: null,
      toTokenId?: null
    ): BatchMetadataUpdateEventFilter;
    BatchMetadataUpdate(
      fromTokenId?: null,
      toTokenId?: null
    ): BatchMetadataUpdateEventFilter;

    "HandleMinted(string,string,uint256,address,uint256)"(
      handle?: null,
      namespace?: null,
      handleId?: null,
      to?: null,
      timestamp?: null
    ): HandleMintedEventFilter;
    HandleMinted(
      handle?: null,
      namespace?: null,
      handleId?: null,
      to?: null,
      timestamp?: null
    ): HandleMintedEventFilter;

    "TokenGuardianStateChanged(address,bool,uint256,uint256)"(
      wallet?: string | null,
      enabled?: boolean | null,
      tokenGuardianDisablingTimestamp?: null,
      timestamp?: null
    ): TokenGuardianStateChangedEventFilter;
    TokenGuardianStateChanged(
      wallet?: string | null,
      enabled?: boolean | null,
      tokenGuardianDisablingTimestamp?: null,
      timestamp?: null
    ): TokenGuardianStateChangedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
