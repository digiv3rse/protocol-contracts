/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface GovernanceLibInterface extends utils.Interface {
  functions: {};

  events: {
    "EmergencyAdminSet(address,address,address,uint256)": EventFragment;
    "GovernanceSet(address,address,address,uint256)": EventFragment;
    "ProfileCreatorWhitelisted(address,bool,uint256)": EventFragment;
    "StateSet(address,uint8,uint8,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "EmergencyAdminSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GovernanceSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProfileCreatorWhitelisted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StateSet"): EventFragment;
}

export interface EmergencyAdminSetEventObject {
  caller: string;
  oldEmergencyAdmin: string;
  newEmergencyAdmin: string;
  timestamp: BigNumber;
}
export type EmergencyAdminSetEvent = TypedEvent<
  [string, string, string, BigNumber],
  EmergencyAdminSetEventObject
>;

export type EmergencyAdminSetEventFilter =
  TypedEventFilter<EmergencyAdminSetEvent>;

export interface GovernanceSetEventObject {
  caller: string;
  prevGovernance: string;
  newGovernance: string;
  timestamp: BigNumber;
}
export type GovernanceSetEvent = TypedEvent<
  [string, string, string, BigNumber],
  GovernanceSetEventObject
>;

export type GovernanceSetEventFilter = TypedEventFilter<GovernanceSetEvent>;

export interface ProfileCreatorWhitelistedEventObject {
  profileCreator: string;
  whitelisted: boolean;
  timestamp: BigNumber;
}
export type ProfileCreatorWhitelistedEvent = TypedEvent<
  [string, boolean, BigNumber],
  ProfileCreatorWhitelistedEventObject
>;

export type ProfileCreatorWhitelistedEventFilter =
  TypedEventFilter<ProfileCreatorWhitelistedEvent>;

export interface StateSetEventObject {
  caller: string;
  prevState: number;
  newState: number;
  timestamp: BigNumber;
}
export type StateSetEvent = TypedEvent<
  [string, number, number, BigNumber],
  StateSetEventObject
>;

export type StateSetEventFilter = TypedEventFilter<StateSetEvent>;

export interface GovernanceLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: GovernanceLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "EmergencyAdminSet(address,address,address,uint256)"(
      caller?: string | null,
      oldEmergencyAdmin?: string | null,
      newEmergencyAdmin?: string | null,
      timestamp?: null
    ): EmergencyAdminSetEventFilter;
    EmergencyAdminSet(
      caller?: string | null,
      oldEmergencyAdmin?: string | null,
      newEmergencyAdmin?: string | null,
      timestamp?: null
    ): EmergencyAdminSetEventFilter;

    "GovernanceSet(address,address,address,uint256)"(
      caller?: string | null,
      prevGovernance?: string | null,
      newGovernance?: string | null,
      timestamp?: null
    ): GovernanceSetEventFilter;
    GovernanceSet(
      caller?: string | null,
      prevGovernance?: string | null,
      newGovernance?: string | null,
      timestamp?: null
    ): GovernanceSetEventFilter;

    "ProfileCreatorWhitelisted(address,bool,uint256)"(
      profileCreator?: string | null,
      whitelisted?: boolean | null,
      timestamp?: null
    ): ProfileCreatorWhitelistedEventFilter;
    ProfileCreatorWhitelisted(
      profileCreator?: string | null,
      whitelisted?: boolean | null,
      timestamp?: null
    ): ProfileCreatorWhitelistedEventFilter;

    "StateSet(address,uint8,uint8,uint256)"(
      caller?: string | null,
      prevState?: BigNumberish | null,
      newState?: BigNumberish | null,
      timestamp?: null
    ): StateSetEventFilter;
    StateSet(
      caller?: string | null,
      prevState?: BigNumberish | null,
      newState?: BigNumberish | null,
      timestamp?: null
    ): StateSetEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
