/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace Types {
  export type MigrationParamsStruct = {
    digiHandlesAddress: string;
    tokenHandleRegistryAddress: string;
    legacyFeeFollowModule: string;
    legacyProfileFollowModule: string;
    newFeeFollowModule: string;
  };

  export type MigrationParamsStructOutput = [
    string,
    string,
    string,
    string,
    string
  ] & {
    digiHandlesAddress: string;
    tokenHandleRegistryAddress: string;
    legacyFeeFollowModule: string;
    legacyProfileFollowModule: string;
    newFeeFollowModule: string;
  };
}

export interface DiGiV2MigrationInterface extends utils.Interface {
  functions: {
    "batchMigrateFollowModules(uint256[])": FunctionFragment;
    "batchMigrateFollowers(uint256[],uint256,uint256[])": FunctionFragment;
    "batchMigrateFollows(uint256,uint256[],uint256[])": FunctionFragment;
    "batchMigrateProfiles(uint256[])": FunctionFragment;
    "getProfileIdByHandleHash(bytes32)": FunctionFragment;
    "setMigrationAdmins(address[],bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "batchMigrateFollowModules"
      | "batchMigrateFollowers"
      | "batchMigrateFollows"
      | "batchMigrateProfiles"
      | "getProfileIdByHandleHash"
      | "setMigrationAdmins"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "batchMigrateFollowModules",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchMigrateFollowers",
    values: [BigNumberish[], BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchMigrateFollows",
    values: [BigNumberish, BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchMigrateProfiles",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfileIdByHandleHash",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setMigrationAdmins",
    values: [string[], boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchMigrateFollowModules",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchMigrateFollowers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchMigrateFollows",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchMigrateProfiles",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProfileIdByHandleHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMigrationAdmins",
    data: BytesLike
  ): Result;

  events: {};
}

export interface DiGiV2Migration extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DiGiV2MigrationInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  batchMigrateFollowModules(
    profileIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  batchMigrateFollowers(
    followerProfileIds: BigNumberish[],
    idOfProfileFollowed: BigNumberish,
    followTokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  batchMigrateFollows(
    followerProfileId: BigNumberish,
    idsOfProfileFollowed: BigNumberish[],
    followTokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  batchMigrateProfiles(
    profileIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getProfileIdByHandleHash(
    handleHash: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setMigrationAdmins(
    migrationAdmins: string[],
    whitelisted: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchMigrateFollowModules(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    batchMigrateFollowers(
      followerProfileIds: BigNumberish[],
      idOfProfileFollowed: BigNumberish,
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    batchMigrateFollows(
      followerProfileId: BigNumberish,
      idsOfProfileFollowed: BigNumberish[],
      followTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    batchMigrateProfiles(
      profileIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getProfileIdByHandleHash(
      handleHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setMigrationAdmins(
      migrationAdmins: string[],
      whitelisted: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
