/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace ModuleTypes {
  export type ProcessCollectParamsStruct = {
    publicationCollectedProfileId: BigNumberish;
    publicationCollectedId: BigNumberish;
    collectorProfileId: BigNumberish;
    collectorProfileOwner: string;
    transactionExecutor: string;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referrerPubTypes: BigNumberish[];
    data: BytesLike;
  };

  export type ProcessCollectParamsStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string,
    BigNumber[],
    BigNumber[],
    number[],
    string
  ] & {
    publicationCollectedProfileId: BigNumber;
    publicationCollectedId: BigNumber;
    collectorProfileId: BigNumber;
    collectorProfileOwner: string;
    transactionExecutor: string;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referrerPubTypes: number[];
    data: string;
  };
}

export interface ICollectModuleInterface extends utils.Interface {
  functions: {
    "initializePublicationCollectModule(uint256,uint256,address,bytes)": FunctionFragment;
    "processCollect((uint256,uint256,uint256,address,address,uint256[],uint256[],uint8[],bytes))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "initializePublicationCollectModule"
      | "processCollect"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "initializePublicationCollectModule",
    values: [BigNumberish, BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "processCollect",
    values: [ModuleTypes.ProcessCollectParamsStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "initializePublicationCollectModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "processCollect",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ICollectModule extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ICollectModuleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    initializePublicationCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      transactionExecutor: string,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    processCollect(
      processCollectParams: ModuleTypes.ProcessCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  initializePublicationCollectModule(
    profileId: BigNumberish,
    pubId: BigNumberish,
    transactionExecutor: string,
    data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  processCollect(
    processCollectParams: ModuleTypes.ProcessCollectParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    initializePublicationCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      transactionExecutor: string,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    processCollect(
      processCollectParams: ModuleTypes.ProcessCollectParamsStruct,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    initializePublicationCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      transactionExecutor: string,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    processCollect(
      processCollectParams: ModuleTypes.ProcessCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    initializePublicationCollectModule(
      profileId: BigNumberish,
      pubId: BigNumberish,
      transactionExecutor: string,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    processCollect(
      processCollectParams: ModuleTypes.ProcessCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
