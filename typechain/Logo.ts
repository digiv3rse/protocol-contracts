/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface LogoInterface extends utils.Interface {
  functions: {
    "getLogo(uint8,uint8,uint8,uint8)": FunctionFragment;
    "getLogoHoodie(uint8,uint8)": FunctionFragment;
    "getLogoJacket(uint8,uint8)": FunctionFragment;
    "getLogoTshirtTanktop(uint8,uint8)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getLogo"
      | "getLogoHoodie"
      | "getLogoJacket"
      | "getLogoTshirtTanktop"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getLogo",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLogoHoodie",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLogoJacket",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLogoTshirtTanktop",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "getLogo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getLogoHoodie",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLogoJacket",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLogoTshirtTanktop",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Logo extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LogoInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getLogo(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      bodyVariant: BigNumberish,
      bodyColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getLogoHoodie(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getLogoJacket(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getLogoTshirtTanktop(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  getLogo(
    logoVariant: BigNumberish,
    logoColor: BigNumberish,
    bodyVariant: BigNumberish,
    bodyColor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getLogoHoodie(
    logoVariant: BigNumberish,
    logoColor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getLogoJacket(
    logoVariant: BigNumberish,
    logoColor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getLogoTshirtTanktop(
    logoVariant: BigNumberish,
    logoColor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    getLogo(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      bodyVariant: BigNumberish,
      bodyColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getLogoHoodie(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getLogoJacket(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getLogoTshirtTanktop(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    getLogo(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      bodyVariant: BigNumberish,
      bodyColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLogoHoodie(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLogoJacket(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLogoTshirtTanktop(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getLogo(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      bodyVariant: BigNumberish,
      bodyColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLogoHoodie(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLogoJacket(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLogoTshirtTanktop(
      logoVariant: BigNumberish,
      logoColor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
