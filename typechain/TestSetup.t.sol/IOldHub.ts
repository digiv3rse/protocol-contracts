/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export type OldCommentDataStruct = {
  profileId: BigNumberish;
  contentURI: string;
  profileIdPointed: BigNumberish;
  pubIdPointed: BigNumberish;
  referenceModuleData: BytesLike;
  collectModule: string;
  collectModuleInitData: BytesLike;
  referenceModule: string;
  referenceModuleInitData: BytesLike;
};

export type OldCommentDataStructOutput = [
  BigNumber,
  string,
  BigNumber,
  BigNumber,
  string,
  string,
  string,
  string,
  string
] & {
  profileId: BigNumber;
  contentURI: string;
  profileIdPointed: BigNumber;
  pubIdPointed: BigNumber;
  referenceModuleData: string;
  collectModule: string;
  collectModuleInitData: string;
  referenceModule: string;
  referenceModuleInitData: string;
};

export type OldCreateProfileParamsStruct = {
  to: string;
  handle: string;
  imageURI: string;
  followModule: string;
  followModuleInitData: BytesLike;
  followNFTURI: string;
};

export type OldCreateProfileParamsStructOutput = [
  string,
  string,
  string,
  string,
  string,
  string
] & {
  to: string;
  handle: string;
  imageURI: string;
  followModule: string;
  followModuleInitData: string;
  followNFTURI: string;
};

export type OldProfileStructStruct = {
  pubCount: BigNumberish;
  followModule: string;
  followNFT: string;
  handle: string;
  imageURI: string;
  followNFTURI: string;
};

export type OldProfileStructStructOutput = [
  BigNumber,
  string,
  string,
  string,
  string,
  string
] & {
  pubCount: BigNumber;
  followModule: string;
  followNFT: string;
  handle: string;
  imageURI: string;
  followNFTURI: string;
};

export type OldMirrorDataStruct = {
  profileId: BigNumberish;
  pointedProfileId: BigNumberish;
  pointedPubId: BigNumberish;
  referenceModuleData: BytesLike;
  referenceModule: string;
  referenceModuleInitData: BytesLike;
};

export type OldMirrorDataStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  string,
  string,
  string
] & {
  profileId: BigNumber;
  pointedProfileId: BigNumber;
  pointedPubId: BigNumber;
  referenceModuleData: string;
  referenceModule: string;
  referenceModuleInitData: string;
};

export type OldPostDataStruct = {
  profileId: BigNumberish;
  contentURI: string;
  collectModule: string;
  collectModuleInitData: BytesLike;
  referenceModule: string;
  referenceModuleInitData: BytesLike;
};

export type OldPostDataStructOutput = [
  BigNumber,
  string,
  string,
  string,
  string,
  string
] & {
  profileId: BigNumber;
  contentURI: string;
  collectModule: string;
  collectModuleInitData: string;
  referenceModule: string;
  referenceModuleInitData: string;
};

export interface IOldHubInterface extends utils.Interface {
  functions: {
    "collect(uint256,uint256,bytes)": FunctionFragment;
    "comment((uint256,string,uint256,uint256,bytes,address,bytes,address,bytes))": FunctionFragment;
    "createProfile((address,string,string,address,bytes,string))": FunctionFragment;
    "follow(uint256[],bytes[])": FunctionFragment;
    "getCollectNFTImpl()": FunctionFragment;
    "getProfile(uint256)": FunctionFragment;
    "mirror((uint256,uint256,uint256,bytes,address,bytes))": FunctionFragment;
    "post((uint256,string,address,bytes,address,bytes))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "collect"
      | "comment"
      | "createProfile"
      | "follow"
      | "getCollectNFTImpl"
      | "getProfile"
      | "mirror"
      | "post"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "collect",
    values: [BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "comment",
    values: [OldCommentDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createProfile",
    values: [OldCreateProfileParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "follow",
    values: [BigNumberish[], BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectNFTImpl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProfile",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mirror",
    values: [OldMirrorDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "post",
    values: [OldPostDataStruct]
  ): string;

  decodeFunctionResult(functionFragment: "collect", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "comment", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "createProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "follow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCollectNFTImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getProfile", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mirror", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "post", data: BytesLike): Result;

  events: {};
}

export interface IOldHub extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IOldHubInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    comment(
      vars: OldCommentDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    createProfile(
      createProfileParams: OldCreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<[string]>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[OldProfileStructStructOutput]>;

    mirror(
      createProfileParams: OldMirrorDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    post(
      vars: OldPostDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  collect(
    profileId: BigNumberish,
    pubId: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  comment(
    vars: OldCommentDataStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  createProfile(
    createProfileParams: OldCreateProfileParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  follow(
    profileIds: BigNumberish[],
    datas: BytesLike[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getCollectNFTImpl(overrides?: CallOverrides): Promise<string>;

  getProfile(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<OldProfileStructStructOutput>;

  mirror(
    createProfileParams: OldMirrorDataStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  post(
    vars: OldPostDataStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    comment(
      vars: OldCommentDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createProfile(
      createProfileParams: OldCreateProfileParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<string>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<OldProfileStructStructOutput>;

    mirror(
      createProfileParams: OldMirrorDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    post(
      vars: OldPostDataStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    comment(
      vars: OldCommentDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    createProfile(
      createProfileParams: OldCreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<BigNumber>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirror(
      createProfileParams: OldMirrorDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    post(
      vars: OldPostDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    collect(
      profileId: BigNumberish,
      pubId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    comment(
      vars: OldCommentDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    createProfile(
      createProfileParams: OldCreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    follow(
      profileIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getCollectNFTImpl(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mirror(
      createProfileParams: OldMirrorDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    post(
      vars: OldPostDataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
