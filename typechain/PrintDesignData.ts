/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace PrintLibrary {
  export type CollectionStruct = {
    acceptedTokens: string[];
    prices: BigNumberish[];
    tokenIds: BigNumberish[];
    communityIds: BigNumberish[];
    uri: string;
    fulfiller: string;
    creator: string;
    collectionId: BigNumberish;
    pubId: BigNumberish;
    profileId: BigNumberish;
    dropId: BigNumberish;
    mintedTokens: BigNumberish;
    amount: BigNumberish;
    origin: BigNumberish;
    printType: BigNumberish;
    unlimited: boolean;
    encrypted: boolean;
  };

  export type CollectionStructOutput = [
    string[],
    BigNumber[],
    BigNumber[],
    BigNumber[],
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    number,
    number,
    boolean,
    boolean
  ] & {
    acceptedTokens: string[];
    prices: BigNumber[];
    tokenIds: BigNumber[];
    communityIds: BigNumber[];
    uri: string;
    fulfiller: string;
    creator: string;
    collectionId: BigNumber;
    pubId: BigNumber;
    profileId: BigNumber;
    dropId: BigNumber;
    mintedTokens: BigNumber;
    amount: BigNumber;
    origin: number;
    printType: number;
    unlimited: boolean;
    encrypted: boolean;
  };

  export type TokenStruct = {
    uri: string;
    chosenCurrency: string;
    tokenId: BigNumberish;
    collectionId: BigNumberish;
    index: BigNumberish;
  };

  export type TokenStructOutput = [
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    uri: string;
    chosenCurrency: string;
    tokenId: BigNumber;
    collectionId: BigNumber;
    index: BigNumber;
  };
}

export interface PrintDesignDataInterface extends utils.Interface {
  functions: {
    "collectionCreator()": FunctionFragment;
    "createDrop(string,address)": FunctionFragment;
    "deleteCollection(uint256)": FunctionFragment;
    "deleteDrop(uint256)": FunctionFragment;
    "getCollectionAcceptedTokens(uint256)": FunctionFragment;
    "getCollectionAmount(uint256)": FunctionFragment;
    "getCollectionCommunityIds(uint256)": FunctionFragment;
    "getCollectionCreator(uint256)": FunctionFragment;
    "getCollectionDropId(uint256)": FunctionFragment;
    "getCollectionEncrypted(uint256)": FunctionFragment;
    "getCollectionFulfiller(uint256)": FunctionFragment;
    "getCollectionOrigin(uint256)": FunctionFragment;
    "getCollectionPrices(uint256)": FunctionFragment;
    "getCollectionPrintType(uint256)": FunctionFragment;
    "getCollectionProfileId(uint256)": FunctionFragment;
    "getCollectionPubId(uint256)": FunctionFragment;
    "getCollectionSupply()": FunctionFragment;
    "getCollectionTokenIds(uint256)": FunctionFragment;
    "getCollectionTokensMinted(uint256)": FunctionFragment;
    "getCollectionURI(uint256)": FunctionFragment;
    "getCollectionUnlimited(uint256)": FunctionFragment;
    "getDropCollectionIds(uint256)": FunctionFragment;
    "getDropCreator(uint256)": FunctionFragment;
    "getDropSupply()": FunctionFragment;
    "getDropURI(uint256)": FunctionFragment;
    "getIsCollectionTokenAccepted(uint256,address)": FunctionFragment;
    "getTokenCollection(uint256)": FunctionFragment;
    "getTokenId(uint256)": FunctionFragment;
    "getTokenIndex(uint256)": FunctionFragment;
    "getTokenSupply()": FunctionFragment;
    "getTokenURI(uint256)": FunctionFragment;
    "modifyCollectionsInDrop(uint256[],string,uint256)": FunctionFragment;
    "name()": FunctionFragment;
    "nftCreator()": FunctionFragment;
    "printAccessControl()": FunctionFragment;
    "setCollection((address[],uint256[],uint256[],uint256[],string,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8,bool,bool))": FunctionFragment;
    "setCollectionCreatorAddress(address)": FunctionFragment;
    "setCollectionMintedTokens(uint256,uint256)": FunctionFragment;
    "setCollectionTokenIds(uint256,uint256[])": FunctionFragment;
    "setNFT((string,address,uint256,uint256,uint256))": FunctionFragment;
    "setNFTCreatorAddress(address)": FunctionFragment;
    "setPrintAccessControlAddress(address)": FunctionFragment;
    "symbol()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "collectionCreator"
      | "createDrop"
      | "deleteCollection"
      | "deleteDrop"
      | "getCollectionAcceptedTokens"
      | "getCollectionAmount"
      | "getCollectionCommunityIds"
      | "getCollectionCreator"
      | "getCollectionDropId"
      | "getCollectionEncrypted"
      | "getCollectionFulfiller"
      | "getCollectionOrigin"
      | "getCollectionPrices"
      | "getCollectionPrintType"
      | "getCollectionProfileId"
      | "getCollectionPubId"
      | "getCollectionSupply"
      | "getCollectionTokenIds"
      | "getCollectionTokensMinted"
      | "getCollectionURI"
      | "getCollectionUnlimited"
      | "getDropCollectionIds"
      | "getDropCreator"
      | "getDropSupply"
      | "getDropURI"
      | "getIsCollectionTokenAccepted"
      | "getTokenCollection"
      | "getTokenId"
      | "getTokenIndex"
      | "getTokenSupply"
      | "getTokenURI"
      | "modifyCollectionsInDrop"
      | "name"
      | "nftCreator"
      | "printAccessControl"
      | "setCollection"
      | "setCollectionCreatorAddress"
      | "setCollectionMintedTokens"
      | "setCollectionTokenIds"
      | "setNFT"
      | "setNFTCreatorAddress"
      | "setPrintAccessControlAddress"
      | "symbol"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "collectionCreator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "createDrop",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteCollection",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteDrop",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionAcceptedTokens",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionAmount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionCommunityIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionCreator",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionDropId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionEncrypted",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionFulfiller",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionOrigin",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionPrices",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionPrintType",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionProfileId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionPubId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionTokenIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionTokensMinted",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCollectionUnlimited",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDropCollectionIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDropCreator",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDropSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDropURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getIsCollectionTokenAccepted",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenCollection",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "modifyCollectionsInDrop",
    values: [BigNumberish[], string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "nftCreator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "printAccessControl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setCollection",
    values: [PrintLibrary.CollectionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollectionCreatorAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollectionMintedTokens",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollectionTokenIds",
    values: [BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setNFT",
    values: [PrintLibrary.TokenStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setNFTCreatorAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPrintAccessControlAddress",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "collectionCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "createDrop", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "deleteCollection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deleteDrop", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionAcceptedTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionCommunityIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionDropId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionEncrypted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionFulfiller",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionOrigin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionPrices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionPrintType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionProfileId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionPubId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionTokenIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionTokensMinted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollectionUnlimited",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDropCollectionIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDropCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDropSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getDropURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getIsCollectionTokenAccepted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenCollection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getTokenId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTokenIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "modifyCollectionsInDrop",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nftCreator", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "printAccessControl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollection",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollectionCreatorAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollectionMintedTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollectionTokenIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setNFT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setNFTCreatorAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPrintAccessControlAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;

  events: {
    "CollectionCreated(uint256,uint256,uint256,string,uint256,address)": EventFragment;
    "CollectionDeleted(uint256)": EventFragment;
    "CollectionMintedTokensSet(uint256,uint256)": EventFragment;
    "CollectionTokenIdsSet(uint256,uint256[])": EventFragment;
    "DropCollectionsUpdated(uint256,uint256[],uint256[],string)": EventFragment;
    "DropCreated(uint256,string,address)": EventFragment;
    "DropDeleted(uint256)": EventFragment;
    "TokensMinted(uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CollectionCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CollectionDeleted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CollectionMintedTokensSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CollectionTokenIdsSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DropCollectionsUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DropCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DropDeleted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensMinted"): EventFragment;
}

export interface CollectionCreatedEventObject {
  collectionId: BigNumber;
  pubId: BigNumber;
  profileId: BigNumber;
  uri: string;
  amount: BigNumber;
  owner: string;
}
export type CollectionCreatedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, string, BigNumber, string],
  CollectionCreatedEventObject
>;

export type CollectionCreatedEventFilter =
  TypedEventFilter<CollectionCreatedEvent>;

export interface CollectionDeletedEventObject {
  collectionId: BigNumber;
}
export type CollectionDeletedEvent = TypedEvent<
  [BigNumber],
  CollectionDeletedEventObject
>;

export type CollectionDeletedEventFilter =
  TypedEventFilter<CollectionDeletedEvent>;

export interface CollectionMintedTokensSetEventObject {
  collectionId: BigNumber;
  mintedTokensAmount: BigNumber;
}
export type CollectionMintedTokensSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  CollectionMintedTokensSetEventObject
>;

export type CollectionMintedTokensSetEventFilter =
  TypedEventFilter<CollectionMintedTokensSetEvent>;

export interface CollectionTokenIdsSetEventObject {
  collectionId: BigNumber;
  tokenIds: BigNumber[];
}
export type CollectionTokenIdsSetEvent = TypedEvent<
  [BigNumber, BigNumber[]],
  CollectionTokenIdsSetEventObject
>;

export type CollectionTokenIdsSetEventFilter =
  TypedEventFilter<CollectionTokenIdsSetEvent>;

export interface DropCollectionsUpdatedEventObject {
  dropId: BigNumber;
  collectionIds: BigNumber[];
  oldCollectionIds: BigNumber[];
  uri: string;
}
export type DropCollectionsUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber[], BigNumber[], string],
  DropCollectionsUpdatedEventObject
>;

export type DropCollectionsUpdatedEventFilter =
  TypedEventFilter<DropCollectionsUpdatedEvent>;

export interface DropCreatedEventObject {
  dropId: BigNumber;
  uri: string;
  creator: string;
}
export type DropCreatedEvent = TypedEvent<
  [BigNumber, string, string],
  DropCreatedEventObject
>;

export type DropCreatedEventFilter = TypedEventFilter<DropCreatedEvent>;

export interface DropDeletedEventObject {
  dropId: BigNumber;
}
export type DropDeletedEvent = TypedEvent<[BigNumber], DropDeletedEventObject>;

export type DropDeletedEventFilter = TypedEventFilter<DropDeletedEvent>;

export interface TokensMintedEventObject {
  tokenId: BigNumber;
  collectionId: BigNumber;
}
export type TokensMintedEvent = TypedEvent<
  [BigNumber, BigNumber],
  TokensMintedEventObject
>;

export type TokensMintedEventFilter = TypedEventFilter<TokensMintedEvent>;

export interface PrintDesignData extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PrintDesignDataInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    collectionCreator(overrides?: CallOverrides): Promise<[string]>;

    createDrop(
      _uri: string,
      _creator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    deleteCollection(
      _collectionId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    deleteDrop(
      _dropId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getCollectionAcceptedTokens(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getCollectionAmount(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCollectionCommunityIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getCollectionCreator(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCollectionDropId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCollectionEncrypted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getCollectionFulfiller(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCollectionOrigin(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getCollectionPrices(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getCollectionPrintType(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getCollectionProfileId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCollectionPubId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCollectionSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    getCollectionTokenIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getCollectionTokensMinted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCollectionURI(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getCollectionUnlimited(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getDropCollectionIds(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getDropCreator(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getDropSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    getDropURI(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getIsCollectionTokenAccepted(
      _collectionId: BigNumberish,
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getTokenCollection(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTokenId(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTokenIndex(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTokenSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    getTokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    modifyCollectionsInDrop(
      _collectionIds: BigNumberish[],
      _uri: string,
      _dropId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    name(overrides?: CallOverrides): Promise<[string]>;

    nftCreator(overrides?: CallOverrides): Promise<[string]>;

    printAccessControl(overrides?: CallOverrides): Promise<[string]>;

    setCollection(
      _collectionData: PrintLibrary.CollectionStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setCollectionCreatorAddress(
      _newCollectionCreatorAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setCollectionMintedTokens(
      _collectionId: BigNumberish,
      _mintedTokens: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setCollectionTokenIds(
      _collectionId: BigNumberish,
      _newTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setNFT(
      _tokenData: PrintLibrary.TokenStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setNFTCreatorAddress(
      _newNFTCreatorAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setPrintAccessControlAddress(
      _newPrintAccessControlAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    symbol(overrides?: CallOverrides): Promise<[string]>;
  };

  collectionCreator(overrides?: CallOverrides): Promise<string>;

  createDrop(
    _uri: string,
    _creator: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  deleteCollection(
    _collectionId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  deleteDrop(
    _dropId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getCollectionAcceptedTokens(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getCollectionAmount(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCollectionCommunityIds(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getCollectionCreator(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getCollectionDropId(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCollectionEncrypted(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getCollectionFulfiller(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getCollectionOrigin(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getCollectionPrices(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getCollectionPrintType(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getCollectionProfileId(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCollectionPubId(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCollectionSupply(overrides?: CallOverrides): Promise<BigNumber>;

  getCollectionTokenIds(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getCollectionTokensMinted(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCollectionURI(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getCollectionUnlimited(
    _collectionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getDropCollectionIds(
    _dropId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getDropCreator(
    _dropId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getDropSupply(overrides?: CallOverrides): Promise<BigNumber>;

  getDropURI(_dropId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  getIsCollectionTokenAccepted(
    _collectionId: BigNumberish,
    _tokenAddress: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getTokenCollection(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTokenId(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTokenIndex(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTokenSupply(overrides?: CallOverrides): Promise<BigNumber>;

  getTokenURI(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  modifyCollectionsInDrop(
    _collectionIds: BigNumberish[],
    _uri: string,
    _dropId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  name(overrides?: CallOverrides): Promise<string>;

  nftCreator(overrides?: CallOverrides): Promise<string>;

  printAccessControl(overrides?: CallOverrides): Promise<string>;

  setCollection(
    _collectionData: PrintLibrary.CollectionStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setCollectionCreatorAddress(
    _newCollectionCreatorAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setCollectionMintedTokens(
    _collectionId: BigNumberish,
    _mintedTokens: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setCollectionTokenIds(
    _collectionId: BigNumberish,
    _newTokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setNFT(
    _tokenData: PrintLibrary.TokenStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setNFTCreatorAddress(
    _newNFTCreatorAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setPrintAccessControlAddress(
    _newPrintAccessControlAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  symbol(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    collectionCreator(overrides?: CallOverrides): Promise<string>;

    createDrop(
      _uri: string,
      _creator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    deleteCollection(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    deleteDrop(_dropId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    getCollectionAcceptedTokens(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getCollectionAmount(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionCommunityIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getCollectionCreator(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getCollectionDropId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionEncrypted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getCollectionFulfiller(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getCollectionOrigin(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getCollectionPrices(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getCollectionPrintType(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getCollectionProfileId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionPubId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionSupply(overrides?: CallOverrides): Promise<BigNumber>;

    getCollectionTokenIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getCollectionTokensMinted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionURI(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getCollectionUnlimited(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getDropCollectionIds(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getDropCreator(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getDropSupply(overrides?: CallOverrides): Promise<BigNumber>;

    getDropURI(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getIsCollectionTokenAccepted(
      _collectionId: BigNumberish,
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getTokenCollection(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenId(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenIndex(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenSupply(overrides?: CallOverrides): Promise<BigNumber>;

    getTokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    modifyCollectionsInDrop(
      _collectionIds: BigNumberish[],
      _uri: string,
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    name(overrides?: CallOverrides): Promise<string>;

    nftCreator(overrides?: CallOverrides): Promise<string>;

    printAccessControl(overrides?: CallOverrides): Promise<string>;

    setCollection(
      _collectionData: PrintLibrary.CollectionStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setCollectionCreatorAddress(
      _newCollectionCreatorAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollectionMintedTokens(
      _collectionId: BigNumberish,
      _mintedTokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollectionTokenIds(
      _collectionId: BigNumberish,
      _newTokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setNFT(
      _tokenData: PrintLibrary.TokenStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setNFTCreatorAddress(
      _newNFTCreatorAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPrintAccessControlAddress(
      _newPrintAccessControlAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    symbol(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "CollectionCreated(uint256,uint256,uint256,string,uint256,address)"(
      collectionId?: BigNumberish | null,
      pubId?: null,
      profileId?: null,
      uri?: null,
      amount?: null,
      owner?: null
    ): CollectionCreatedEventFilter;
    CollectionCreated(
      collectionId?: BigNumberish | null,
      pubId?: null,
      profileId?: null,
      uri?: null,
      amount?: null,
      owner?: null
    ): CollectionCreatedEventFilter;

    "CollectionDeleted(uint256)"(
      collectionId?: null
    ): CollectionDeletedEventFilter;
    CollectionDeleted(collectionId?: null): CollectionDeletedEventFilter;

    "CollectionMintedTokensSet(uint256,uint256)"(
      collectionId?: BigNumberish | null,
      mintedTokensAmount?: null
    ): CollectionMintedTokensSetEventFilter;
    CollectionMintedTokensSet(
      collectionId?: BigNumberish | null,
      mintedTokensAmount?: null
    ): CollectionMintedTokensSetEventFilter;

    "CollectionTokenIdsSet(uint256,uint256[])"(
      collectionId?: BigNumberish | null,
      tokenIds?: null
    ): CollectionTokenIdsSetEventFilter;
    CollectionTokenIdsSet(
      collectionId?: BigNumberish | null,
      tokenIds?: null
    ): CollectionTokenIdsSetEventFilter;

    "DropCollectionsUpdated(uint256,uint256[],uint256[],string)"(
      dropId?: null,
      collectionIds?: null,
      oldCollectionIds?: null,
      uri?: null
    ): DropCollectionsUpdatedEventFilter;
    DropCollectionsUpdated(
      dropId?: null,
      collectionIds?: null,
      oldCollectionIds?: null,
      uri?: null
    ): DropCollectionsUpdatedEventFilter;

    "DropCreated(uint256,string,address)"(
      dropId?: null,
      uri?: null,
      creator?: null
    ): DropCreatedEventFilter;
    DropCreated(
      dropId?: null,
      uri?: null,
      creator?: null
    ): DropCreatedEventFilter;

    "DropDeleted(uint256)"(dropId?: null): DropDeletedEventFilter;
    DropDeleted(dropId?: null): DropDeletedEventFilter;

    "TokensMinted(uint256,uint256)"(
      tokenId?: BigNumberish | null,
      collectionId?: null
    ): TokensMintedEventFilter;
    TokensMinted(
      tokenId?: BigNumberish | null,
      collectionId?: null
    ): TokensMintedEventFilter;
  };

  estimateGas: {
    collectionCreator(overrides?: CallOverrides): Promise<BigNumber>;

    createDrop(
      _uri: string,
      _creator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    deleteCollection(
      _collectionId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    deleteDrop(
      _dropId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getCollectionAcceptedTokens(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionAmount(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionCommunityIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionCreator(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionDropId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionEncrypted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionFulfiller(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionOrigin(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionPrices(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionPrintType(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionProfileId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionPubId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionSupply(overrides?: CallOverrides): Promise<BigNumber>;

    getCollectionTokenIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionTokensMinted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionURI(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCollectionUnlimited(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDropCollectionIds(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDropCreator(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDropSupply(overrides?: CallOverrides): Promise<BigNumber>;

    getDropURI(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIsCollectionTokenAccepted(
      _collectionId: BigNumberish,
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenCollection(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenId(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenIndex(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenSupply(overrides?: CallOverrides): Promise<BigNumber>;

    getTokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    modifyCollectionsInDrop(
      _collectionIds: BigNumberish[],
      _uri: string,
      _dropId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    nftCreator(overrides?: CallOverrides): Promise<BigNumber>;

    printAccessControl(overrides?: CallOverrides): Promise<BigNumber>;

    setCollection(
      _collectionData: PrintLibrary.CollectionStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setCollectionCreatorAddress(
      _newCollectionCreatorAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setCollectionMintedTokens(
      _collectionId: BigNumberish,
      _mintedTokens: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setCollectionTokenIds(
      _collectionId: BigNumberish,
      _newTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setNFT(
      _tokenData: PrintLibrary.TokenStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setNFTCreatorAddress(
      _newNFTCreatorAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setPrintAccessControlAddress(
      _newPrintAccessControlAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    collectionCreator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    createDrop(
      _uri: string,
      _creator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    deleteCollection(
      _collectionId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    deleteDrop(
      _dropId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getCollectionAcceptedTokens(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionAmount(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionCommunityIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionCreator(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionDropId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionEncrypted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionFulfiller(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionOrigin(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionPrices(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionPrintType(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionProfileId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionPubId(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionSupply(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionTokenIds(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionTokensMinted(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionURI(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCollectionUnlimited(
      _collectionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDropCollectionIds(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDropCreator(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDropSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getDropURI(
      _dropId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIsCollectionTokenAccepted(
      _collectionId: BigNumberish,
      _tokenAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenCollection(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenId(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenIndex(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTokenURI(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    modifyCollectionsInDrop(
      _collectionIds: BigNumberish[],
      _uri: string,
      _dropId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    nftCreator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    printAccessControl(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setCollection(
      _collectionData: PrintLibrary.CollectionStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setCollectionCreatorAddress(
      _newCollectionCreatorAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setCollectionMintedTokens(
      _collectionId: BigNumberish,
      _mintedTokens: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setCollectionTokenIds(
      _collectionId: BigNumberish,
      _newTokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setNFT(
      _tokenData: PrintLibrary.TokenStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setNFTCreatorAddress(
      _newNFTCreatorAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setPrintAccessControlAddress(
      _newPrintAccessControlAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
