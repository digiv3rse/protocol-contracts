/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace Types {
  export type CommentParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type CommentParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type MirrorParamsStruct = {
    profileId: BigNumberish;
    metadataURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
  };

  export type MirrorParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string
  ] & {
    profileId: BigNumber;
    metadataURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
  };

  export type PostParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type PostParamsStructOutput = [
    BigNumber,
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type QuoteParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type QuoteParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };
}

export interface PublicationLibInterface extends utils.Interface {
  functions: {
    "getContentURI(uint256,uint256)": FunctionFragment;
  };

  getFunction(nameOrSignatureOrTopic: "getContentURI"): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getContentURI",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getContentURI",
    data: BytesLike
  ): Result;

  events: {
    "CommentCreated((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),uint256,bytes,bytes[],bytes,address,uint256)": EventFragment;
    "MirrorCreated((uint256,string,uint256,uint256,uint256[],uint256[],bytes),uint256,bytes,address,uint256)": EventFragment;
    "PostCreated((uint256,string,address[],bytes[],address,bytes),uint256,bytes[],bytes,address,uint256)": EventFragment;
    "QuoteCreated((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),uint256,bytes,bytes[],bytes,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CommentCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MirrorCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PostCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "QuoteCreated"): EventFragment;
}

export interface CommentCreatedEventObject {
  commentParams: Types.CommentParamsStructOutput;
  pubId: BigNumber;
  referenceModuleReturnData: string;
  actionModulesInitReturnDatas: string[];
  referenceModuleInitReturnData: string;
  transactionExecutor: string;
  timestamp: BigNumber;
}
export type CommentCreatedEvent = TypedEvent<
  [
    Types.CommentParamsStructOutput,
    BigNumber,
    string,
    string[],
    string,
    string,
    BigNumber
  ],
  CommentCreatedEventObject
>;

export type CommentCreatedEventFilter = TypedEventFilter<CommentCreatedEvent>;

export interface MirrorCreatedEventObject {
  mirrorParams: Types.MirrorParamsStructOutput;
  pubId: BigNumber;
  referenceModuleReturnData: string;
  transactionExecutor: string;
  timestamp: BigNumber;
}
export type MirrorCreatedEvent = TypedEvent<
  [Types.MirrorParamsStructOutput, BigNumber, string, string, BigNumber],
  MirrorCreatedEventObject
>;

export type MirrorCreatedEventFilter = TypedEventFilter<MirrorCreatedEvent>;

export interface PostCreatedEventObject {
  postParams: Types.PostParamsStructOutput;
  pubId: BigNumber;
  actionModulesInitReturnDatas: string[];
  referenceModuleInitReturnData: string;
  transactionExecutor: string;
  timestamp: BigNumber;
}
export type PostCreatedEvent = TypedEvent<
  [
    Types.PostParamsStructOutput,
    BigNumber,
    string[],
    string,
    string,
    BigNumber
  ],
  PostCreatedEventObject
>;

export type PostCreatedEventFilter = TypedEventFilter<PostCreatedEvent>;

export interface QuoteCreatedEventObject {
  quoteParams: Types.QuoteParamsStructOutput;
  pubId: BigNumber;
  referenceModuleReturnData: string;
  actionModulesInitReturnDatas: string[];
  referenceModuleInitReturnData: string;
  transactionExecutor: string;
  timestamp: BigNumber;
}
export type QuoteCreatedEvent = TypedEvent<
  [
    Types.QuoteParamsStructOutput,
    BigNumber,
    string,
    string[],
    string,
    string,
    BigNumber
  ],
  QuoteCreatedEventObject
>;

export type QuoteCreatedEventFilter = TypedEventFilter<QuoteCreatedEvent>;

export interface PublicationLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PublicationLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  getContentURI(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    "CommentCreated((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),uint256,bytes,bytes[],bytes,address,uint256)"(
      commentParams?: null,
      pubId?: BigNumberish | null,
      referenceModuleReturnData?: null,
      actionModulesInitReturnDatas?: null,
      referenceModuleInitReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): CommentCreatedEventFilter;
    CommentCreated(
      commentParams?: null,
      pubId?: BigNumberish | null,
      referenceModuleReturnData?: null,
      actionModulesInitReturnDatas?: null,
      referenceModuleInitReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): CommentCreatedEventFilter;

    "MirrorCreated((uint256,string,uint256,uint256,uint256[],uint256[],bytes),uint256,bytes,address,uint256)"(
      mirrorParams?: null,
      pubId?: BigNumberish | null,
      referenceModuleReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): MirrorCreatedEventFilter;
    MirrorCreated(
      mirrorParams?: null,
      pubId?: BigNumberish | null,
      referenceModuleReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): MirrorCreatedEventFilter;

    "PostCreated((uint256,string,address[],bytes[],address,bytes),uint256,bytes[],bytes,address,uint256)"(
      postParams?: null,
      pubId?: BigNumberish | null,
      actionModulesInitReturnDatas?: null,
      referenceModuleInitReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): PostCreatedEventFilter;
    PostCreated(
      postParams?: null,
      pubId?: BigNumberish | null,
      actionModulesInitReturnDatas?: null,
      referenceModuleInitReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): PostCreatedEventFilter;

    "QuoteCreated((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),uint256,bytes,bytes[],bytes,address,uint256)"(
      quoteParams?: null,
      pubId?: BigNumberish | null,
      referenceModuleReturnData?: null,
      actionModulesInitReturnDatas?: null,
      referenceModuleInitReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): QuoteCreatedEventFilter;
    QuoteCreated(
      quoteParams?: null,
      pubId?: BigNumberish | null,
      referenceModuleReturnData?: null,
      actionModulesInitReturnDatas?: null,
      referenceModuleInitReturnData?: null,
      transactionExecutor?: null,
      timestamp?: null
    ): QuoteCreatedEventFilter;
  };

  estimateGas: {
    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
