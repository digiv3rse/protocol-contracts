/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBaseFeeCollectModule,
  IBaseFeeCollectModuleInterface,
} from "../IBaseFeeCollectModule";

const _abi = [
  {
    type: "function",
    name: "calculateFee",
    inputs: [
      {
        name: "processCollectParams",
        type: "tuple",
        internalType: "struct ModuleTypes.ProcessCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBasePublicationData",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BaseProfilePublicationData",
        components: [
          {
            name: "amount",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "collectLimit",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "currentCollects",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "referralFee",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "followerOnly",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "endTimestamp",
            type: "uint72",
            internalType: "uint72",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializePublicationCollectModule",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "transactionExecutor",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "processCollect",
    inputs: [
      {
        name: "processCollectParams",
        type: "tuple",
        internalType: "struct ModuleTypes.ProcessCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IBaseFeeCollectModule__factory {
  static readonly abi = _abi;
  static createInterface(): IBaseFeeCollectModuleInterface {
    return new utils.Interface(_abi) as IBaseFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBaseFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IBaseFeeCollectModule;
  }
}
