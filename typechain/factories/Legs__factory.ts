/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Legs, LegsInterface } from "../Legs";

const _abi = [
  {
    type: "function",
    name: "getLegs",
    inputs: [
      {
        name: "legColor",
        type: "Legs.LegColors",
        internalType: "enum Legs.LegColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576108629081610020823930815050f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c635600a8631461002a57600080fd5b6020806003193601126106ce576004359060038210156106ca5761005061050e92610726565b84929192518091838201947f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323086527f30302f737667222077696474683d2232313022206865696768743d2233333522888401527f2066696c6c3d226e6f6e65223e3c7374796c653e2e6c6567436f6c6f7231207b6060840152643334b6361d60d91b60808401526100ea81518092876085870191016106d2565b8201721dbe973632b3a1b7b637b919103db334b6361d60691b608582015261011b82518093876098850191016106d2565b017f3b7d2e6c65675374726f6b65207b7374726f6b653a233030303b7374726f6b6560988201527f2d6c696e656361703a726f756e643b7374726f6b652d6d697465726c696d697460b88201527f3a31303b7d3c2f7374796c653e3c7061746820636c6173733d226c6567436f6c60d88201527f6f72312220643d226d37322e37203234392e382031362e3320352e342031362060f88201527f312e332031362d312e332031362e332d352e347633302e376c2d372e3520332e6101188201527f342d3820322e342d31362e382d342e342d31352e3420342e342d392e342d322e6101388201527f342d372e352d332e34762d33302e375a222f3e3c70617468207374726f6b653d6101588201527f222330303022207374726f6b652d6c696e656361703d22726f756e64222073746101788201527f726f6b652d6c696e656a6f696e3d22726f756e6422207374726f6b652d6461736101988201527f6861727261793d22332e393720332e393722207374726f6b652d77696474683d6101b88201527f22312e382220643d224d373920323738762d32322e334d3133312e35203237386101d88201527f762d32322e33222f3e3c7061746820636c6173733d226c6567436f6c6f7232226101f88201527f20643d226d37332e37203237362e372031352e3420342e382031352e392d342e6102188201527f382031352e3420342e382031352e392d342e3876352e376c2d313620332e392d6102388201527f31352e332d342e342d31352e3920342e392d31352e342d342e34762d352e375a6102588201527f222f3e3c7061746820636c6173733d226c65675374726f6b6522207374726f6b6102788201527f652d77696474683d22322e352220643d224d37342e37203238312e37613234206102988201527f32342030203020302032392e382d2e37222f3e3c7061746820636c6173733d226102b88201527f6c65675374726f6b6522207374726f6b652d77696474683d22332220643d224d6102d88201527f313035203238302e38762d31362e36222f3e3c7061746820636c6173733d226c6102f88201527f65675374726f6b6522207374726f6b652d77696474683d22342220643d224d376103188201527f342e312032353063302031302e3220302032302e342d2e322033302e396d36326103388201527f2d33302e382e312033302e38222f3e3c7061746820636c6173733d226c6567536103588201527f74726f6b6522207374726f6b652d77696474683d22332220643d224d37342e336103788201527f203234392e326135372e382035372e382030203020302033302e3220372e38636103988201527f31302e3720302032312e372d322e342033312d372e38222f3e3c7061746820636103b88201527f6c6173733d226c65675374726f6b6522207374726f6b652d77696474683d22316103d88201527f2e382220643d224d31303920323633732d322e342e342d34202e342d342d2e346103f88201527f2d342d2e34222f3e3c7061746820636c6173733d226c65675374726f6b6522206104188201527f7374726f6b652d77696474683d22322e352220643d224d3133352e33203238316104388201527f2e376132342e372032342e372030203020312d33302e332d2e374d37342e37206104588201527f3237362e346132342032342030203020302032392e382d2e37222f3e3c7061746104788201527f6820636c6173733d226c65675374726f6b6522207374726f6b652d77696474686104988201527f3d22322e352220643d224d3133352e33203237362e346132342e372032342e376104b882015276101810181018969998171996971b91179f1e17b9bb339f60491b6104d8820152036104cf81018252601f19948591011681019581871060018060401b038811176106b65750916106ad601f928795948688528187525192838092880152878701906106d2565b01168101030190f35b634e487b7160e01b81526041600452602490fd5b8380fd5b8280fd5b60005b8381106106e55750506000910152565b81810151838201526020016106d5565b604081019081106001600160401b0382111761071057604052565b634e487b7160e01b600052604160045260246000fd5b600381101561081657806107795750604051610741816106f5565b600781526608ce4cd04e4dd160ca1b602082015290604051610762816106f5565b60078152662346344646444360c81b602082015290565b600181036107c6575060405161078e816106f5565b60078152662335373537353760c81b6020820152906040516107af816106f5565b600781526611a2212221222160c91b602082015290565b600203610811576040516107d9816106f5565b60078152662345414541454160c81b6020820152906040516107fa816106f5565b600781526611a3232323232360c91b602082015290565b600080fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212202a482c87686c9de316703d1a7de362059e8227b47324c5d4bb322031597557fe64736f6c63430008150033";

type LegsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LegsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Legs__factory extends ContractFactory {
  constructor(...args: LegsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Legs> {
    return super.deploy(overrides || {}) as Promise<Legs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Legs {
    return super.attach(address) as Legs;
  }
  override connect(signer: Signer): Legs__factory {
    return super.connect(signer) as Legs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegsInterface {
    return new utils.Interface(_abi) as LegsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Legs {
    return new Contract(address, _abi, signerOrProvider) as Legs;
  }
}
