/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProfileCreationProxy,
  ProfileCreationProxyInterface,
} from "../ProfileCreationProxy";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "hub",
        type: "address",
        internalType: "address",
      },
      {
        name: "digiHandles",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenHandleRegistry",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DIGI_HUB",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "OWNER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxyCreateHandle",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "handle",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proxyCreateProfile",
    inputs: [
      {
        name: "createProfileParams",
        type: "tuple",
        internalType: "struct Types.CreateProfileParams",
        components: [
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "followModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "followModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proxyCreateProfileWithHandle",
    inputs: [
      {
        name: "createProfileParams",
        type: "tuple",
        internalType: "struct Types.CreateProfileParams",
        components: [
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "followModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "followModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "handle",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "OnlyOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyOwnerOrHub",
    inputs: [],
  },
  {
    type: "error",
    name: "ProfileAlreadyExists",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x610100346100e357601f610a6b38819003918201601f19168301916001600160401b038311848410176100e8578084926080946040528339810103126100e357610048816100fe565b610054602083016100fe565b61006c6060610065604086016100fe565b94016100fe565b60809290925260a0526001600160a01b0391821660c0521660e05260405161095890816101138239608051818181609c015281816102660152818161042f01526107fe015260a051818181610145015281816101ed015261048c015260c0518181816102b4015261055c015260e051816105ae0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e35756fe60806040908082526004918236101561001757600080fd5b600091823560e01c908163117803e3146107ea5750806350d425f91461033f578063ac6711581461021c578063e6fe34a5146101d95763fcaba76b1461005c57600080fd5b346101d5576020926003199084823601126101d1578035906001600160401b03908183116101ba576060833603948501126101ba576001600160a01b03927f0000000000000000000000000000000000000000000000000000000000000000841633036101c257855163560a4db160e01b815282810189905294846100e2838501610879565b166024870152846100f560248401610879565b166044870152604482013590602219018112156101be570160248101929101359081116101ba5780360382136101ba579183868161014181958b976060606485015260848401916108ba565b03927f0000000000000000000000000000000000000000000000000000000000000000165af19283156101af579261017b575b5051908152f35b9091508281813d83116101a8575b6101938183610856565b810103126101a357519038610174565b600080fd5b503d610189565b8251903d90823e3d90fd5b8580fd5b8780fd5b508451635fc483c560e01b8152fd5b8380fd5b5080fd5b50346101d557816003193601126101d557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461033c578160031936011261033c576001600160a01b0391833583811681036101a3576024356001600160401b0381116101d157610260903690870161088d565b949091817f000000000000000000000000000000000000000000000000000000000000000016330361032c5784849596976102b060209651998a968795869463784747af60e11b865285016108db565b03927f0000000000000000000000000000000000000000000000000000000000000000165af191821561032157916102ed575b6020925051908152f35b90506020823d8211610319575b8161030760209383610856565b810103126101a35760209151906102e3565b3d91506102fa565b9051903d90823e3d90fd5b8351635fc483c560e01b81528790fd5b80fd5b50346101d55760031991818336011261033c576001600160401b03928435908482116107e65760609082360301126101d55782519160608301838110868211176107d3578452610390828701610879565b83526024946103a0868401610879565b9660209384860198895260448101359083821161069f570191366023840112156101d15781830135908082116107c157601f19918851946103e88885601f8501160187610856565b818652368b83830101116106d4578187928c8a93018389013786010152878701938452883590811161069f57610421903690840161088d565b9890916001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036107b1578a8a516104856025828c642e6469676960d81b81830196808c8937830191820152036005810184520182610856565b51902095827f000000000000000000000000000000000000000000000000000000000000000016968b519063019e140760e41b825287820152898186818b5afa9081156107a7578991610776575b5061076657988899918b9c9d9284809d9a9b94818551169b308652519e8f9563560a4db160e01b8752878c8801525116888601525116604484015251606060648401528051908160848501528b5b82811061074c57505060a491601f828d85879586010152011681010301818a895af1988915610742578799610711575b5087610597999a9b827f000000000000000000000000000000000000000000000000000000000000000016948d519b8c92839263784747af60e11b8452308a85016108db565b03818a875af19889156107075787996106d8575b507f000000000000000000000000000000000000000000000000000000000000000016803b156106d457899160448a8980948f5196879586946386cf48e760e01b86528b8601528401525af180156106b7576106c1575b50803b1561069f5788516323b872dd60e01b808252918690829081838161062d8e8c308c8501610900565b03925af180156106b7579086916106a3575b5050823b1561069f57918793918580946106668c5197889687958694855230908501610900565b03925af1801561069557610681575b50508351928352820152f35b61068b829161082d565b61033c5780610675565b86513d84823e3d90fd5b8480fd5b6106ac9061082d565b61069f57843861063f565b8a513d88823e3d90fd5b6106cd9095919561082d565b9338610602565b8680fd5b9098508781813d8311610700575b6106f08183610856565b810103126106d4575197386105ab565b503d6106e6565b8b513d89823e3d90fd5b9a9850878b813d831161073b575b6107298183610856565b810103126106d4579951979987610551565b503d61071f565b8a513d89823e3d90fd5b81810186015194810160a401949094528c948e9401610521565b8a516337450d8560e11b81528690fd5b90508981813d83116107a0575b61078d8183610856565b8101031261079c5751386104d3565b8880fd5b503d610783565b8c513d8b823e3d90fd5b8951635fc483c560e01b81528590fd5b634e487b7160e01b8552604183528885fd5b634e487b7160e01b825260418752602482fd5b8280fd5b8390346101d557816003193601126101d5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b6001600160401b03811161084057604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761084057604052565b35906001600160a01b03821682036101a357565b9181601f840112156101a3578235916001600160401b0383116101a357602083818601950101116101a357565b908060209392818452848401376000828201840152601f01601f1916010190565b6001600160a01b0390911681526040602082018190526108fd939101916108ba565b90565b6001600160a01b0391821681529116602082015260408101919091526060019056fea2646970667358221220fab2246365beb9a95f58067cfec901916d99eaaa6a11b8283cb92b6ce679721664736f6c63430008150033";

type ProfileCreationProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfileCreationProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProfileCreationProxy__factory extends ContractFactory {
  constructor(...args: ProfileCreationProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: string,
    hub: string,
    digiHandles: string,
    tokenHandleRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ProfileCreationProxy> {
    return super.deploy(
      owner,
      hub,
      digiHandles,
      tokenHandleRegistry,
      overrides || {}
    ) as Promise<ProfileCreationProxy>;
  }
  override getDeployTransaction(
    owner: string,
    hub: string,
    digiHandles: string,
    tokenHandleRegistry: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      hub,
      digiHandles,
      tokenHandleRegistry,
      overrides || {}
    );
  }
  override attach(address: string): ProfileCreationProxy {
    return super.attach(address) as ProfileCreationProxy;
  }
  override connect(signer: Signer): ProfileCreationProxy__factory {
    return super.connect(signer) as ProfileCreationProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfileCreationProxyInterface {
    return new utils.Interface(_abi) as ProfileCreationProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProfileCreationProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProfileCreationProxy;
  }
}
