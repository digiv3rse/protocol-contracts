/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ERC2981CollectionRoyalties,
  ERC2981CollectionRoyaltiesInterface,
} from "../ERC2981CollectionRoyalties";

const _abi = [
  {
    type: "function",
    name: "royaltyInfo",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "salePrice",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setRoyalty",
    inputs: [
      {
        name: "royaltiesInBasisPoints",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "InvalidParameter",
    inputs: [],
  },
] as const;

export class ERC2981CollectionRoyalties__factory {
  static readonly abi = _abi;
  static createInterface(): ERC2981CollectionRoyaltiesInterface {
    return new utils.Interface(_abi) as ERC2981CollectionRoyaltiesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC2981CollectionRoyalties {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC2981CollectionRoyalties;
  }
}
