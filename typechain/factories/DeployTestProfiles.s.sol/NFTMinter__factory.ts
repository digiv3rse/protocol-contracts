/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMinter,
  NFTMinterInterface,
} from "../../DeployTestProfiles.s.sol/NFTMinter";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "blockSeed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokenURI",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "mintTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mintFuzz",
    inputs: [
      {
        name: "seed",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "n",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintMany",
    inputs: [
      {
        name: "tokenIdFrom",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenIdTo",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60a0346200035f576001600160401b03906040908082018381118282101762000349578252600d81526020926c15195cdd08141c9bdd1bd8dbdb609a1b8483015282518381018181108382111762000349578452600480825263151154d560e21b86830152600019918243014381116200033457406080528451918483116200031f576000908154936001978886811c9616801562000314575b8b871014620003015781908b601f97888111620002ab575b50508b90878311600114620002465785926200023a575b505086828a1b9260031b1c19161782555b825195861162000227578654908782811c921680156200021c575b8a831014620002095750838111620001c1575b50879285116001146200015a578495969750936200014e575b505082841b9260031b1c19161790555b5161186f90816200036582396080518181816105290152610a2c0152f35b01519150388062000120565b929190601f1985169786855280852094905b898210620001a9575050848697981062000190575b50505050811b01905562000130565b01519060f88460031b161c191690553880808062000181565b8088859782949686015181550196019301906200016c565b8682528882208480880160051c8201928b8910620001ff575b0160051c019087905b828110620001f357505062000107565b838155018790620001e3565b92508192620001da565b634e487b7160e01b835260229052602482fd5b91607f1691620000f4565b634e487b7160e01b825260419052602490fd5b015190503880620000c8565b8580528c86208b94509190601f198416878f5b82821062000291575050841162000279575b505050811b018255620000d9565b01518860f88460031b161c191690553880806200026b565b8484015186558e9790950194938401939081019062000259565b90919250858052878287209181860160051c8301938610620002f7575b918c91869594930160051c01915b828110620002e857508d9150620000b1565b8781558594508c9101620002d6565b92508192620002c8565b634e487b7160e01b845260228352602484fd5b95607f169562000099565b604190634e487b7160e01b6000525260246000fd5b601183634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461080e5750816306fdde0314610761578163081812fc14610741578163095ea7b3146105d357816323b872dd146105a95781633f8334ef1461057557816342842e0e1461054c578163430e9e1a146105115781636352211e146104e057816370a082311461044a57816395d89b4114610352578163a22cb46514610286578163ad22a3f214610269578163b88d4fde146101db578163c87b56dd1461019e57508063e985e9c5146101515763f9cc7374146100e057600080fd5b3461014d576100ee36610927565b91835b8381106100fc578480f35b610138906201fbd083516020810190868252838682015285815261011f8161096e565b5190200661012c81611317565b1561013d575b50611708565b6100f1565b6101479033611762565b38610132565b5080fd5b503461014d578060031936011261014d5760ff816020936101706108c1565b6101786108dc565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b8284346101d85760203660031901126101d857506101c16101d492429035610a0c565b905191829160208352602083019061089c565b0390f35b80fd5b91905034610265576080366003190112610265576101f76108c1565b6101ff6108dc565b6064359385906001600160401b03861161014d573660238701121561014d578501359461023761022e876109ac565b95519586610989565b858552366024878301011161014d5785610262966024602093018388013785010152604435916110b8565b80f35b8280fd5b50503461014d576101d4906101c161028036610927565b90610a0c565b919050346102655780600319360112610265576102a16108c1565b906024359182151580930361034e576001600160a01b0316923384146103105750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b8480fd5b8284346101d857806003193601126101d8578151918160019283549384811c91818616958615610440575b602096878510811461042d578899509688969785829a5291826000146104065750506001146103c9575b5050506101d492916103ba910385610989565b5192828493845283019061089c565b91908693508083528383205b8284106103ee57505050820101816103ba6101d46103a7565b8054848a0186015288955087949093019281016103d5565b60ff19168782015293151560051b860190930193508492506103ba91506101d490506103a7565b634e487b7160e01b835260228a52602483fd5b92607f169261037d565b8391503461014d57602036600319011261014d576001600160a01b0361046e6108c1565b1690811561048b5760208480858581526003845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b8284346101d85760203660031901126101d8575061050060209235611007565b90516001600160a01b039091168152f35b50503461014d578160031936011261014d57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461014d5761026290610560366108f2565b9192519261056d8461093d565b8584526110b8565b83346101d85761058436610927565b905b818110610591578280f35b8061059f6105a49233611762565b611708565b610586565b83346101d8576102626105bb366108f2565b916105ce6105c98433611153565b611056565b61121b565b9050346102655781600319360112610265576105ed6108c1565b6024359290916001600160a01b039190828061060887611007565b169416938085146106f4578033149081156106d5575b501561066d57848652602052842080546001600160a01b0319168317905561064583611007565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff82872054163861061e565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b8284346101d85760203660031901126101d857506105006020923561102a565b8284346101d857806003193601126101d85781519181825492600184811c91818616958615610804575b602096878510811461042d578899509688969785829a5291826000146104065750506001146107c7575050506101d492916103ba910385610989565b91908693508280528383205b8284106107ec57505050820101816103ba6101d46103a7565b8054848a0186015288955087949093019281016107d3565b92607f169261078b565b849134610265576020366003190112610265573563ffffffff60e01b811680910361026557602092506380ac58cd60e01b8114908115610868575b8115610857575b5015158152f35b6301ffc9a760e01b14905083610850565b635b5e139f60e01b81149150610849565b60005b83811061088c5750506000910152565b818101518382015260200161087c565b906020916108b581518092818552858086019101610879565b601f01601f1916010190565b600435906001600160a01b03821682036108d757565b600080fd5b602435906001600160a01b03821682036108d757565b60609060031901126108d7576001600160a01b039060043582811681036108d7579160243590811681036108d7579060443590565b60409060031901126108d7576004359060243590565b602081019081106001600160401b0382111761095857604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761095857604052565b601f909101601f19168101906001600160401b0382119082101761095857604052565b6001600160401b03811161095857601f01601f191660200190565b81601f820112156108d75780516109dd816109ac565b926109eb6040519485610989565b818452602082840101116108d757610a099160208085019101610879565b90565b610a15816115cb565b906040519263806c6aeb60e01b84528160048501527f0000000000000000000000000000000000000000000000000000000000000000602485015260008460448173__$87fea527f71e704e93a97640bdbae8fcd3$__5af4938415610fb457600090600095610f53575b50610a8990611485565b610b6760816040518093717b226e616d65223a2250726f66696c65202360701b60208301528751610ac1816032850160208c01610879565b82017f222c226465736372697074696f6e223a22446947692050726f746f636f6c202d6032820152692050726f66696c65202360b01b6052820152885190610b1082605c830160208d01610879565b017f222c22696d616765223a22646174613a696d6167652f7376672b786d6c3b6261605c820152641cd94d8d0b60da1b607c820152610b588251809360208785019101610879565b01036061810184520182610989565b6001836000908560801c80610f47575b508060401c80610f3a575b508060201c80610f2d575b508060101c80610f20575b5060081c610f19575b01926001600160ff1b0384168403610eed5760028460011b018460011b11610eed57610bd260028560011b016109ac565b93610be06040519586610989565b600181901b600201808652610bf4906109ac565b601f1901366020870137845115610f035760306020860153845160011015610f035760786021860153600181811b01809160011b11610eed575b60018111610ea45750610e6057610e0d94610e089360eb93610c59610c5388516115cb565b916115cb565b916040519785610c738a975180926020808b019101610879565b86017f222c2261747472696275746573223a5b7b22646973706c61795f74797065223a60208201527f226e756d626572222c2274726169745f74797065223a224944222c2276616c7560408201526332911d1160e11b6060820152610ce2825180936020606485019101610879565b01907f227d2c7b2274726169745f74797065223a22484558204944222c2276616c7565606483015262111d1160e91b91826084820152610d2c825180936020608785019101610879565b01907f227d2c7b2274726169745f74797065223a22444947495453222c2276616c7565608783015260a7820152610d6d82518093602060aa85019101610879565b017f227d2c7b22646973706c61795f74797065223a2264617465222c22747261697460aa8201527b2fba3cb832911d1126a4a72a22a21020aa1116113b30b63ab2911d1160211b60ca820152610dcd82518093602060e685019101610879565b0162089f4b60ea1b60e6820152610dee82518093602060e985019101610879565b01615d7d60f01b60e98201520360cb810184520182610989565b611485565b610a09603d60405180937f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006020830152610e508151809260208686019101610879565b810103601d810184520182610989565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b906010600f82161015610f03578451821015610f03576f181899199a1a9b1b9c1cb0b131b232b360811b600f82161a8583016020015360041c908015610eed5760001901610c2e565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8101610ba1565b6002915091019038610b98565b6004915091019038610b8d565b6008915091019038610b82565b91505060109038610b77565b9450503d806000863e610f668186610989565b8401936040818603126108d75780516001600160401b0391908281116108d75786610f929183016109c7565b9560208201519283116108d757610a8992610fad92016109c7565b9490610a7f565b6040513d6000823e3d90fd5b15610fc757565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b0316610a09811515610fc0565b61103b61103682611317565b610fc0565b6000908152600460205260409020546001600160a01b031690565b1561105d57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b906110dc9392916110cc6105c98433611153565b6110d783838361121b565b611334565b156110e357565b60405162461bcd60e51b8152806110fc60048201611100565b0390fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b906001600160a01b03808061116784611007565b1693169183831493841561119a575b508315611184575b50505090565b6111909192935061102a565b161438808061117e565b909350600052600560205260406000208260005260205260ff604060002054169238611176565b156111c857565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b906112439161122984611007565b6001600160a01b03939184169284929091831684146111c1565b169182156112c657816112609161125986611007565b16146111c1565b60008051602061181a833981519152600084815260046020526040812060018060a01b03199081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6000908152600260205260409020546001600160a01b0316151590565b9293919290803b15611449576113889460018060a01b039460405192839187630a85bd0160e11b9687855233600486015216602484015260448301526080606483015281806020998a95608483019061089c565b03916000988991165af1849181611409575b506113f8575050503d6000146113f0573d6113b4816109ac565b906113c26040519283610989565b81528091833d92013e5b805191826113ed5760405162461bcd60e51b8152806110fc60048201611100565b01fd5b5060606113cc565b6001600160e01b0319161492509050565b9091508581813d8311611442575b6114218183610989565b8101031261034e57516001600160e01b03198116810361034e57903861139a565b503d611417565b5050915050600190565b9061145d826109ac565b61146a6040519182610989565b828152809261147b601f19916109ac565b0190602036910137565b8051156115b7576040516114988161096e565b604081527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f60408201528151600292838201809211610eed576003918290046001600160fe1b0381168103610eed5761151a908594951b611453565b936020850193829183518401925b838110611566575050505051068060011461155357600214611548575090565b603d90600019015390565b50603d9081600019820153600119015390565b85600491979293949701918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c1688010151888501531685010151878201530195929190611528565b506040516115c48161093d565b6000815290565b6000908072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b808210156116fa575b506904ee2d6d415b85acef8160201b808310156116eb575b50662386f26fc10000808310156116dc575b506305f5e100808310156116cd575b50612710808310156116be575b5060648210156116ae575b600a809210156116a4575b60019081602161165c828701611453565b95860101905b61166e575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561169f57919082611662565b611667565b916001019161164b565b9190606460029104910191611640565b60049193920491019138611635565b60089193920491019138611628565b60109193920491019138611619565b60209193920491019138611607565b6040935081049150386115ef565b6000198114610eed5760010190565b1561171e57565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fd5b6001600160a01b031680156117d55761178361177d83611317565b15611717565b61178f61177d83611317565b6000818152600360209081526040808320805460010190558483526002909152812080546001600160a01b0319168317905560008051602061181a8339815191528180a4565b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220985c426b580a030e9986a88aa1234b774e81ecf4b5840050ae4bab5a3d760a0664736f6c63430008150033";

type NFTMinterConstructorParams =
  | [linkLibraryAddresses: NFTMinterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NFTMinter__factory extends ContractFactory {
  constructor(...args: NFTMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NFTMinter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: NFTMinterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$87fea527f71e704e93a97640bdbae8fcd3\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Profile/ProfileSVG.sol:ProfileSVG"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<NFTMinter> {
    return super.deploy(overrides || {}) as Promise<NFTMinter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMinter {
    return super.attach(address) as NFTMinter;
  }
  override connect(signer: Signer): NFTMinter__factory {
    return super.connect(signer) as NFTMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMinterInterface {
    return new utils.Interface(_abi) as NFTMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMinter {
    return new Contract(address, _abi, signerOrProvider) as NFTMinter;
  }
}

export interface NFTMinterLibraryAddresses {
  ["contracts/libraries/svgs/Profile/ProfileSVG.sol:ProfileSVG"]: string;
}
