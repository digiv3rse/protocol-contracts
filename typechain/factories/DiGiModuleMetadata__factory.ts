/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiGiModuleMetadata,
  DiGiModuleMetadataInterface,
} from "../DiGiModuleMetadata";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "owner_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60803461007057601f6106d538819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b60405161060290816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146103765750806303ee438c1461012b578063681591c1146101cf578063715018a6146101845780638da5cb5b1461015c578063ce90d52e1461012b5763f2fde38b1461007157600080fd5b34610127576020366003190112610127576001600160a01b03823581811693919290849003610123576100a2610554565b83156100d157505082546001600160a01b0319811683178455166000805160206105ad8339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b8382346101585781600319360112610158576101549061014961046b565b90519182918261050b565b0390f35b5080fd5b838234610158578160031936011261015857905490516001600160a01b039091168152602090f35b83346101cc57806003193601126101cc5761019d610554565b80546001600160a01b03198116825581906001600160a01b03166000805160206105ad8339815191528280a380f35b80fd5b509190346101585760209081600319360112610127578035936001600160401b03918286116101235736602387011215610123578581013583811161036357601f199251966102258685601f8501160189610432565b818852366024838301011161035f578187926024889301838b01378801015261024c610554565b855192831161034c575060019261026384546103f8565b601f8111610306575b508091601f84116001146102a857505083948293949261029d575b5050600019600383901b1c191690821b17905580f35b015190503880610287565b8392919216958486528286209286905b8882106102ef57505083859697106102d6575b505050811b01905580f35b015160001960f88460031b161c191690553880806102cb565b8087859682949686015181550195019301906102b8565b848652818620601f850160051c810191838610610342575b601f0160051c019085905b82811061033757505061026c565b878155018590610329565b909150819061031e565b634e487b7160e01b855260419052602484fd5b8680fd5b634e487b7160e01b865260418252602486fd5b84929150346101275760203660031901126101275783359163ffffffff60e01b91828416809403610123576a444947495f4d4f44554c4560a81b60208201908152600b8252828201959092906001600160401b038711838810176103e557506020965085905251902016148152f35b634e487b7160e01b815260418852602490fd5b90600182811c92168015610428575b602083101461041257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610407565b601f909101601f19168101906001600160401b0382119082101761045557604052565b634e487b7160e01b600052604160045260246000fd5b60405190600082600191825492610481846103f8565b9081845260209481811690816000146104eb57506001146104ad575b50506104ab92500383610432565b565b600081815285812095935091905b8183106104d35750506104ab9350820101388061049d565b855488840185015294850194879450918301916104bb565b9150506104ab94925060ff191682840152151560051b820101388061049d565b6020808252825181830181905290939260005b82811061054057505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161051e565b6000546001600160a01b0316330361056857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212203f18895dd5017d06533b1b1afc82fd13c696080e1b776231b8b8a4188d8409c664736f6c63430008150033";

type DiGiModuleMetadataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiGiModuleMetadataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiGiModuleMetadata__factory extends ContractFactory {
  constructor(...args: DiGiModuleMetadataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DiGiModuleMetadata> {
    return super.deploy(owner_, overrides || {}) as Promise<DiGiModuleMetadata>;
  }
  override getDeployTransaction(
    owner_: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override attach(address: string): DiGiModuleMetadata {
    return super.attach(address) as DiGiModuleMetadata;
  }
  override connect(signer: Signer): DiGiModuleMetadata__factory {
    return super.connect(signer) as DiGiModuleMetadata__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiGiModuleMetadataInterface {
    return new utils.Interface(_abi) as DiGiModuleMetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiGiModuleMetadata {
    return new Contract(address, _abi, signerOrProvider) as DiGiModuleMetadata;
  }
}
