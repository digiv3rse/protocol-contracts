/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleFeeCollectModule,
  SimpleFeeCollectModuleInterface,
} from "../SimpleFeeCollectModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "hub",
        type: "address",
        internalType: "address",
      },
      {
        name: "actionModule",
        type: "address",
        internalType: "address",
      },
      {
        name: "moduleRegistry",
        type: "address",
        internalType: "address",
      },
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ACTION_MODULE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_REGISTRY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IModuleRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculateFee",
    inputs: [
      {
        name: "processCollectParams",
        type: "tuple",
        internalType: "struct ModuleTypes.ProcessCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBasePublicationData",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BaseProfilePublicationData",
        components: [
          {
            name: "amount",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "collectLimit",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "currentCollects",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "referralFee",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "followerOnly",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "endTimestamp",
            type: "uint72",
            internalType: "uint72",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPublicationData",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BaseProfilePublicationData",
        components: [
          {
            name: "amount",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "collectLimit",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "currentCollects",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "referralFee",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "followerOnly",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "endTimestamp",
            type: "uint72",
            internalType: "uint72",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializePublicationCollectModule",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processCollect",
    inputs: [
      {
        name: "processCollectParams",
        type: "tuple",
        internalType: "struct ModuleTypes.ProcessCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CollectExpired",
    inputs: [],
  },
  {
    type: "error",
    name: "InitParamsInvalid",
    inputs: [],
  },
  {
    type: "error",
    name: "MintLimitExceeded",
    inputs: [],
  },
  {
    type: "error",
    name: "ModuleDataMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "NotActionModule",
    inputs: [],
  },
  {
    type: "error",
    name: "NotFollowing",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61010034620000f857601f6200181b38819003918201601f19168301916001600160401b03831184841017620000fd57808492608094604052833981010312620000f8578062000053620000a89262000113565b620000616020830162000113565b6200007d6060620000756040860162000113565b940162000113565b6001600160a01b0383811660805290931660a05260c05260e052620000a23362000128565b62000128565b6040516116a9908162000172823960805181611237015260a051818181610292015261059d015260c0518181816103250152818161076f0152610d59015260e0518181816109ee0152610b4e0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000f857565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610d885750816303ee438c1461024c578163397a2a8814610d445781633f50389214610d1e578163681591c114610b985781636fb7166114610752578163715018a6146107045781638da5cb5b146106db57816391027b53146102c1578163b95ddb521461027d578163ce90d52e1461024c578163f2fde38b1461018c57508063f8d7758c146101615763fcdd2347146100bf57600080fd5b3461015d57610159906100da6100d436610fb0565b9061109f565b90519182918291909160e061010082019360018060a01b03808251168452602082015160018060601b0380911660208601528160408401511660408601526060830151166060850152608082015116608084015261ffff60a08201511660a084015260c0810151151560c08401528160018060481b0391015116910152565b0390f35b5080fd5b503461015d5760209061017b61017636610fe6565b61112d565b90516001600160a01b039091168152f35b91905034610248576020366003190112610248576001600160a01b03823581811693919290849003610244576101c0611417565b83156101f2575050600180546001600160a01b031981168417909155166000805160206116548339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b50503461015d578160031936011261015d576101599061026a610ece565b9051918291602083526020830190610f70565b50503461015d578160031936011261015d57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b905034610248576080366003190112610248576001600160a01b03918135602435604435858116036106d7576001600160401b03946064358681116106bf57366023820112156106bf57808601358781116106d35781013660248201116106d357827f00000000000000000000000000000000000000000000000000000000000000001633036106c3578160e09103126106bf5784519660e08801908111888210176106ac578552602481013595828716968781036106a85788526001600160601b039260448301359084821682036106a457602098898b019283526103a960648601611018565b95898c019b878d5260848701359561ffff8716988988036106a0576060830197885260a4890135988915158a0361069b5760808401998a5260c48101359a6001600160481b038c1691828d036106945760e461040c9160a088019e8f5201611018565b9660c086019788521592888480610688575b8515610665575b5050508215610659575b50811561063d575b5061062f57908e9291858f511680610585575b50508c9d92856101599e9461049e8f948f908f90978560019951169c838852878b528888208389528b528888208a8060a01b03199e8f8254161790555116918652858952868620908652885285852061116d565b5116938c8252818152828220908c835252200190848254161790555116868b528a8a52878b20868c528a526002888c20019182541617905551848952888852858920848a5288526002868a20019081549061ffff60a01b9060a01b169061ffff60a01b191617905551151583885287875284882083895287526002858920019081549060ff60b01b9060b01b169060ff60b01b19161790555191865285855282862090865284526002828620019081549060018060b81b03199060b81b169060018060b81b031617905580519361057485610e90565b845251928284938452830190610f70565b8d51633f8ecfd360e21b8152918201528d81602481877f00000000000000000000000000000000000000000000000000000000000000008b165af18015610625578e9f6101599f95928f948f908f90978b60019961049e9582986105f8575b5098505097505050509f5081949e5061044a565b610617908d803d1061061e575b61060f8183610eab565b810190611155565b50386105e4565b503d610605565b8d513d86823e3d90fd5b8b516348be0eb360e01b8152fd5b80151591508161064f575b5038610437565b9050421138610648565b6127101091503861042f565b909192945015918261067d575b505091388881610425565b161590508738610672565b8282161515955061041e565b5050508f80fd5b508f80fd5b8f80fd5b8a80fd5b8980fd5b634e487b7160e01b895260418752602489fd5b8780fd5b8551632fc56e1160e21b81528790fd5b8880fd5b8580fd5b50503461015d578160031936011261015d5760015490516001600160a01b039091168152602090f35b833461074f578060031936011261074f5761071d611417565b600180546001600160a01b0319811690915581906001600160a01b03166000805160206116548339815191528280a380f35b80fd5b8391503461015d5761076336610fe6565b6001600160a01b0393907f000000000000000000000000000000000000000000000000000000000000000085163303610b8a57803580855260208581528386208184013580885290825284872060019081018054939791936001600160601b03919060a01c828114610b7757856107dc9101809261116d565b858a52898952878a20848b52895260ff6002898c20015460b01c16610b44575b858a52898952878a20848b5289526002888b20015460b81c91868b528a8a52888b20858c528a52888b205460a01c908115159283610b38575b505050610b29578015159081610b1f575b50610b115760a08501610859818761106a565b1515905061090557505061ffff888594936108d693610159999a9b6108806108dc9961112d565b16958c528b8b52888c20908c528a52878b20015416926108af81856108a9610100890189611190565b906112cc565b6127106108c66108bd611220565b909416836111c2565b049182806108e8575b50506111ff565b9161132a565b80519361057485610e90565b6108fe916108f8608089016111eb565b8761146f565b8a826108cf565b90919392896109138761112d565b16848a52898952878a20868b5289528a82898c200154169561093e82886108a96101008c018c611190565b61096e610949611220565b938a61271061095d61ffff809816846111c2565b04809381610af4575b5050506111ff565b958b528a8a52888b20908b5289526002888b20015460a01c1699899a806109ae575b5050505050906108d66101599596976109a994936111ff565b6108dc565b612710919293949b506109c190866111c2565b04996109cd848861106a565b8095915015610ae157848c0491826109e6575b50610990565b6080890195937f000000000000000000000000000000000000000000000000000000000000000016918c5b858110610a1f5750506109e0565b610a29828c61106a565b821015610ace578c51906331a9108f60e11b82528260051b0135848201528d81602481885afa908115610ac2578f9187918a949391610a7f575b5090610a79918d610a738d6111eb565b9061146f565b01610a11565b92935050508d81813d8311610abb575b610a998183610eab565b81010312610ab75790610a7986610ab08a9461120c565b9091610a63565b8e80fd5b503d610a8f565b8f8e51903d90823e3d90fd5b634e487b7160e01b8f526032845260248ffd5b634e487b7160e01b8b526012825260248bfd5b610b036080610b0994016111eb565b8d61146f565b8a8238610966565b85516304cd703960e51b8152fd5b905042118a610846565b508551635b21dfd360e11b8152fd5b161190508b8080610835565b610b7286898901357f0000000000000000000000000000000000000000000000000000000000000000611387565b6107fc565b634e487b7160e01b8b526011845260248bfd5b5051632fc56e1160e21b8152fd5b8391503461015d57602080600319360112610248576001600160401b039180358381116102445736602382011215610244578082013590610be4610bdb83610fcb565b97519788610eab565b81875236602483830101116106d7578186926024869301838a013787010152610c0b611417565b8451928311610d0b5750610c20600254610e09565b601f8111610cc7575b5080601f8311600114610c6457508293829392610c59575b50508160011b916000199060031b1c19161760025580f35b015190508380610c41565b90601f19831694600285528285209285905b878210610caf575050836001959610610c96575b505050811b0160025580f35b015160001960f88460031b161c19169055838080610c8a565b80600185968294968601518155019501930190610c76565b60028452818420601f840160051c810191838510610d01575b601f0160051c01905b818110610cf65750610c29565b848155600101610ce9565b9091508190610ce0565b634e487b7160e01b845260419052602483fd5b50503461015d57610159906100da610d3536610fb0565b90610d3e61102c565b5061109f565b50503461015d578160031936011261015d57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b92915034610e05576020366003190112610e05573563ffffffff60e01b8082168092036102445760209450637f5ab69960e11b8214938415610dd0575b505050519015158152f35b9091929350848101906a444947495f4d4f44554c4560a81b8252600b8152610df781610e75565b519020161490388080610dc5565b8380fd5b90600182811c92168015610e39575b6020831014610e2357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610e18565b61010081019081106001600160401b03821117610e5f57604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117610e5f57604052565b602081019081106001600160401b03821117610e5f57604052565b601f909101601f19168101906001600160401b03821190821017610e5f57604052565b6040519060008260025491610ee283610e09565b808352602093600190818116908115610f505750600114610f0e575b5050610f0c92500383610eab565b565b90939150600260005281600020936000915b818310610f38575050610f0c93508201013880610efe565b85548884018501529485019487945091830191610f20565b915050610f0c94925060ff191682840152151560051b8201013880610efe565b919082519283825260005b848110610f9c575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610f7b565b6040906003190112610fc6576004359060243590565b600080fd5b6001600160401b038111610e5f57601f01601f191660200190565b60031990602081830112610fc657600435916001600160401b038311610fc6578261012092030112610fc65760040190565b35906001600160a01b0382168203610fc657565b6040519061103982610e43565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b903590601e1981360301821215610fc657018035906001600160401b038211610fc657602001918160051b36038313610fc657565b6110a761102c565b5060005260006020526040600020906000526020526040600020604051906110ce82610e43565b600281549160018060a01b0392838116855260a01c60208501526001810154838116604086015260a01c60608501520154908116608083015261ffff8160a01c1660a083015260ff8160b01c16151560c083015260b81c60e082015290565b803560009081526020818152604080832093820135835292905220546001600160a01b031690565b90816020910312610fc657518015158103610fc65790565b80546001600160a01b031660a09290921b6001600160a01b031916919091179055565b903590601e1981360301821215610fc657018035906001600160401b038211610fc657602001918136038313610fc657565b818102929181159184041417156111d557565b634e487b7160e01b600052601160045260246000fd5b356001600160a01b0381168103610fc65790565b919082039182116111d557565b51906001600160a01b0382168203610fc657565b604080516398f965d160e01b8152919080836004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9283156112c1576000918294611278575b50509190565b9080929450813d83116112ba575b6112908183610eab565b810103126102485760206112a38261120c565b9101519261ffff8416840361074f57503880611272565b503d611286565b50513d6000823e3d90fd5b908160409194939481010312610fc6576001600160a01b03813581811693919290849003610fc65760200135149283159361131d575b50505061130b57565b6040516346308bd560e01b8152600490fd5b1614159050388080611302565b9190823560005260006020526040600020602084013560005260205260018060a01b039081600260406000200154169183611367575b5050505050565b611376608061137d96016111eb565b911661146f565b3880808080611360565b91808214611412576040516347720ebb60e01b81526004810192909252602482015290602090829060449082906001600160a01b03165afa908115611406576000916113e8575b50156113d657565b6040516322d9eef360e21b8152600490fd5b611400915060203d811161061e5761060f8183610eab565b386113ce565b6040513d6000823e3d90fd5b505050565b6001546001600160a01b0316330361142b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6040516323b872dd60e01b60208083019182526001600160a01b039485166024840152948416604483015260648083019690965294815292939260a081019290916001600160401b03841183851017610e5f576115369460009283928660405216936114da86610e75565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af13d156115b2573d9161151a83610fcb565b926115286040519485610eab565b83523d60008785013e6115b6565b8051908161154357505050565b8280611553938301019101611155565b1561155b5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b9192901561161857508151156115ca575090565b3b156115d35790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561162b5750805190602001fd5b60405162461bcd60e51b81526020600482015290819061164f906024830190610f70565b0390fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122026eda8b01481ffa8cd02390a3dc3c3b0d22a60c0979a64b6f2cacb8ff3ffd1a064736f6c63430008150033";

type SimpleFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleFeeCollectModule__factory extends ContractFactory {
  constructor(...args: SimpleFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    hub: string,
    actionModule: string,
    moduleRegistry: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<SimpleFeeCollectModule> {
    return super.deploy(
      hub,
      actionModule,
      moduleRegistry,
      moduleOwner,
      overrides || {}
    ) as Promise<SimpleFeeCollectModule>;
  }
  override getDeployTransaction(
    hub: string,
    actionModule: string,
    moduleRegistry: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      hub,
      actionModule,
      moduleRegistry,
      moduleOwner,
      overrides || {}
    );
  }
  override attach(address: string): SimpleFeeCollectModule {
    return super.attach(address) as SimpleFeeCollectModule;
  }
  override connect(signer: Signer): SimpleFeeCollectModule__factory {
    return super.connect(signer) as SimpleFeeCollectModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleFeeCollectModuleInterface {
    return new utils.Interface(_abi) as SimpleFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleFeeCollectModule;
  }
}
