/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Logo, LogoInterface } from "../Logo";

const _abi = [
  {
    type: "function",
    name: "getLogo",
    inputs: [
      {
        name: "logoVariant",
        type: "Logo.LogoVariants",
        internalType: "enum Logo.LogoVariants",
      },
      {
        name: "logoColor",
        type: "Logo.LogoColors",
        internalType: "enum Logo.LogoColors",
      },
      {
        name: "bodyVariant",
        type: "Body.BodyVariants",
        internalType: "enum Body.BodyVariants",
      },
      {
        name: "bodyColor",
        type: "Body.BodyColors",
        internalType: "enum Body.BodyColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getLogoHoodie",
    inputs: [
      {
        name: "logoVariant",
        type: "Logo.LogoVariants",
        internalType: "enum Logo.LogoVariants",
      },
      {
        name: "logoColor",
        type: "Logo.LogoColors",
        internalType: "enum Logo.LogoColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getLogoJacket",
    inputs: [
      {
        name: "logoVariant",
        type: "Logo.LogoVariants",
        internalType: "enum Logo.LogoVariants",
      },
      {
        name: "logoColor",
        type: "Logo.LogoColors",
        internalType: "enum Logo.LogoColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getLogoTshirtTanktop",
    inputs: [
      {
        name: "logoVariant",
        type: "Logo.LogoVariants",
        internalType: "enum Logo.LogoVariants",
      },
      {
        name: "logoColor",
        type: "Logo.LogoColors",
        internalType: "enum Logo.LogoColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "";

type LogoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Logo__factory extends ContractFactory {
  constructor(...args: LogoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Logo> {
    return super.deploy(overrides || {}) as Promise<Logo>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Logo {
    return super.attach(address) as Logo;
  }
  override connect(signer: Signer): Logo__factory {
    return super.connect(signer) as Logo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogoInterface {
    return new utils.Interface(_abi) as LogoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Logo {
    return new Contract(address, _abi, signerOrProvider) as Logo;
  }
}
