/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockCollectModule,
  MockCollectModuleInterface,
} from "../MockCollectModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializePublicationCollectModule",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processCollect",
    inputs: [
      {
        name: "processCollectParams",
        type: "tuple",
        internalType: "struct ModuleTypes.ProcessCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testMockCollectModule",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testMockModule",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "MockModuleReverted",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60803461007057601f6107f438819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b60405161072190816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146104565750806303ee438c146101575780634e413e9214610451578063632bdfae14610451578063681591c1146102f35780636fb7166114610278578063715018a6146102305780638da5cb5b1461020857806391027b5314610190578063ce90d52e146101575763f2fde38b1461009d57600080fd5b34610153576020366003190112610153576001600160a01b0382358181169391929084900361014f576100ce61063e565b83156100fd57505082546001600160a01b0319811683178455166000805160206106cc8339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b83823461018c578160031936011261018c5761018890610175610500565b90519182916020835260208301906105a0565b0390f35b5080fd5b509034610153576080366003190112610153576044356001600160a01b0381160361015357606435926001600160401b039182851161018c573660238601121561018c578401359182116102055736602483860101116102055750610200610188936101759260243692016105f8565b610696565b80fd5b83823461018c578160031936011261018c57905490516001600160a01b039091168152602090f35b833461020557806003193601126102055761024961063e565b80546001600160a01b03198116825581906001600160a01b03166000805160206106cc8339815191528280a380f35b50903461015357600319906020368301126102eb576001600160401b039181358381116102ef57610120813603928301126102ef5761010481013591602219018212156102ef5701908101359182116102eb576024019281360384136102055750610200610188936101759236916105f8565b8380fd5b8580fd5b8284346102055760208060031936011261018c576001600160401b0383358181116102eb57366023820112156102eb5761033690369060248188013591016105f8565b9361033f61063e565b845191821161043e5750600191610356835461048d565b601f81116103f8575b5080601f8311600114610399575083948293949261038e575b5050600019600383901b1c191690821b17905580f35b015190508480610378565b90601f198316958486528286209286905b8882106103e157505083859697106103c8575b505050811b01905580f35b015160001960f88460031b161c191690558480806103bd565b8087859682949686015181550195019301906103aa565b838552818520601f840160051c810191838510610434575b601f0160051c019084905b82811061042957505061035f565b86815501849061041b565b9091508190610410565b634e487b7160e01b845260419052602483fd5b6105e0565b84908434610153576020366003190112610153573563ffffffff60e01b811680910361015357637f5ab69960e11b14815260209150f35b90600182811c921680156104bd575b60208310146104a757565b634e487b7160e01b600052602260045260246000fd5b91607f169161049c565b601f909101601f19168101906001600160401b038211908210176104ea57604052565b634e487b7160e01b600052604160045260246000fd5b604051906000826001918254926105168461048d565b9081845260209481811690816000146105805750600114610542575b5050610540925003836104c7565b565b600081815285812095935091905b81831061056857505061054093508201013880610532565b85548884018501529485019487945091830191610550565b91505061054094925060ff191682840152151560051b8201013880610532565b919082519283825260005b8481106105cc575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016105ab565b346105f35760003660031901126105f357005b600080fd5b9192916001600160401b0382116104ea5760405191610621601f8201601f1916602001846104c7565b8294818452818301116105f3578281602093846000960137010152565b6000546001600160a01b0316330361065257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6020818051810103126105f35760208101518015908115036105f3576106b95790565b60405163070dc3b560e31b8152600490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220eb6e3a7b214684439f58cc03e04980e89f390939829b2de9d2a38f461429a85964736f6c63430008150033";

type MockCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCollectModule__factory extends ContractFactory {
  constructor(...args: MockCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MockCollectModule> {
    return super.deploy(
      moduleOwner,
      overrides || {}
    ) as Promise<MockCollectModule>;
  }
  override getDeployTransaction(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(moduleOwner, overrides || {});
  }
  override attach(address: string): MockCollectModule {
    return super.attach(address) as MockCollectModule;
  }
  override connect(signer: Signer): MockCollectModule__factory {
    return super.connect(signer) as MockCollectModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCollectModuleInterface {
    return new utils.Interface(_abi) as MockCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCollectModule {
    return new Contract(address, _abi, signerOrProvider) as MockCollectModule;
  }
}
