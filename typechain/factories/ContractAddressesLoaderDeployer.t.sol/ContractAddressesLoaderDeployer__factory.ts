/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractAddressesLoaderDeployer,
  ContractAddressesLoaderDeployerInterface,
} from "../../ContractAddressesLoaderDeployer.t.sol/ContractAddressesLoaderDeployer";

const _abi = [
  {
    type: "function",
    name: "IS_SCRIPT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "keyExists",
    inputs: [
      {
        name: "json",
        type: "string",
        internalType: "string",
      },
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setUp",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testContractAddressesLoaderDeployer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testForkManagement",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testKeyExists",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080806040523461003757600160ff198181600054161760005581816004541617600455601b541617601b55611e6f908161003d8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081630a9254e4146108c9575080631ed7831c146108475780633e5e3c23146107c55780633f7286f414610743578063431e71e91461011a5780634f4a06fe1461011a578063528a683c146106ed57806366d9a9a01461056a57806385226c81146104d4578063916a17c614610273578063b5508aa9146101d6578063ba414fa6146101b1578063e20c9f711461011f578063f0c0adc31461011a578063f8ccbf47146100f75763fa7626d4146100cf57600080fd5b346100f25760003660031901126100f257602060ff600054166040519015158152f35b600080fd5b346100f25760003660031901126100f257602060ff601b54166040519015158152f35b6115b0565b346100f25760003660031901126100f257604051600c80548083526000918252602080840193927fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c792915b8282106101915761018d85610181818903826115f9565b6040519182918261156c565b0390f35b83546001600160a01b03168652948501946001938401939091019061016a565b346100f25760003660031901126100f25760206101cc611810565b6040519015158152f35b346100f25760003660031901126100f2576010546101f3816118db565b61020060405191826115f9565b818152601060009081527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672929060208084015b838310610248576040518061018d878261177e565b60018281926040516102658161025e818d611aa3565b03826115f9565b815201960192019194610233565b346100f25760003660031901126100f257601354610290816118db565b61029d60405191826115f9565b818152601360009081527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0909290602083015b8282106102e4576040518061018d868261167e565b6040516102f0816115c3565b85546001600160a01b03168152604051600187018054808352600091825260208083209084019291905b816007840110610465578460019794600297946020979461037d945491818110610449575b81811061042d575b818110610411575b8181106103f5575b8181106103d9575b8181106103bd575b8181106103a3575b1061038f575b5003826115f9565b838201528152019501910190936102cf565b6001600160e01b031916815286018d610375565b828a1b6001600160e01b0319168452928901928b0161036f565b604083901b6001600160e01b0319168452928901928b01610367565b606083901b6001600160e01b0319168452928901928b0161035f565b608083901b6001600160e01b0319168452928901928b01610357565b60a083901b6001600160e01b0319168452928901928b0161034f565b60c083901b6001600160e01b0319168452928901928b01610347565b60e083901b6001600160e01b0319168452928901928b0161033f565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b166040860152606084846080928282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e082015201940192019161031a565b346100f25760003660031901126100f2576011546104f1816118db565b6104fe60405191826115f9565b818152601160009081527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68929060208084015b838310610546576040518061018d878261177e565b600182819260405161055c8161025e818d611aa3565b815201960192019194610531565b346100f25760003660031901126100f257601254610587816118db565b61059460405191826115f9565b818152601260009081527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34449290602083015b8282106105db576040518061018d868261167e565b6040516105e7816115c3565b85546001600160a01b03168152604051600187018054808352600091825260208083209084019291905b81600784011061067e578460019794600297946020979461066c9454918181106104495781811061042d57818110610411578181106103f5578181106103d9578181106103bd578181106103a3571061038f575003826115f9565b838201528152019501910190936105c6565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b166040860152606084846080928282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e0820152019401920191610611565b346100f25760403660031901126100f2576001600160401b036004358181116100f25761071e903690600401611637565b906024359081116100f25760209161073d6101cc923690600401611637565b90611d68565b346100f25760003660031901126100f257604051600e80548083526000918252602080840193927fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd92915b8282106107a55761018d85610181818903826115f9565b83546001600160a01b03168652948501946001938401939091019061078e565b346100f25760003660031901126100f257604051600f80548083526000918252602080840193927f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80292915b8282106108275761018d85610181818903826115f9565b83546001600160a01b031686529485019460019384019390910190610810565b346100f25760003660031901126100f257604051600d80548083526000918252602080840193927fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb592915b8282106108a95761018d85610181818903826115f9565b83546001600160a01b031686529485019460019384019390910190610892565b346100f25760003660031901126100f2576108e3816115c3565b600c81526b54455354494e475f464f524b60a01b6020820152604051602081019080821060018060401b038311176110ad5761093d9260009260405282825260405193849283926334515cdb60e21b845260048401611b99565b038183600080516020611dda8339815191525af1908115610f7a57600091611551575b5080516001600160401b0381116110ad5761097c603a546118f2565b601f81116114fe575b50602091601f82116001146114995791819260009261148e575b50508160011b916000199060031b1c191617603a555b610a1060206040516109c6816115c3565b601c81527b2a22a9aa24a723afa327a925afa1aaa92922a72a2fab22a929a4a7a760211b8282015260405180938192635e97348f60e01b8352604060048401526044830190611759565b6000602483015203816000600080516020611dda8339815191525af1908115610f7a5760009161145c575b5080603b55610a4b603a546118f2565b610a5157005b600160ff19603c541617603c55156113a157610ab4604051610a72816115c3565b60188152770a0a2054657374696e67207573696e6720257320666f726b60401b602082015260405190610aaf82610aa88161192c565b03836115f9565b611c16565b604051636c98507360e11b8152600081600481600080516020611dda8339815191525afa908115610f7a57610b55916000918291611387575b50610b33602f60405183610b0b829551809260208086019101611736565b81016e17b0b2323932b9b9b2b9973539b7b760891b602082015203600f8101845201826115f9565b604051809381926360f9bb1160e01b8352602060048401526024830190611759565b0381600080516020611dda8339815191525afa908115610f7a57600091611364575b5080516001600160401b0381116110ad57610b93603e546118f2565b601f8111611303575b506020601f821160011461129b578192600092611290575b50508160011b916000199060031b1c191617603e555b610beb604051610bdd8161025e816119bd565b610be5611c40565b90611d0c565b80516001600160401b0381116110ad57610c06603d546118f2565b601f8111611241575b506020601f82116001146111d95781926000926111ce575b50508160011b916000199060031b1c191617603d555b610c8e6020604051610c4e816115c3565b601281527154455354494e475f464f524b5f424c4f434b60701b8282015260405180938192635e97348f60e01b8352604060048401526044830190611759565b6000602483015203816000600080516020611dda8339815191525af1908115610f7a5760009161119c575b50603f819055156110ee57603f5460206040518080936371ee464d60e01b825260406004830152610cec60448301611a30565b90602483015203816000600080516020611dda8339815191525af18015610f7a576110c3575b50610d54603f54604051610d25816115c3565b602081527f466f726b20426c6f636b206e756d6265722028464958454420424c4f434b293a6020820152611bbe565b610d67604051610bdd8161025e816119bd565b80516001600160401b0381116110ad57610d82603d546118f2565b601f811161105a575b506020601f8211600114610ff2578192600092610fe7575b50508160011b916000199060031b1c191617603d555b604051610dc98161025e816119bd565b60405190601760f91b60208301526021600090603a54610de8816118f2565b9060018116908115610fcc5750600114610f86575b505091602091610e2a60088386670b98da185a5b925960c21b610e459852036017198101855201836115f9565b6040516356eef15b60e11b8152938492839260048401611b99565b03816000600080516020611dda8339815191525af1908115610f7a57600091610f48575b50610eab604051610e79816115c3565b6014815273052a30b933b2ba1032b73b34b937b736b2b73a1d60611b602082015260405190610aaf82610aa88161192c565b610ee0604051610eba816115c3565b60088152672732ba3bb7b9359d60c11b602082015260405190610aaf82610aa881611a30565b4603610f1357610f11604051610ef5816115c3565b600881526721b430b4b724b21d60c11b60208201524690611bbe565b005b60405162461bcd60e51b815260206004820152600d60248201526c15dc9bdb99c818da185a5b9259609a1b6044820152606490fd5b90506020813d602011610f72575b81610f63602093836115f9565b810103126100f2575181610e69565b3d9150610f56565b6040513d6000823e3d90fd5b603a600090815291925090600080516020611dfa8339815191525b828210610fb657505083010181610e2a610dfd565b6001816020925486858a01015201910190610fa1565b60ff1916838701525080151502840101905081610e2a610dfd565b015190508280610da3565b603d60005260206000209060005b601f1984168110611042575060019383601f19811610611029575b505050811b01603d55610db9565b015160001960f88460031b161c1916905582808061101b565b90916020600181928588015181550193019101611000565b603d600052600080516020611e1a833981519152601f830160051c810191602084106110a3575b601f0160051c01905b8181106110975750610d8b565b6000815560010161108a565b9091508190611081565b634e487b7160e01b600052604160045260246000fd5b602090813d83116110e7575b6110d981836115f9565b810103126100f25780610d12565b503d6110cf565b60405163261a000d60e21b8152602060048201819052818061111260248201611a30565b03816000600080516020611dda8339815191525af18015610f7a57611171575b5043603f5561116c604051611146816115c3565b60128152712337b93590213637b1b590373ab6b132b91d60711b60208201524390611bbe565b610d54565b602090813d8311611195575b61118781836115f9565b810103126100f25780611132565b503d61117d565b90506020813d6020116111c6575b816111b7602093836115f9565b810103126100f2575181610cb9565b3d91506111aa565b015190508280610c27565b603d60005260206000209060005b601f1984168110611229575060019383601f19811610611210575b505050811b01603d55610c3d565b015160001960f88460031b161c19169055828080611202565b909160206001819285880151815501930191016111e7565b603d600052600080516020611e1a833981519152601f830160051c810160208410611289575b601f830160051c8201811061127d575050610c0f565b60008155600101611267565b5080611267565b015190508280610bb4565b603e60005260206000209060005b601f19841681106112eb575060019383601f198116106112d2575b505050811b01603e55610bca565b015160001960f88460031b161c191690558280806112c4565b909160206001819285880151815501930191016112a9565b603e6000527f8d800d6614d35eed73733ee453164a3b48076eb3138f466adeeb9dec7bb31f70601f830160051c81016020841061135d575b601f830160051c82018110611351575050610b9c565b6000815560010161133b565b508061133b565b61138191503d806000833e61137981836115f9565b810190611b38565b81610b77565b61139b91503d8084833e61137981836115f9565b83610aed565b60846040516113af816115de565b602481527f54455354494e475f464f524b5f43555252454e545f56455253494f4e206e6f749081602082015260008063081cd95d60e21b9283604082015260405161142581611417602082019463104c13eb60e21b8652602060248401526044830190611759565b03601f1981018352826115f9565b51906a636f6e736f6c652e6c6f675afa506040519162461bcd60e51b83526020600484015260248084015260448301526064820152fd5b90506020813d602011611486575b81611477602093836115f9565b810103126100f2575181610a3b565b3d915061146a565b01519050828061099f565b601f19821692603a60005260206000209160005b8581106114e6575083600195106114cd575b505050811b01603a556109b5565b015160001960f88460031b161c191690558280806114bf565b919260206001819286850151815501940192016114ad565b603a600052600080516020611dfa833981519152601f830160051c81019160208410611547575b601f0160051c01905b81811061153b5750610985565b6000815560010161152e565b9091508190611525565b61156691503d806000833e61137981836115f9565b81610960565b6020908160408183019282815285518094520193019160005b828110611593575050505090565b83516001600160a01b031685529381019392810192600101611585565b346100f25760003660031901126100f257005b604081019081106001600160401b038211176110ad57604052565b606081019081106001600160401b038211176110ad57604052565b601f909101601f19168101906001600160401b038211908210176110ad57604052565b6001600160401b0381116110ad57601f01601f191660200190565b81601f820112156100f25780359061164e8261161c565b9261165c60405194856115f9565b828452602083830101116100f257816000926020809301838601378301015290565b602080820190808352835180925260409283810182858560051b840101960194600080935b8685106116b557505050505050505090565b909192939480969798603f198382030186528951826060818885019360018060a01b038151168652015193888382015284518094520192019085905b8082106117125750505090806001929a0195019501939695949291906116a3565b82516001600160e01b03191684528a949384019390920191600191909101906116f1565b60005b8381106117495750506000910152565b8181015183820152602001611739565b9060209161177281518092818552858086019101611736565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106117b25750505050505090565b90919293949584806117d0600193603f198682030187528a51611759565b98019301930191949392906117a2565b3d1561180b573d906117f18261161c565b916117ff60405193846115f9565b82523d6000602084013e565b606090565b6000805460081c60ff1615611829575460081c60ff1690565b80600080516020611dda833981519152803b61184457505090565b819250819060405182602082018381526519985a5b195960d21b604084015260408352611870836115de565b6118a8602460405180936118986020830197630667f9d760e41b895251809285850190611736565b81010360048101845201826115f9565b51925af1506118b56117e0565b6020818051810103126118d757602001519081151582036118d4575090565b80fd5b5080fd5b6001600160401b0381116110ad5760051b60200190565b90600182811c92168015611922575b602083101461190c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611901565b603a546000929161193c826118f2565b9081815260209260019081811690816000146119a05750600114611961575b50505050565b9293945090603a6000528360002092846000945b83861061198c57505050500101903880808061195b565b805485870183015294019385908201611975565b60ff191685840152505090151560051b010191503880808061195b565b603e54600092916119cd826118f2565b9081815260209260019081811690816000146119a057506001146119f15750505050565b9293945090603e6000528360002092846000945b838610611a1c57505050500101903880808061195b565b805485870183015294019385908201611a05565b603d5460009291611a40826118f2565b9081815260209260019081811690816000146119a05750600114611a645750505050565b9293945090603d6000528360002092846000945b838610611a8f57505050500101903880808061195b565b805485870183015294019385908201611a78565b805460009392611ab2826118f2565b918282526020936001918281169081600014611b195750600114611ad8575b5050505050565b90939495506000929192528360002092846000945b838610611b0557505050500101903880808080611ad1565b805485870183015294019385908201611aed565b60ff19168685015250505090151560051b010191503880808080611ad1565b6020818303126100f2578051906001600160401b0382116100f2570181601f820112156100f2578051611b6a8161161c565b92611b7860405194856115f9565b818452602082840101116100f257611b969160208085019101611736565b90565b9091611bb0611b9693604084526040840190611759565b916020818403910152611759565b600091908291611c036040518092611bef60208301956309710a9d60e41b8752604060248501526064840190611759565b90604483015203601f1981018352826115f9565b51906a636f6e736f6c652e6c6f675afa50565b60009190611417611c0384936040519283916020830195634b5c427760e01b875260248401611b99565b60405190816020601760f91b818301526021600091603a5490611c62826118f2565b91600190818116908115611cec5750600114611ca3575b50505050611ca19181672e6e6574776f726b60c01b60089352036017198101855201836115f9565b565b909192949350603a60005281600020906000915b848310611cd6575050505090611ca19260089282010191819338611c79565b8054898401880152889550918301918101611cb7565b60ff191685880152505050801515028301019050816008611ca138611c79565b6040516309389f5960e31b81529160009183918291611d2f919060048401611b99565b038183600080516020611dda8339815191525af1908115610f7a57600091611d55575090565b611b96913d8091833e61137981836115f9565b6040516309389f5960e31b81529160009183918291611d8b919060048401611b99565b038183600080516020611dda8339815191525af19081611dbe575b50611db957611db36117e0565b50600090565b600190565b611dd2903d806000833e61137981836115f9565b5038611da656fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2999d817b6757290b50e8ecf3fa939673403dd35c97de392fdb343b4015ce9eece66cfdbd22e3f37d348a3d8e19074452862cd65fd4b9a11f0336d1ac6d1dc3a2646970667358221220400b69847f0f2b59a3d306a5eda4de2576cba21558b50801797a273f6c49c42264736f6c63430008150033";

type ContractAddressesLoaderDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractAddressesLoaderDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractAddressesLoaderDeployer__factory extends ContractFactory {
  constructor(...args: ContractAddressesLoaderDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractAddressesLoaderDeployer> {
    return super.deploy(
      overrides || {}
    ) as Promise<ContractAddressesLoaderDeployer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractAddressesLoaderDeployer {
    return super.attach(address) as ContractAddressesLoaderDeployer;
  }
  override connect(signer: Signer): ContractAddressesLoaderDeployer__factory {
    return super.connect(signer) as ContractAddressesLoaderDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractAddressesLoaderDeployerInterface {
    return new utils.Interface(
      _abi
    ) as ContractAddressesLoaderDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractAddressesLoaderDeployer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ContractAddressesLoaderDeployer;
  }
}
