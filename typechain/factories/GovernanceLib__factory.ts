/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GovernanceLib, GovernanceLibInterface } from "../GovernanceLib";

const _abi = [
  {
    type: "event",
    name: "EmergencyAdminSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oldEmergencyAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newEmergencyAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "GovernanceSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "prevGovernance",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newGovernance",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProfileCreatorWhitelisted",
    inputs: [
      {
        name: "profileCreator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "whitelisted",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StateSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "prevState",
        type: "uint8",
        indexed: true,
        internalType: "enum Types.ProtocolState",
      },
      {
        name: "newState",
        type: "uint8",
        indexed: true,
        internalType: "enum Types.ProtocolState",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EmergencyAdminCanOnlyPauseFurther",
    inputs: [],
  },
  {
    type: "error",
    name: "NotGovernanceOrEmergencyAdmin",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080806040523461001c5761038b90816100228239308160090152f35b600080fdfe60806040818152307f0000000000000000000000000000000000000000000000000000000000000000146004928336101561003957600080fd5b600093843560e01c918263209055061461025f5750816320aaec161461023557816335da3394146101d85781634a4c86ce146101b857816397f48f13146101955781639c75de28146100f4575063ab033ea91461009557600080fd5b6100f05760203660031901126100f0576100ad6102da565b601754918160175560018060a01b0380915192428452169216907fe552a55455b740845a5c07ed445d1724142fc997b389835495a29b30cddc1ccd60203392a480f35b5080fd5b92919050610191576020366003190112610191578135600381101561018d5761011c816102f5565b6017549091906001600160a01b039081163303610137578580f35b60185416331460001461017e57600382101561016b57111561015e57505038808080808580f35b51633fab9ff960e11b8152fd5b634e487b7160e01b855260218452602485fd5b505051635010559960e11b8152fd5b8380fd5b8280fd5b84836101b55760203660031901126101b5576101af6102da565b601f5580f35b80fd5b84836101b55760203660031901126101b5576101d26102da565b60205580f35b50506100f05760203660031901126100f0576101f26102da565b601854918160185560018060a01b0380915192428452169216907f676c0801b0f400762e958ee31cfbb10870e70786f6761f57c8647e766b0db3d960203392a480f35b9250506100f05760203660031901126100f0573560038110156100f05761025b906102f5565b5080f35b8590858561019157806003193601126101915761027a6102da565b91602435928315158094036102d6576001600160a01b0316808552600d6020908152928520805460ff191660ff8616179055428252917f8f617843889b94892bd44852d36ca6a7f49ecf4350a01e7b68e22d80f4ed95bc91a380f35b8480fd5b600435906001600160a01b03821682036102f057565b600080fd5b600c549080600c55600382101561033f57600381101561033f57816040514281527fa2f9a1499fc1f9b7796d21fe5761290ccb7e0ef6ccf35fa58b668f304a62a1ca60203392a490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a337b1440ca7bdb2f50e244f1fba113e6b6ccef0290a3ddd941312bb8e01f51364736f6c63430008150033";

type GovernanceLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceLib__factory extends ContractFactory {
  constructor(...args: GovernanceLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GovernanceLib> {
    return super.deploy(overrides || {}) as Promise<GovernanceLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernanceLib {
    return super.attach(address) as GovernanceLib;
  }
  override connect(signer: Signer): GovernanceLib__factory {
    return super.connect(signer) as GovernanceLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceLibInterface {
    return new utils.Interface(_abi) as GovernanceLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceLib {
    return new Contract(address, _abi, signerOrProvider) as GovernanceLib;
  }
}
