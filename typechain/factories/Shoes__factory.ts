/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Shoes, ShoesInterface } from "../Shoes";

const _abi = [
  {
    type: "function",
    name: "getShoes",
    inputs: [
      {
        name: "shoeColor",
        type: "Shoes.ShoeColors",
        internalType: "enum Shoes.ShoeColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "";

type ShoesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShoesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shoes__factory extends ContractFactory {
  constructor(...args: ShoesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Shoes> {
    return super.deploy(overrides || {}) as Promise<Shoes>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shoes {
    return super.attach(address) as Shoes;
  }
  override connect(signer: Signer): Shoes__factory {
    return super.connect(signer) as Shoes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShoesInterface {
    return new utils.Interface(_abi) as ShoesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shoes {
    return new Contract(address, _abi, signerOrProvider) as Shoes;
  }
}
