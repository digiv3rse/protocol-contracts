/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Body, BodyInterface } from "../Body";

const _abi = [
  {
    type: "function",
    name: "getBody",
    inputs: [
      {
        name: "bodyVariant",
        type: "Body.BodyVariants",
        internalType: "enum Body.BodyVariants",
      },
      {
        name: "bodyColor",
        type: "Body.BodyColors",
        internalType: "enum Body.BodyColors",
      },
      {
        name: "handsVariant",
        type: "Hands.HandsVariants",
        internalType: "enum Hands.HandsVariants",
      },
      {
        name: "handsColor",
        type: "Hands.HandsColors",
        internalType: "enum Hands.HandsColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getPrimaryBodyColor",
    inputs: [
      {
        name: "bodyVariant",
        type: "Body.BodyVariants",
        internalType: "enum Body.BodyVariants",
      },
      {
        name: "bodyColor",
        type: "Body.BodyColors",
        internalType: "enum Body.BodyColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getSecondaryBodyColor",
    inputs: [
      {
        name: "bodyColor",
        type: "Body.BodyColors",
        internalType: "enum Body.BodyColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576109549081610020823930815050f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630fc1a313146100ad578063988ff9d6146100885763c0e7f7e61461004257600080fd5b816003193601126100845780359081101561008457602435926005841015610081575061007d9261007291610705565b9051918291826103bf565b0390f35b80fd5b8280fd5b5060203660031901126100845735916005831015610081575061007261007d92610810565b508260803660031901126100815781359180831015610398576024359160058310156100815760443590600382101561008157606435928310156100815761007d61036d8761038e606d89898961037f6102fb8b61013260ff610119610113888a610705565b97610810565b956101238161043f565b1661012d8161043f565b610884565b956102f661013f8b5180996020988983019a7901e39ba3cb6329f173137b23ca1b7b637b918903db334b6361d160351b8c52610177815180928d603a8801910161039c565b83017303e973137b23ca1b7b637b919103db334b6361d160651b603a8201526101a9825180938d604e8501910161039c565b017303e973430b73239a1b7b637b9103db334b6361d160651b604e8201526101da825180938c60628501910161039c565b017f7d2e6253747231207b7374726f6b653a20233030303b7374726f6b652d6c696e60628201527f656361703a20726f756e643b7374726f6b652d6d697465726c696d69743a203160828201527f303b7d2e6253747232207b7374726f6b653a20233030303b7374726f6b652d6c60a28201527f696e656361703a20726f756e643b7374726f6b652d6c696e656a6f696e3a207260c28201527f6f756e643b7d2e6253747233207b7374726f6b653a20233030303b7374726f6b60e28201527f652d6c696e656361703a20726f756e643b7374726f6b652d6f7061636974793a6101028201527f202e313b7374726f6b652d77696474683a20323b7d3c2f7374796c653e0000006101228201520361011f81018a52018861041c565b6104e2565b9287519889957f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f3230858801527f30302f737667222077696474683d2232313022206865696768743d22333335228a8801526c103334b6361e913737b732911f60991b60608801525180928888019061039c565b8401918351938491878501910161039c565b0103604d81018552018361041c565b51918291826103bf565b5080fd5b60005b8381106103af5750506000910152565b818101518382015260200161039f565b604091602082526103df815180928160208601526020868601910161039c565b601f01601f1916010190565b604081019081106001600160401b0382111761040657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761040657604052565b6004111561044957565b634e487b7160e01b600052602160045260246000fd5b6020818303126104ca5780516001600160401b03918282116104ca57019082601f830112156104ca57815190811161040657604051926104a9601f8301601f19166020018561041c565b818452602082840101116104ca576104c7916020808501910161039c565b90565b600080fd5b9190602083019260038210156104495752565b6104eb8161043f565b80610563575060006105119160405180938192638b80ee8d60e01b8352600483016104cf565b038173__$07ab5f7c449eba6d7c4f86007031ae3810$__5af49081156105575760009161053c575090565b6104c7913d8091833e61054f818361041c565b81019061045f565b6040513d6000823e3d90fd5b61056c8161043f565b600181036105c0575060006105959160405180938192638b80ee8d60e01b8352600483016104cf565b038173__$c63cb5b7b7477be92689e32ee9bf4a0907$__5af49081156105575760009161053c575090565b6105c98161043f565b6002810361061d575060006105f29160405180938192638b80ee8d60e01b8352600483016104cf565b038173__$86678d9ab59bfadb07dc276e346084a859$__5af49081156105575760009161053c575090565b8061062960039261043f565b036104ca57600061064e9160405180938192638b80ee8d60e01b8352600483016104cf565b038173__$4bf95623b42dfbb1f2bb078553c3f977dc$__5af49081156105575760009161053c575090565b60405190610686826103eb565b600782526611a21ca298232360c91b6020830152565b604051906106a9826103eb565b600782526611a2a0a21ba32360c91b6020830152565b604051906106cc826103eb565b60078252662335373537353760c81b6020830152565b604051906106ef826103eb565b60078252662345414541454160c81b6020830152565b9060058110156104495780610739575050604051610722816103eb565b60078152662346344646444360c81b602082015290565b6001810361076657505060405161074f816103eb565b600781526611a3232323232360c91b602082015290565b6002810361079057508061077b60019261043f565b03610788576104c76106e2565b6104c76106bf565b600381036107d157506107a28161043f565b6107ae576104c761069c565b6040516107ba816103eb565b600781526611a319a2a0a32360c91b602082015290565b6004036104ca576107e18161043f565b6107ed576104c7610679565b6040516107f9816103eb565b600781526611a2a1a318232360c91b602082015290565b60058110156104495780610842575060405161082b816103eb565b600781526608ce4cd04e4dd160ca1b602082015290565b6001810361085357506104c76106e2565b6002810361086457506104c76106bf565b6003810361087557506104c761069c565b6004036104ca576104c7610679565b61088d8161043f565b806108b6575060405161089f816103eb565b60078152660234130443137360cc1b602082015290565b6108bf8161043f565b600181036108d057506104c761069c565b6108d98161043f565b600281036108ea57506104c7610679565b806108f660039261043f565b036104ca57604051610907816103eb565b600781526608d18e10ce4d0d60ca1b60208201529056fea264697066735822122058ce207c94395b005c701d819797565b65cd4f4e9833f23f80ab57f3e49b4a8f64736f6c63430008150033";

type BodyConstructorParams =
  | [linkLibraryAddresses: BodyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BodyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Body__factory extends ContractFactory {
  constructor(...args: BodyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Body__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: BodyLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$07ab5f7c449eba6d7c4f86007031ae3810\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Profile/Body/BodyHoodie.sol:BodyHoodie"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c63cb5b7b7477be92689e32ee9bf4a0907\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Profile/Body/BodyJacket.sol:BodyJacket"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$86678d9ab59bfadb07dc276e346084a859\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Profile/Body/BodyTanktop.sol:BodyTanktop"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$4bf95623b42dfbb1f2bb078553c3f977dc\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Profile/Body/BodyTShirt.sol:BodyTShirt"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Body> {
    return super.deploy(overrides || {}) as Promise<Body>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Body {
    return super.attach(address) as Body;
  }
  override connect(signer: Signer): Body__factory {
    return super.connect(signer) as Body__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BodyInterface {
    return new utils.Interface(_abi) as BodyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Body {
    return new Contract(address, _abi, signerOrProvider) as Body;
  }
}

export interface BodyLibraryAddresses {
  ["contracts/libraries/svgs/Profile/Body/BodyHoodie.sol:BodyHoodie"]: string;
  ["contracts/libraries/svgs/Profile/Body/BodyJacket.sol:BodyJacket"]: string;
  ["contracts/libraries/svgs/Profile/Body/BodyTanktop.sol:BodyTanktop"]: string;
  ["contracts/libraries/svgs/Profile/Body/BodyTShirt.sol:BodyTShirt"]: string;
}
