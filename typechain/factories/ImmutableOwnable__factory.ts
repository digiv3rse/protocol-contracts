/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ImmutableOwnable,
  ImmutableOwnableInterface,
} from "../ImmutableOwnable";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "digiHub",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DIGI_HUB",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "OWNER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "OnlyOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyOwnerOrHub",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c03461007757601f61019b38819003918201601f19168301916001600160401b0383118484101761007c57808492604094855283398101031261007757610052602061004b83610092565b9201610092565b9060805260a05260405160f490816100a7823960805181608b015260a0518160470152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100775756fe6080806040526004361015601257600080fd5b600090813560e01c908163117803e3146079575063e6fe34a514603457600080fd5b34607657806003193601126076576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b90503460ba578160031936011260ba577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fdfea2646970667358221220c3fb408f13431174719471f0d0d9885227ae55b9ae37f62f2bb9f039df45a45b64736f6c63430008150033";

type ImmutableOwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImmutableOwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImmutableOwnable__factory extends ContractFactory {
  constructor(...args: ImmutableOwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: string,
    digiHub: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ImmutableOwnable> {
    return super.deploy(
      owner,
      digiHub,
      overrides || {}
    ) as Promise<ImmutableOwnable>;
  }
  override getDeployTransaction(
    owner: string,
    digiHub: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, digiHub, overrides || {});
  }
  override attach(address: string): ImmutableOwnable {
    return super.attach(address) as ImmutableOwnable;
  }
  override connect(signer: Signer): ImmutableOwnable__factory {
    return super.connect(signer) as ImmutableOwnable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImmutableOwnableInterface {
    return new utils.Interface(_abi) as ImmutableOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImmutableOwnable {
    return new Contract(address, _abi, signerOrProvider) as ImmutableOwnable;
  }
}
