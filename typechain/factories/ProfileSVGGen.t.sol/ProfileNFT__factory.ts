/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProfileNFT,
  ProfileNFTInterface,
} from "../../ProfileSVGGen.t.sol/ProfileNFT";

const _abi = [
  {
    type: "function",
    name: "tryProfile",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tryWithSeed",
    inputs: [
      {
        name: "seed",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "isGold",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611514908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163b044ed67146111ca575063bd851f2e1461003557600080fd5b3461118f57604036600319011261118f5760243515156024350361118f576040516101c081016001600160401b03811182821017610ff0576040526000815260006020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e08201526000610100820152600061012082015260006101408201526000610160820152600061018082015260006101a08201526024356000146111b05760035b6100eb8161138e565b8152602435156111945760035b6101018161138e565b602082015260ff60038160043560c81c16061661011d81611465565b61012681611465565b604082015260ff60038160043560c01c16061661014281611465565b61014b81611465565b606082015260ff60038160043560281c16061661016781611465565b61017081611465565b6080820152600360043560201c166101878161138e565b6101908161138e565b60a082015260ff60058160043560d81c1606166101ac8161146f565b6101b58161146f565b60c0820152600360043560401c166101cc8161138e565b6101d58161138e565b60e082015260ff60058160043560b81c1606166101f18161146f565b6101fa8161146f565b610100820152600e60ff818160043560101c160616101561107e5760ff600e8160043560101c16061661018082015260243515156101a08201526040519063085a768d60e31b825260043560048301526024351515602483015260008260448173__$7855b62e8b31a9fcc7bb11a3ba5bf1044e$__5af49182156110555760009260009160009161112c575b50600781101561107e57610160830152600d81101561107e576101408201526102b881516102b38161138e565b611398565b906040810151926102c884611465565b604051635600a86360e01b8152936102df81611465565b600485015260008460248173__$d126fce042c4f389b948b334953c7040b2$__5af49384156110555760009461110f575b5060608201519061032082611465565b6040516309886cab60e31b81529161033781611465565b600483015260008260248173__$878c40d00c0bba291303ba416b95520be0$__5af4918215611055576000926110f2575b5060a0830151926103788461138e565b60ff60c08201516103888161146f565b608083015161039681611465565b6020840151916103a58361138e565b6103ae8361138e565b6103b984841661138e565b604051630fc1a31360e01b8152976103d08161138e565b60048901526103de8161146f565b60248801526103ec81611465565b60448701526103fc82821661138e565b16606485015260008460848173__$710c102e5fa4a04316d9379a7b16d25969$__5af4938415611055576000946110d5575b5060e08101519161043e8361138e565b61010082015161044d8161146f565b60a083015161045b8161138e565b60c08401519161046a8361146f565b60405163027a46dd60e41b8152956104818161138e565b600487015261048f8161146f565b602486015261049d8161138e565b60448501526104ab8161146f565b606484015260008360848173__$a476c09d4708b06d4003108cf0b87653d0$__5af4928315611055576000936110b8575b506020820151906104ec8261138e565b6104f58261138e565b61050160ff831661138e565b604051630956551360e41b81529160ff9061051d81831661138e565b16600483015260008260248173__$2357399676040666229e15ed3b53bacfe6$__5af49182156110555760009261109b575b5061018083015191600e83101561107e576101a0840151156110945760015b604051936379aa545760e01b85526004850152600281101561107e57602484015260008360448173__$c34af807c6d4d03395e2cc147552cf15ab$__5af492831561105557600093611061575b506080840151936105cb85611465565b60208101516105d98161138e565b6105e28161138e565b6105ee60ff821661138e565b60a08201516105fc8161138e565b60ff60c08401519261060d8461146f565b60405160016219213b60e01b031981529861062781611465565b60048a015261063782821661138e565b1660248801526106468161138e565b60448701526106548161146f565b606486015260008560848173__$6243675c480d67e48377cdf494f50c5821$__5af49485156110555760009561102c575b506101a0015115611006576040516001600160401b036102a0820190811190821117610ff0576102a08101604052610266815260008051602061149f83398151915260208201526000805160206114bf83398151915260408201527f2066696c6c3d226e6f6e65223e3c706174682066696c6c3d222366666622207360608201527f74726f6b653d222342393633323622207374726f6b652d6c696e656361703d2260808201527f73717561726522207374726f6b652d6c696e656a6f696e3d22726f756e64222060a08201527f7374726f6b652d77696474683d22332e352220643d224d31332e33203839632e60c08201527f312d2e332e352d2e332e362030203220352e3520362031302031312e3320313160e08201527f2e39762e316c2d2e352e32632d3520312e382d382e3920362d31302e362031316101008201527f2e33762e31632d2e312e322d2e352e322d2e35203076306131392031392030206101208201527f3020302d31312e342d31322e3176302d2e32682e3363352d312e3820392d36206101408201527f31302e382d31312e3476305a222f3e3c706174682066696c6c3d2223666666226101608201527f207374726f6b653d222342393633323622207374726f6b652d6c696e656361706101808201527f3d2273717561726522207374726f6b652d6c696e656a6f696e3d22726f756e646101a08201527f22207374726f6b652d77696474683d22332220643d224d31392e36203132302e6101c08201527f3563302d2e322e332d2e322e342030613132203132203020302030203720372e6101e08201527f357630632e312030202e312e312030202e316c2d2e332e316131312e312031316102008201527f2e312030203020302d362e3720372e3268306330202e322d2e322e322d2e33206102208201527f3076306131322e312031322e312030203020302d372e312d372e3676302d2e316102408201527f6c2e312d2e3161313120313120302030203020362e392d372e3176305a222f3e610260820152651e17b9bb339f60d11b610280820152945b604051978897602089019b8c81516020819301916109a1926112ad565b8901815191826020830191602001916109b9926112ad565b01815191826020830191602001916109d0926112ad565b01815191826020830191602001916109e7926112ad565b01815191826020830191602001916109fe926112ad565b0181519182602083019160200191610a15926112ad565b0181519182602083019160200191610a2c926112ad565b0181519182602083019160200191610a43926112ad565b0181519182602083019160200191610a5a926112ad565b0103808252602001610a6c9082611317565b60405192839260008051602061149f83398151915290816020860152604085017f30302f737667222077696474683d2232373522206865696768743d223237352290526f103334b6361e913737b732911f1e339f60811b60608601526f078e0c2e8d040ccd2d8d87a44eae4d8560831b607086015280519081608087019160200191610af7926112ad565b8401907b149110321e912698101834191b9abb1a189aa4183d11179f1e17b39f60211b6080830152609c82015260bc81016000805160206114bf833981519152905260dc81017f2066696c6c3d226e6f6e65222069643d22636f6e7461696e65722220783d22359052791911103b34b2bba137bc1e9118101810191b18101a189a91101f60311b60fc82015261011692519182848301610b96926112ad565b7f3c2f7376673e3c646566733e3c72616469616c4772616469656e742069643d229101918201527f677265656e222063783d2230222063793d22302220723d2231222067726164696101368201527f656e745472616e73666f726d3d226d617472697828323735202d3237352033366101568201527f32203336322030203237352922206772616469656e74556e6974733d227573656101768201527f7253706163654f6e557365223e3c73746f702073746f702d636f6c6f723d22236101968201527f444646464246222f3e3c73746f70206f66667365743d2231222073746f702d636101b68201527f6f6c6f723d2223454644222f3e3c2f72616469616c4772616469656e743e3c726101d68201527f616469616c4772616469656e742069643d22707572706c65222063783d2230226101f68201527f2063793d22302220723d223122206772616469656e745472616e73666f726d3d6102168201527f226d617472697828323735202d323735203336322033363220302032373529226102368201527f206772616469656e74556e6974733d227573657253706163654f6e557365223e6102568201527f3c73746f702073746f702d636f6c6f723d2223463145344646222f3e3c73746f6102768201527f70206f66667365743d2231222073746f702d636f6c6f723d22234638463146466102968201527f222f3e3c2f72616469616c4772616469656e743e3c72616469616c47726164696102b68201527f656e742069643d22626c7565222063783d2230222063793d22302220723d22316102d68201527f22206772616469656e745472616e73666f726d3d226d617472697828323735206102f68201527f2d32373520333632203336322030203237352922206772616469656e74556e696103168201527f74733d227573657253706163654f6e557365223e3c73746f702073746f702d636103368201527f6f6c6f723d2223453645414646222f3e3c73746f70206f66667365743d2231226103568201527f2073746f702d636f6c6f723d2223454646324646222f3e3c2f72616469616c476103768201527f72616469656e743e3c72616469616c4772616469656e742069643d2279656c6c6103968201527f6f77222063783d2230222063793d22302220723d223122206772616469656e746103b68201527f5472616e73666f726d3d226d617472697828323735202d3237352033363220336103d68201527f36322030203237352922206772616469656e74556e6974733d227573657253706103f68201527f6163654f6e557365223e3c73746f702073746f702d636f6c6f723d22234646456104168201527f374135222f3e3c73746f70206f66667365743d2231222073746f702d636f6c6f6104368201527f723d2223464646324345222f3e3c2f72616469616c4772616469656e743e3c2f6104568201526a3232b3399f1e17b9bb339f60a91b6104768201520361046181018252610fde906104810182611317565b604051610fec8192826112d0565b0390f35b634e487b7160e01b600052604160045260246000fd5b604051602081016001600160401b03811182821017610ff0576040526000815294610984565b6101a091955061104e903d806000833e6110468183611317565b810190611479565b9490610685565b6040513d6000823e3d90fd5b6110779193503d806000833e6110468183611317565b91386105bb565b634e487b7160e01b600052602160045260246000fd5b600061056e565b6110b19192503d806000833e6110468183611317565b903861054f565b6110ce9193503d806000833e6110468183611317565b91386104dc565b6110eb9194503d806000833e6110468183611317565b923861042e565b6111089192503d806000833e6110468183611317565b9038610368565b6111259194503d806000833e6110468183611317565b9238610310565b935050503d806000843e6111408184611317565b606083828101031261118f5782516001600160401b03811161118f5761116a91840190840161133a565b602083015192600d84101561118f576040015190600782101561118f57929038610286565b600080fd5b60ff60038160043560f01c1606166111ab8161138e565b6100f8565b60ff600360043560f81c06166111c58161138e565b6100e2565b3461118f57602036600319011261118f5760001943014381116112975763806c6aeb60e01b8252600480359083015240602482015260008160448173__$87fea527f71e704e93a97640bdbae8fcd3$__5af480156110555760009061123a575b610fec90604051918291826112d0565b503d806000833e61124b8183611317565b810160408282031261118f5781516001600160401b03929083811161118f578261127691830161133a565b91602082015193841161118f57610fec93611291920161133a565b5061122a565b634e487b7160e01b600052601160045260246000fd5b60005b8381106112c05750506000910152565b81810151838201526020016112b0565b604091602082526112f081518092816020860152602086860191016112ad565b601f01601f1916010190565b604081019081106001600160401b03821117610ff057604052565b601f909101601f19168101906001600160401b03821190821017610ff057604052565b81601f8201121561118f5780516001600160401b038111610ff0576040519261136d601f8301601f191660200185611317565b8184526020828401011161118f5761138b91602080850191016112ad565b90565b6004111561107e57565b6113a18161138e565b806113c957506040516113b3816112fc565b600681526511b3b932b2b760d11b602082015290565b6113d28161138e565b600181036113fe57506040516113e7816112fc565b600781526623707572706c6560c81b602082015290565b6114078161138e565b60028103611431575060405161141c816112fc565b600581526423626c756560d81b602082015290565b8061143d60039261138e565b0361118f5760405161144e816112fc565b60078152662379656c6c6f7760c81b602082015290565b6003111561107e57565b6005111561107e57565b9060208282031261118f5781516001600160401b03811161118f5761138b920161133a56fe3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667222077696474683d2232313022206865696768743d2233333522a264697066735822122015b4f6bfb7a092259ff0de1d3b4cb81692ff5ba8d3fdc2d305eebb173016c74564736f6c63430008150033";

type ProfileNFTConstructorParams =
  | [linkLibraryAddresses: ProfileNFTLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfileNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ProfileNFT__factory extends ContractFactory {
  constructor(...args: ProfileNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ProfileNFT__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ProfileNFTLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7855b62e8b31a9fcc7bb11a3ba5bf1044e\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Profile/Headwear.sol:Headwear"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d126fce042c4f389b948b334953c7040b2\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/svgs/Profile/Legs.sol:Legs"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$878c40d00c0bba291303ba416b95520be0\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/svgs/Profile/Shoes.sol:Shoes"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$710c102e5fa4a04316d9379a7b16d25969\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/svgs/Profile/Body.sol:Body"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a476c09d4708b06d4003108cf0b87653d0\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/svgs/Profile/Logo.sol:Logo"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2357399676040666229e15ed3b53bacfe6\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/svgs/Profile/Head.sol:Head"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c34af807c6d4d03395e2cc147552cf15ab\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/svgs/Profile/Face.sol:Face"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6243675c480d67e48377cdf494f50c5821\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/svgs/Profile/Hands.sol:Hands"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$87fea527f71e704e93a97640bdbae8fcd3\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Profile/ProfileSVG.sol:ProfileSVG"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ProfileNFT> {
    return super.deploy(overrides || {}) as Promise<ProfileNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProfileNFT {
    return super.attach(address) as ProfileNFT;
  }
  override connect(signer: Signer): ProfileNFT__factory {
    return super.connect(signer) as ProfileNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfileNFTInterface {
    return new utils.Interface(_abi) as ProfileNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProfileNFT {
    return new Contract(address, _abi, signerOrProvider) as ProfileNFT;
  }
}

export interface ProfileNFTLibraryAddresses {
  ["contracts/libraries/svgs/Profile/Headwear.sol:Headwear"]: string;
  ["contracts/libraries/svgs/Profile/Legs.sol:Legs"]: string;
  ["contracts/libraries/svgs/Profile/Shoes.sol:Shoes"]: string;
  ["contracts/libraries/svgs/Profile/Body.sol:Body"]: string;
  ["contracts/libraries/svgs/Profile/Logo.sol:Logo"]: string;
  ["contracts/libraries/svgs/Profile/Head.sol:Head"]: string;
  ["contracts/libraries/svgs/Profile/Face.sol:Face"]: string;
  ["contracts/libraries/svgs/Profile/Hands.sol:Hands"]: string;
  ["contracts/libraries/svgs/Profile/ProfileSVG.sol:ProfileSVG"]: string;
}
