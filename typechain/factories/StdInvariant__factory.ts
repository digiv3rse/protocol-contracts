/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StdInvariant, StdInvariantInterface } from "../StdInvariant";

const _abi = [
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610aa7908161001c8239f35b600080fdfe6080806040526004908136101561001557600080fd5b600091823560e01c9182631ed7831c146107f7575081633e5e3c23146107785781633f7286f4146106f957816366d9a9a01461057b57816385226c8114610463578163916a17c614610207578163b5508aa9146100ee575063e20c9f711461007c57600080fd5b346100eb57806003193601126100eb5760405181548082528280526020808420818401949092915b8282106100cb576100c7856100bb81890382610a37565b60405191829182610877565b0390f35b83546001600160a01b0316865294850194600193840193909101906100a4565b80fd5b82346100eb57806003193601126100eb57815461010a81610a5a565b916101186040519384610a37565b81835260208084019085835280832083925b85841061013f57604051806100c78982610973565b604051859183549160019280841c9084811680156101fd575b88831081146101e957828452889493929181156101cd5750600114610195575b50610187816001960382610a37565b81520192019301929061012a565b868a52838a20955089905b8082106101b65750810183019450610187610178565b8654838301860152958501958894909101906101a0565b60ff19168584015250151560051b810183019450610187610178565b50634e487b7160e01b8a5260228d5260248afd5b91607f1691610158565b82346100eb57806003193601126100eb5760075461022481610a5a565b906102326040519283610a37565b80825260078352827fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688602084015b83831061027557604051806100c787826108bb565b60405161028181610a06565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b8160078401106103f4578460019794600297946020979461030c9454918181106103d8575b8181106103bc575b8181106103a0575b818110610384575b818110610368575b81811061034c575b818110610332575b1061031e575b500382610a37565b83820152815201920192019190610260565b6001600160e01b031916815286018e610304565b828a1b6001600160e01b0319168452928901928b016102fe565b604083901b6001600160e01b0319168452928901928b016102f6565b606083901b6001600160e01b0319168452928901928b016102ee565b608083901b6001600160e01b0319168452928901928b016102e6565b60a083901b6001600160e01b0319168452928901928b016102de565b60c083901b6001600160e01b0319168452928901928b016102d6565b60e083901b6001600160e01b0319168452928901928b016102ce565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b166040860152606084846080928282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e08201520194019201916102a9565b82346100eb57806003193601126100eb57600580549061048282610a5a565b926104906040519485610a37565b8284528181526020808220828287015b8685106104b557604051806100c78a82610973565b604051829184549160019280841c908481168015610571575b898310811461055e5782845289949392918115610543575060011461050b575b506104fd816001960382610a37565b8152019301940193916104a0565b878752838720955086905b80821061052c57508101830194506104fd6104ee565b865483830186015295850195899490910190610516565b60ff1916858401525015158a1b8101830194506104fd6104ee565b634e487b7160e01b885260228f52602488fd5b91607f16916104ce565b82346100eb57806003193601126100eb5760065461059881610a5a565b906105a66040519283610a37565b80825260068352827ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f602084015b8383106105e957604051806100c787826108bb565b6040516105f581610a06565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b81600784011061068a57846001979460029794602097946106789454918181106103d8578181106103bc578181106103a057818110610384578181106103685781811061034c57818110610332571061031e57500382610a37565b838201528152019201920191906105d4565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b166040860152606084846080928282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e082015201940192019161061d565b82346100eb57806003193601126100eb57604051600280548083529083526020808301937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace92915b828210610758576100c7856100bb81890382610a37565b83546001600160a01b031686529485019460019384019390910190610741565b82346100eb57806003193601126100eb57604051600380548083529083526020808301937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b92915b8282106107d7576100c7856100bb81890382610a37565b83546001600160a01b0316865294850194600193840193909101906107c0565b839034610873578160031936011261087357600180548083528184526020808401947fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69392915b828210610855576100c7866100bb818a0382610a37565b84546001600160a01b0316875295860195938301939083019061083e565b5080fd5b6020908160408183019282815285518094520193019160005b82811061089e575050505090565b83516001600160a01b031685529381019392810192600101610890565b602080820190808352835180925260409283810182858560051b840101960194600080935b8685106108f257505050505050505090565b909192939480969798603f198382030186528951826060818885019360018060a01b038151168652015193888382015284518094520192019085905b80821061094f5750505090806001929a0195019501939695949291906108e0565b82516001600160e01b03191684528a9493840193909201916001919091019061092e565b6020808201818352835180915260408301918060408360051b860101950193600080915b8483106109a8575050505050505090565b90919293949596603f19828203018752848851805190818452855b8281106109f25750508083018201859052601f01601f1916909101810197810196019493926001019190610997565b8181018401518582018501528893016109c3565b604081019081106001600160401b03821117610a2157604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610a2157604052565b6001600160401b038111610a215760051b6020019056fea2646970667358221220b16cc302d839b1412b276dcaada28694d4620b4e45f824818424c3eb6f07258d64736f6c63430008150033";

type StdInvariantConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StdInvariantConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StdInvariant__factory extends ContractFactory {
  constructor(...args: StdInvariantConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<StdInvariant> {
    return super.deploy(overrides || {}) as Promise<StdInvariant>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StdInvariant {
    return super.attach(address) as StdInvariant;
  }
  override connect(signer: Signer): StdInvariant__factory {
    return super.connect(signer) as StdInvariant__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StdInvariantInterface {
    return new utils.Interface(_abi) as StdInvariantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StdInvariant {
    return new Contract(address, _abi, signerOrProvider) as StdInvariant;
  }
}
