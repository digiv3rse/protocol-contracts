/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721ContractMetadataCloneable,
  ERC721ContractMetadataCloneableInterface,
} from "../ERC721ContractMetadataCloneable";

const _abi = [
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelOwnershipTransfer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "contractURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "emitBatchMetadataUpdate",
    inputs: [
      {
        name: "fromTokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "toTokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "provenanceHash",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "royaltyAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "royaltyBasisPoints",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "royaltyInfo",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_salePrice",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "royaltyAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBaseURI",
    inputs: [
      {
        name: "newBaseURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setContractURI",
    inputs: [
      {
        name: "newContractURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMaxSupply",
    inputs: [
      {
        name: "newMaxSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setProvenanceHash",
    inputs: [
      {
        name: "newProvenanceHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRoyaltyInfo",
    inputs: [
      {
        name: "newInfo",
        type: "tuple",
        internalType: "struct ISeaDropTokenContractMetadata.RoyaltyInfo",
        components: [
          {
            name: "royaltyAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "royaltyBps",
            type: "uint96",
            internalType: "uint96",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newPotentialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BatchMetadataUpdate",
    inputs: [
      {
        name: "_fromTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "_toTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ConsecutiveTransfer",
    inputs: [
      {
        name: "fromTokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "toTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractURIUpdated",
    inputs: [
      {
        name: "newContractURI",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MaxSupplyUpdated",
    inputs: [
      {
        name: "newMaxSupply",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PotentialOwnerUpdated",
    inputs: [
      {
        name: "newPotentialAdministrator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProvenanceHashUpdated",
    inputs: [
      {
        name: "previousHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "newHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyInfoUpdated",
    inputs: [
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "bps",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "ApprovalCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "ApprovalQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "BalanceQueryForZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotExceedMaxSupplyOfUint64",
    inputs: [
      {
        name: "newMaxSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidRoyaltyBasisPoints",
    inputs: [
      {
        name: "basisPoints",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "MintERC2309QuantityExceedsLimit",
    inputs: [],
  },
  {
    type: "error",
    name: "MintToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "MintZeroQuantity",
    inputs: [],
  },
  {
    type: "error",
    name: "NewOwnerIsZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NotNextOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnerQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnershipNotInitializedForExtraData",
    inputs: [],
  },
  {
    type: "error",
    name: "ProvenanceHashCannotBeSetAfterMintStarted",
    inputs: [],
  },
  {
    type: "error",
    name: "RoyaltyAddressCannotBeZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferFromIncorrectOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToNonERC721ReceiverImplementer",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "URIQueryForNonexistentToken",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080806040523461007257303b6100645760098054336001600160a01b03198216811790925560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a361189290816100788239f35b62dc149f60e41b8152600490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461021757806306fdde0314610212578063081812fc1461020d578063095ea7b314610208578063099b6bfa1461020357806318160ddd146101fe57806323452b9c146101f957806323b872dd146101f45780632a55205a146101ef57806342260b5d146101ea57806342842e0e146101e557806344dae42c146101e057806355f804b3146101db5780636352211e146101d65780636c0360eb146101d15780636f8b44b0146101cc57806370a08231146101c7578063715018a6146101c257806379ba5097146101bd5780638da5cb5b146101b8578063938e3d7b146101b357806395d89b41146101ae578063a22cb465146101a9578063a4830114146101a4578063ad2f852a1461019f578063b88d4fde1461019a578063c6ab67a314610195578063c87b56dd14610190578063d5abeb011461018b578063e8a3d48514610186578063e985e9c5146101815763f2fde38b1461017c57600080fd5b611113565b6110bb565b611030565b611012565b610f45565b610f27565b610e97565b610dff565b610dc3565b610d3d565b610cb2565b610b8e565b610b65565b610ae0565b610a94565b610a36565b6109c3565b610993565b610964565b610824565b6106e6565b6106be565b61069d565b61064e565b610635565b6105c2565b61059f565b610531565b610455565b6103f0565b61032f565b610233565b6001600160e01b031981160361022e57565b600080fd5b3461022e57602036600319011261022e5760206004356102528161021c565b63ffffffff60e01b1663152a902d60e11b81149081156102c2575b811561027f575b506040519015158152f35b6301ffc9a760e01b8114915081156102b1575b81156102a0575b5038610274565b635b5e139f60e01b14905038610299565b6380ac58cd60e01b81149150610292565b632483248360e11b8114915061026d565b60005b8381106102e65750506000910152565b81810151838201526020016102d6565b9060209161030f815180928185528580860191016102d3565b601f01601f1916010190565b90602061032c9281815201906102f6565b90565b3461022e576000806003193601126103ed5760405181600354610351816111de565b9081845260209260019182811690816000146103cb5750600114610390575b61038c8561038081890382610e59565b6040519182918261031b565b0390f35b929450600383528483205b8284106103b8575050508161038c93610380928201019338610370565b805485850187015292850192810161039b565b60ff191686860152505050151560051b82010191506103808161038c38610370565b80fd5b3461022e57602036600319011261022e5760043561040d81611342565b15610432576000526007602052602060018060a01b0360406000205416604051908152f35b6040516333d1c03960e21b8152600490fd5b6001600160a01b0381160361022e57565b3461022e57604036600319011261022e5760043561047281610444565b602435906001600160a01b0380610488846112d1565b16918233036104f2575b6104c9816104aa866000526007602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b16907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4005b82600052600860205261051a61051661050f3360406000206111c7565b5460ff1690565b1590565b15610492576040516367d9dca160e11b8152600490fd5b3461022e57602036600319011261022e5760043561054d611739565b60015461058d5760407f7c22004198bf87da0f0dab623c72e66ca1200f4454aa3b9ca30f436275428b7c91600e549080600e5582519182526020820152a1005b60405163e03264af60e01b8152600490fd5b3461022e57600036600319011261022e5760206001546002549003604051908152f35b3461022e576000806003193601126103ed576105dc611187565b600a80546001600160a01b03191690556040518181526000805160206117fd83398151915290602090a180f35b606090600319011261022e5760043561062181610444565b9060243561062e81610444565b9060443590565b3461022e5761064c61064636610609565b9161136b565b005b3461022e57604036600319011261022e57602435600f548060a01c9182810292818404149015171561069857604080516001600160a01b0390921682526127109092046020820152f35b611714565b3461022e57600036600319011261022e576020600f5460a01c604051908152f35b3461022e5761064c6106cf36610609565b90604051926106dd84610e3e565b60008452611509565b3461022e57604036600319011261022e576106ff611739565b6001600160a01b0361070f611779565b16156107c8576127106001600160601b03610728611785565b16116107925761073661179b565b7ff21fccf4d64d86d532c4e4eb86c007b6ad57a460c27d724188625e755ec6cf6d61075f611779565b610767611785565b604080516001600160a01b0390931683526001600160601b039091166020830152819081015b0390a1005b6107c461079d611785565b604051633cadbafb60e01b81526001600160601b0390911660048201529081906024820190565b0390fd5b604051631cc0baef60e01b8152600490fd5b90602060031983011261022e576001600160401b03916004359083821161022e578060238301121561022e57816004013593841161022e576024848301011161022e576024019190565b3461022e57610832366107da565b61083a611739565b6001600160401b03811161095f5761085c81610857600c546111de565b61166c565b6000601f82116001146108de57819061088c936000926108d3575b50508160011b916000199060031b1c19161790565b600c555b600154600254900361089e57005b6000805160206117dd83398151915261078d6108bb60015461172a565b60405191829182919060206040840193600181520152565b013590503880610877565b600c600052601f198216927fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c791805b8581106109475750836001951061092d575b505050811b01600c55610890565b0135600019600384901b60f8161c1916905538808061091f565b9092602060018192868601358155019401910161090d565b610e28565b3461022e57602036600319011261022e5760206001600160a01b0361098a6004356112d1565b16604051908152f35b3461022e57600036600319011261022e5761038c6109af611218565b6040519182916020835260208301906102f6565b3461022e57602036600319011261022e576004356109df611739565b6001600160401b038111610a1e576020817f7810bd47de260c3e9ee10061cf438099dd12256c79485f12f94dbccc981e806c92600b55604051908152a1005b6024906040519063b43e913760e01b82526004820152fd5b3461022e57602036600319011261022e57600435610a5381610444565b6001600160a01b03168015610a82576000526006602052602060018060401b0360406000205416604051908152f35b6040516323d3ad8160e21b8152600490fd5b3461022e576000806003193601126103ed57610aae611187565b600980546001600160a01b0319811690915581906001600160a01b031660008051602061181d8339815191528280a380f35b3461022e576000806003193601126103ed57600a546001600160a01b038082169133839003610b53576001600160a01b0319908116600a556040518481526000805160206117fd83398151915290602090a182600954918216176009551660008051602061181d8339815191528380a380f35b604051636b7584e760e11b8152600490fd5b3461022e57600036600319011261022e576009546040516001600160a01b039091168152602090f35b3461022e57610b9c366107da565b610ba4611739565b6001600160401b03811161095f57610bc681610bc1600d546111de565b6116c0565b600091601f8211600114610c2357610c05828060008051602061183d83398151915295600091610c18575b508160011b916000199060031b1c19161790565b600d555b61078d60405192839283611751565b905083013538610bf1565b600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5601f198316845b818110610c9a5750938360008051602061183d8339815191529510610c80575b5050600182811b01600d55610c09565b820135600019600385901b60f8161c191690553880610c70565b83860135835560209586019560019093019201610c50565b3461022e576000806003193601126103ed5760405181600454610cd4816111de565b9081845260209260019182811690816000146103cb5750600114610d025761038c8561038081890382610e59565b929450600483528483205b828410610d2a575050508161038c93610380928201019338610370565b8054858501870152928501928101610d0d565b3461022e57604036600319011261022e57600435610d5a81610444565b6024359081151580920361022e57336000526008602052610d7f8160406000206111c7565b60ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b3461022e57604036600319011261022e57610ddc611739565b6000805160206117dd8339815191526040805160043581526024356020820152a1005b3461022e57600036600319011261022e57600f546040516001600160a01b039091168152602090f35b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761095f57604052565b601f909101601f19168101906001600160401b0382119082101761095f57604052565b6001600160401b03811161095f57601f01601f191660200190565b3461022e57608036600319011261022e57600435610eb481610444565b602435610ec081610444565b606435916001600160401b03831161022e573660238401121561022e57826004013591610eec83610e7c565b92610efa6040519485610e59565b808452366024828701011161022e57602081600092602461064c9801838801378501015260443591611509565b3461022e57600036600319011261022e576020600e54604051908152f35b3461022e57602036600319011261022e57600435610f6281611342565b1561100057610f6f611218565b805160009015610fe6575060405160a08101604052608081019260008452925b6000190192600a906030828206018553049283610f8f5761038c9350610fd492610fda610380936080601f1994858101920301815260405195869360208501906112ba565b906112ba565b03908101835282610e59565b60405161038c93509150610ff982610e3e565b8152610380565b604051630a14c4b560e41b8152600490fd5b3461022e57600036600319011261022e576020600b54604051908152f35b3461022e576000806003193601126103ed5760405181600d54611052816111de565b9081845260209260019182811690816000146103cb57506001146110805761038c8561038081890382610e59565b929450600d83528483205b8284106110a8575050508161038c93610380928201019338610370565b805485850187015292850192810161108b565b3461022e57604036600319011261022e57602060ff6111076004356110df81610444565b602435906110ec82610444565b6001600160a01b0316600090815260088552604090206111c7565b54166040519015158152f35b3461022e57602036600319011261022e5760043561113081610444565b611138611187565b6001600160a01b0316801561117557600a80546001600160a01b031916821790556040519081526000805160206117fd83398151915290602090a1005b604051633a247dd760e11b8152600490fd5b6009546001600160a01b0316330361119b57565b604051635fc483c560e01b8152600490fd5b6001600160a01b0316600090815260066020526040902090565b9060018060a01b0316600052602052604060002090565b90600182811c9216801561120e575b60208310146111f857565b634e487b7160e01b600052602260045260246000fd5b91607f16916111ed565b60405190600082600c549161122c836111de565b80835260209360019081811690811561129a5750600114611258575b505061125692500383610e59565b565b90939150600c60005281600020936000915b81831061128257505061125693508201013880611248565b8554888401850152948501948794509183019161126a565b91505061125694925060ff191682840152151560051b8201013880611248565b906112cd602092828151948592016102d3565b0190565b8060015481106112ee575b604051636f96cda160e11b8152600490fd5b60009081526005906020918083526040928383205494600160e01b86161561131957505050506112dc565b93929190935b851561132d57505050505090565b6000190180835281855283832054955061131f565b60015481109081611351575090565b90506000526005602052600160e01b604060002054161590565b90611375836112d1565b6001600160a01b03838116928282168490036114f8576000868152600760205260409020805490926113b66001600160a01b03881633908114908414171590565b6114b6575b82169586156114a457611406936113d79261149a575b506111ad565b80546000190190556113e8816111ad565b805460010190556001600160a01b03164260a01b17600160e11b1790565b61141a856000526005602052604060002090565b55600160e11b811615611450575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60018401611468816000526005602052604060002090565b5415611475575b50611428565b600154811461146f57611492906000526005602052604060002090565b55388061146f565b60009055386113d1565b604051633a954ecd60e21b8152600490fd5b6114e161051661050f336114dc8b60018060a01b03166000526008602052604060002090565b6111c7565b156113bb57604051632ce44b5f60e11b8152600490fd5b60405162a1148160e81b8152600490fd5b92919061151782828661136b565b803b611524575b50505050565b61152d936115c3565b1561153b573880808061151e565b6040516368d2bf6b60e11b8152600490fd5b9081602091031261022e575161032c8161021c565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261032c929101906102f6565b3d156115be573d906115a482610e7c565b916115b26040519384610e59565b82523d6000602084013e565b606090565b926020916115ec936000604051809681958294630a85bd0160e11b9a8b85523360048601611562565b03926001600160a01b03165af16000918161163c575b5061162e5761160f611593565b80519081611629576040516368d2bf6b60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b61165e91925060203d8111611665575b6116568183610e59565b81019061154d565b9038611602565b503d61164c565b601f8111611678575050565b600090600c825260208220906020601f850160051c830194106116b6575b601f0160051c01915b8281106116ab57505050565b81815560010161169f565b9092508290611696565b601f81116116cc575050565b600090600d825260208220906020601f850160051c8301941061170a575b601f0160051c01915b8281106116ff57505050565b8181556001016116f3565b90925082906116ea565b634e487b7160e01b600052601160045260246000fd5b60001981019190821161069857565b60018060a01b03600954163314303314171561119b57565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b60043561032c81610444565b6024356001600160601b038116810361022e5790565b6004356117a781610444565b6024356001600160601b038116810361022e576001600160a01b039190911660a09190911b6001600160a01b03191617600f5556fe6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905d981207a7d0b6c62cc46ab0be2a076d0298e4a86d0ab79882dbd01ac37378a2646970667358221220b7abcaa46bb422869be84e36a8e81f5dcb1092129cf176aa2cbd57418717fbbc64736f6c63430008150033";

type ERC721ContractMetadataCloneableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ContractMetadataCloneableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ContractMetadataCloneable__factory extends ContractFactory {
  constructor(...args: ERC721ContractMetadataCloneableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ERC721ContractMetadataCloneable> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721ContractMetadataCloneable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721ContractMetadataCloneable {
    return super.attach(address) as ERC721ContractMetadataCloneable;
  }
  override connect(signer: Signer): ERC721ContractMetadataCloneable__factory {
    return super.connect(signer) as ERC721ContractMetadataCloneable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ContractMetadataCloneableInterface {
    return new utils.Interface(
      _abi
    ) as ERC721ContractMetadataCloneableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ContractMetadataCloneable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721ContractMetadataCloneable;
  }
}
