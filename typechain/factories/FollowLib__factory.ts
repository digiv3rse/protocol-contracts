/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FollowLib, FollowLibInterface } from "../FollowLib";

const _abi = [
  {
    type: "event",
    name: "FollowNFTDeployed",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "followNFT",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Followed",
    inputs: [
      {
        name: "followerProfileId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "idOfProfileFollowed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "followTokenIdAssigned",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "followModuleData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "processFollowModuleReturnData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "transactionExecutor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unfollowed",
    inputs: [
      {
        name: "unfollowerProfileId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "idOfProfileUnfollowed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "transactionExecutor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ArrayMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "Blocked",
    inputs: [],
  },
  {
    type: "error",
    name: "NotFollowing",
    inputs: [],
  },
  {
    type: "error",
    name: "SelfFollow",
    inputs: [],
  },
  {
    type: "error",
    name: "TokenDoesNotExist",
    inputs: [],
  },
] as const;

const _bytecode =
  "";

type FollowLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FollowLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FollowLib__factory extends ContractFactory {
  constructor(...args: FollowLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<FollowLib> {
    return super.deploy(overrides || {}) as Promise<FollowLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FollowLib {
    return super.attach(address) as FollowLib;
  }
  override connect(signer: Signer): FollowLib__factory {
    return super.connect(signer) as FollowLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FollowLibInterface {
    return new utils.Interface(_abi) as FollowLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FollowLib {
    return new Contract(address, _abi, signerOrProvider) as FollowLib;
  }
}
