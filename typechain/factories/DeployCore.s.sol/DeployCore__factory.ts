/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeployCore,
  DeployCoreInterface,
} from "../../DeployCore.s.sol/DeployCore";

const _abi = [
  {
    type: "function",
    name: "IS_SCRIPT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testForkManagement",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608080604052346100dc5760018060ff1981816004541617600455600c541617600c556026548181811c911680156100d2575b60208210146100bc57601f8111610073575b7f61646472657373657356322e747874000000000000000000000000000000001e602655609e83816100e28239f35b6026600052601f0160051c7f744a2cf8fd7008e3d53b67916e73460df9fa5214e3ef23dd4259ca09493a3594908101905b8181106100b15750610044565b6000815582016100a4565b634e487b7160e01b600052602260045260246000fd5b90607f1690610032565b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c8063f0c0adc31460535763f8ccbf4714603257600080fd5b34604f5781600319360112604f5760209060ff600c541615158152f35b5080fd5b82346065578060031936011260655780f35b80fdfea26469706673582212208e88b8ba59eba13d0d05bb315309102b615193086656dff31c88ed1a527aefcf64736f6c63430008150033";

type DeployCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeployCore__factory extends ContractFactory {
  constructor(...args: DeployCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DeployCore> {
    return super.deploy(overrides || {}) as Promise<DeployCore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeployCore {
    return super.attach(address) as DeployCore;
  }
  override connect(signer: Signer): DeployCore__factory {
    return super.connect(signer) as DeployCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployCoreInterface {
    return new utils.Interface(_abi) as DeployCoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeployCore {
    return new Contract(address, _abi, signerOrProvider) as DeployCore;
  }
}
