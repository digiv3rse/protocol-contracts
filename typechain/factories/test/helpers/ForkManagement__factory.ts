/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ForkManagement,
  ForkManagementInterface,
} from "../../../test/helpers/ForkManagement";

const _abi = [
  {
    type: "function",
    name: "IS_SCRIPT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "keyExists",
    inputs: [
      {
        name: "json",
        type: "string",
        internalType: "string",
      },
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setUp",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testForkManagement",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testKeyExists",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x6080806040523461002d57600160ff1981816004541617600455600c541617600c556113a690816100338239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081630a9254e4146100e357508063431e71e91461007e578063528a683c14610083578063f0c0adc31461007e5763f8ccbf471461005657600080fd5b3461007957600036600319011261007957602060ff600c54166040519015158152f35b600080fd5b610d9f565b34610079576040366003190112610079576001600160401b03600435818111610079576100b4903690600401610e0b565b90602435908111610079576020916100d36100d9923690600401610e0b565b9061127b565b6040519015158152f35b34610079576000366003190112610079576100fd81610db2565b600c81526b54455354494e475f464f524b60a01b6020820152604051602081019080821060018060401b038311176108ce576101579260009260405282825260405193849283926334515cdb60e21b845260048401610efb565b0381836000805160206113118339815191525af190811561079b57600091610d84575b5080516001600160401b0381116108ce57610196602b54610f20565b601f8111610d31575b50602091601f8211600114610ccc57918192600092610cc1575b50508160011b916000199060031b1c191617602b555b61022a60206040516101e081610db2565b601c81527b2a22a9aa24a723afa327a925afa1aaa92922a72a2fab22a929a4a7a760211b8282015260405180938192635e97348f60e01b8352604060048401526044830190610ed6565b60006024830152038160006000805160206113118339815191525af190811561079b57600091610c8f575b5080602c55610265602b54610f20565b61026b57005b600160ff19602d541617602d5515610bc2576102ce60405161028c81610db2565b60188152770a0a2054657374696e67207573696e6720257320666f726b60401b6020820152604051906102c9826102c281610f5a565b0383610dcd565b611129565b604051636c98507360e11b81526000816004816000805160206113118339815191525afa90811561079b5761036f916000918291610ba8575b5061034d602f60405183610325829551809260208086019101610e52565b81016e17b0b2323932b9b9b2b9973539b7b760891b602082015203600f810184520182610dcd565b604051809381926360f9bb1160e01b8352602060048401526024830190610ed6565b03816000805160206113118339815191525afa90811561079b57600091610b85575b5080516001600160401b0381116108ce576103ad602f54610f20565b601f8111610b24575b506020601f8211600114610abc578192600092610ab1575b50508160011b916000199060031b1c191617602f555b61040c6040516103fe816103f781610feb565b0382610dcd565b610406611153565b9061121f565b80516001600160401b0381116108ce57610427602e54610f20565b601f8111610a62575b506020601f82116001146109fa5781926000926109ef575b50508160011b916000199060031b1c191617602e555b6104af602060405161046f81610db2565b601281527154455354494e475f464f524b5f424c4f434b60701b8282015260405180938192635e97348f60e01b8352604060048401526044830190610ed6565b60006024830152038160006000805160206113118339815191525af190811561079b576000916109bd575b5060308190551561090f5760305460206040518080936371ee464d60e01b82526040600483015261050d6044830161105e565b906024830152038160006000805160206113118339815191525af1801561079b576108e4575b5061057560305460405161054681610db2565b602081527f466f726b20426c6f636b206e756d6265722028464958454420424c4f434b293a60208201526110d1565b6105886040516103fe816103f781610feb565b80516001600160401b0381116108ce576105a3602e54610f20565b601f811161087b575b506020601f8211600114610813578192600092610808575b50508160011b916000199060031b1c191617602e555b6040516105ea816103f781610feb565b60405190601760f91b60208301526021600090602b5461060981610f20565b90600181169081156107ed57506001146107a7575b50509160209161064b60088386670b98da185a5b925960c21b610666985203601719810185520183610dcd565b6040516356eef15b60e11b8152938492839260048401610efb565b038160006000805160206113118339815191525af190811561079b57600091610769575b506106cc60405161069a81610db2565b6014815273052a30b933b2ba1032b73b34b937b736b2b73a1d60611b6020820152604051906102c9826102c281610f5a565b6107016040516106db81610db2565b60088152672732ba3bb7b9359d60c11b6020820152604051906102c9826102c28161105e565b46036107345761073260405161071681610db2565b600881526721b430b4b724b21d60c11b602082015246906110d1565b005b60405162461bcd60e51b815260206004820152600d60248201526c15dc9bdb99c818da185a5b9259609a1b6044820152606490fd5b90506020813d602011610793575b8161078460209383610dcd565b8101031261007957518161068a565b3d9150610777565b6040513d6000823e3d90fd5b602b6000908152919250906000805160206113518339815191525b8282106107d75750508301018161064b61061e565b6001816020925486858a010152019101906107c2565b60ff191683870152508015150284010190508161064b61061e565b0151905082806105c4565b602e60005260206000209060005b601f1984168110610863575060019383601f1981161061084a575b505050811b01602e556105da565b015160001960f88460031b161c1916905582808061083c565b90916020600181928588015181550193019101610821565b602e600052600080516020611331833981519152601f830160051c810191602084106108c4575b601f0160051c01905b8181106108b857506105ac565b600081556001016108ab565b90915081906108a2565b634e487b7160e01b600052604160045260246000fd5b602090813d8311610908575b6108fa8183610dcd565b810103126100795780610533565b503d6108f0565b60405163261a000d60e21b815260206004820181905281806109336024820161105e565b038160006000805160206113118339815191525af1801561079b57610992575b504360305561098d60405161096781610db2565b60128152712337b93590213637b1b590373ab6b132b91d60711b602082015243906110d1565b610575565b602090813d83116109b6575b6109a88183610dcd565b810103126100795780610953565b503d61099e565b90506020813d6020116109e7575b816109d860209383610dcd565b810103126100795751816104da565b3d91506109cb565b015190508280610448565b602e60005260206000209060005b601f1984168110610a4a575060019383601f19811610610a31575b505050811b01602e5561045e565b015160001960f88460031b161c19169055828080610a23565b90916020600181928588015181550193019101610a08565b602e600052600080516020611331833981519152601f830160051c810160208410610aaa575b601f830160051c82018110610a9e575050610430565b60008155600101610a88565b5080610a88565b0151905082806103ce565b602f60005260206000209060005b601f1984168110610b0c575060019383601f19811610610af3575b505050811b01602f556103e4565b015160001960f88460031b161c19169055828080610ae5565b90916020600181928588015181550193019101610aca565b602f6000527fa813484aef6fb598f9f753daf162068ff39ccea4075cb95e1a30f86995b5b7ee601f830160051c810160208410610b7e575b601f830160051c82018110610b725750506103b6565b60008155600101610b5c565b5080610b5c565b610ba291503d806000833e610b9a8183610dcd565b810190610e75565b81610391565b610bbc91503d8084833e610b9a8183610dcd565b83610307565b60405160608101906001600160401b038211818310176108ce57608491604052602481527f54455354494e475f464f524b5f43555252454e545f56455253494f4e206e6f749081602082015260008063081cd95d60e21b92836040820152604051610c5881610c4a602082019463104c13eb60e21b8652602060248401526044830190610ed6565b03601f198101835282610dcd565b51906a636f6e736f6c652e6c6f675afa506040519162461bcd60e51b83526020600484015260248084015260448301526064820152fd5b90506020813d602011610cb9575b81610caa60209383610dcd565b81010312610079575181610255565b3d9150610c9d565b0151905082806101b9565b601f19821692602b60005260206000209160005b858110610d1957508360019510610d00575b505050811b01602b556101cf565b015160001960f88460031b161c19169055828080610cf2565b91926020600181928685015181550194019201610ce0565b602b600052600080516020611351833981519152601f830160051c81019160208410610d7a575b601f0160051c01905b818110610d6e575061019f565b60008155600101610d61565b9091508190610d58565b610d9991503d806000833e610b9a8183610dcd565b8161017a565b3461007957600036600319011261007957005b604081019081106001600160401b038211176108ce57604052565b601f909101601f19168101906001600160401b038211908210176108ce57604052565b6001600160401b0381116108ce57601f01601f191660200190565b81601f8201121561007957803590610e2282610df0565b92610e306040519485610dcd565b8284526020838301011161007957816000926020809301838601378301015290565b60005b838110610e655750506000910152565b8181015183820152602001610e55565b602081830312610079578051906001600160401b038211610079570181601f82011215610079578051610ea781610df0565b92610eb56040519485610dcd565b8184526020828401011161007957610ed39160208085019101610e52565b90565b90602091610eef81518092818552858086019101610e52565b601f01601f1916010190565b9091610f12610ed393604084526040840190610ed6565b916020818403910152610ed6565b90600182811c92168015610f50575b6020831014610f3a57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f2f565b602b5460009291610f6a82610f20565b908181526020926001908181169081600014610fce5750600114610f8f575b50505050565b9293945090602b6000528360002092846000945b838610610fba575050505001019038808080610f89565b805485870183015294019385908201610fa3565b60ff191685840152505090151560051b0101915038808080610f89565b602f5460009291610ffb82610f20565b908181526020926001908181169081600014610fce575060011461101f5750505050565b9293945090602f6000528360002092846000945b83861061104a575050505001019038808080610f89565b805485870183015294019385908201611033565b602e546000929161106e82610f20565b908181526020926001908181169081600014610fce57506001146110925750505050565b9293945090602e6000528360002092846000945b8386106110bd575050505001019038808080610f89565b8054858701830152940193859082016110a6565b600091908291611116604051809261110260208301956309710a9d60e41b8752604060248501526064840190610ed6565b90604483015203601f198101835282610dcd565b51906a636f6e736f6c652e6c6f675afa50565b60009190610c4a61111684936040519283916020830195634b5c427760e01b875260248401610efb565b60405190816020601760f91b818301526021600091602b549061117582610f20565b916001908181169081156111ff57506001146111b6575b505050506111b49181672e6e6574776f726b60c01b6008935203601719810185520183610dcd565b565b909192949350602b60005281600020906000915b8483106111e95750505050906111b4926008928201019181933861118c565b80548984018801528895509183019181016111ca565b60ff1916858801525050508015150283010190508160086111b43861118c565b6040516309389f5960e31b81529160009183918291611242919060048401610efb565b0381836000805160206113118339815191525af190811561079b57600091611268575090565b610ed3913d8091833e610b9a8183610dcd565b6040516309389f5960e31b8152916000918391829161129e919060048401610efb565b0381836000805160206113118339815191525af190816112f5575b506112f0573d156112eb573d6112ce81610df0565b906112dc6040519283610dcd565b8152600060203d92013e600090565b600090565b600190565b611309903d806000833e610b9a8183610dcd565b50386112b956fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d37fa166cbdbfbb1561ccd9ea985ec0218b5e68502e230525f544285b2bdf3d7e11c44e4875b74d31ff9fd779bf2566af7bd15b87fc985d01f5094b89e3669e4fa264697066735822122098153903f98b622b97512de4f98637f3a6d337c7b5b40af544aa07fe389ed22664736f6c63430008150033";

type ForkManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForkManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForkManagement__factory extends ContractFactory {
  constructor(...args: ForkManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ForkManagement> {
    return super.deploy(overrides || {}) as Promise<ForkManagement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForkManagement {
    return super.attach(address) as ForkManagement;
  }
  override connect(signer: Signer): ForkManagement__factory {
    return super.connect(signer) as ForkManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForkManagementInterface {
    return new utils.Interface(_abi) as ForkManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForkManagement {
    return new Contract(address, _abi, signerOrProvider) as ForkManagement;
  }
}
