/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1271WalletMock,
  ERC1271WalletMockInterface,
} from "../../ERC1271WalletMock.sol/ERC1271WalletMock";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "originalOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isValidSignature",
    inputs: [
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "magicValue",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60803461011b57601f61066238819003918201601f19168301916001600160401b038311848410176101205780849260209460405283398101031261011b57516001600160a01b038082169081830361011b5761005b33610136565b339060005416036100d757156100835761007490610136565b6040516104e4908161017e8239f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001657600080fd5b600092833560e01c9081631626ba7e1461018157508063715018a6146101365780638da5cb5b1461010a5763f2fde38b1461005057600080fd5b34610106576020366003190112610106576001600160a01b0382358181169391929084900361010257610081610264565b83156100b057505082546001600160a01b03198116831784551660008051602061048f8339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b838234610132578160031936011261013257905490516001600160a01b039091168152602090f35b5080fd5b833461017e578060031936011261017e5761014f610264565b80546001600160a01b03198116825581906001600160a01b031660008051602061048f8339815191528280a380f35b80fd5b91929050346102605782600319360112610260576001600160401b03602435818111610249573660238201121561024957808301359180831161024d57601f8301601f19908116603f011685019081118582101761024d57855281845236602483830101116102495792610213928660208461020b956024839b99018387013784010152356103d1565b9190916102bc565b81546001600160a01b039182169116036102435750630b135d3f60e11b905b516001600160e01b03199091168152f35b90610232565b8580fd5b634e487b7160e01b875260418452602487fd5b8380fd5b6000546001600160a01b0316330361027857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60058110156103bb57806102cd5750565b600181036103155760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b600281036103625760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461036b57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9060418151146000146103ff576103fb916020820151906060604084015193015160001a90610409565b9091565b5050600090600290565b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383116104825791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156104755781516001600160a01b0381161561046f579190565b50600190565b50604051903d90823e3d90fd5b5050505060009060039056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122020617d4d4971353d523d23149843004d5accdf760237ef58257c214e6f77f17464736f6c63430008150033";

type ERC1271WalletMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1271WalletMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1271WalletMock__factory extends ContractFactory {
  constructor(...args: ERC1271WalletMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    originalOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ERC1271WalletMock> {
    return super.deploy(
      originalOwner,
      overrides || {}
    ) as Promise<ERC1271WalletMock>;
  }
  override getDeployTransaction(
    originalOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(originalOwner, overrides || {});
  }
  override attach(address: string): ERC1271WalletMock {
    return super.attach(address) as ERC1271WalletMock;
  }
  override connect(signer: Signer): ERC1271WalletMock__factory {
    return super.connect(signer) as ERC1271WalletMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1271WalletMockInterface {
    return new utils.Interface(_abi) as ERC1271WalletMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1271WalletMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1271WalletMock;
  }
}
