/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HeadwearCrown, HeadwearCrownInterface } from "../HeadwearCrown";

const _abi = [
  {
    type: "function",
    name: "getCrown",
    inputs: [
      {
        name: "crownColor",
        type: "HeadwearCrown.CrownColors",
        internalType: "enum HeadwearCrown.CrownColors",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
      {
        name: "",
        type: "Headwear.HeadwearVariants",
        internalType: "enum Headwear.HeadwearVariants",
      },
      {
        name: "",
        type: "Headwear.HeadwearColors",
        internalType: "enum Headwear.HeadwearColors",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "";

type HeadwearCrownConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HeadwearCrownConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HeadwearCrown__factory extends ContractFactory {
  constructor(...args: HeadwearCrownConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<HeadwearCrown> {
    return super.deploy(overrides || {}) as Promise<HeadwearCrown>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HeadwearCrown {
    return super.attach(address) as HeadwearCrown;
  }
  override connect(signer: Signer): HeadwearCrown__factory {
    return super.connect(signer) as HeadwearCrown__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HeadwearCrownInterface {
    return new utils.Interface(_abi) as HeadwearCrownInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HeadwearCrown {
    return new Contract(address, _abi, signerOrProvider) as HeadwearCrown;
  }
}
