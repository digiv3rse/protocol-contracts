/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockFollowModule,
  MockFollowModuleInterface,
} from "../MockFollowModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializeFollowModule",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processFollow",
    inputs: [
      {
        name: "followerProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "followTokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "transactionExecutor",
        type: "address",
        internalType: "address",
      },
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testMockFollowModule",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60803461007057601f6108cd38819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b6040516107fa90816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe60806040908082526004918236101561001757600080fd5b600091823560e01c90816301ffc9a71461051d5750806303ee438c14610231578063681591c114610377578063715018a61461032f5780638a19dde11461029f5780638da5cb5b146102785780639d44649a14610261578063ce90d52e14610231578063f2fde38b146101745763fa11df621461009357600080fd5b34610170576060366003190112610170576024356001600160a01b03811603610170576001600160401b0391604435838111610170576100d86020913690870161071a565b908092918101031261017057600190350361013157815192602084019081118482101761011e5761011a945082528252519182916020835260208301906106da565b0390f35b634e487b7160e01b825260418552602482fd5b815162461bcd60e51b81526020818601526019602482015278135bd8dad19bdb1b1bddd35bd91d5b194e881a5b9d985b1a59603a1b6044820152606490fd5b5080fd5b5082903461022d57602036600319011261022d576001600160a01b03823581811693919290849003610229576101a861074c565b83156101d757505082546001600160a01b0319811683178455166000805160206107a58339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b503461017057816003193601126101705761011a9061024e61063a565b90519182916020835260208301906106da565b823461027557806003193601126102755780f35b80fd5b5034610170578160031936011261017057905490516001600160a01b039091168152602090f35b50823461022d5760a036600319011261022d576044356001600160a01b0381160361022d57608435906001600160401b03821161032b576102e29136910161071a565b505080518092602090818352606051918281850152815b838110610316575050828201840152601f01601f19168101030190f35b608081015187820187015286945081016102f9565b8380fd5b823461027557806003193601126102755761034861074c565b80546001600160a01b03198116825581906001600160a01b03166000805160206107a58339815191528280a380f35b509134610170576020908160031936011261022d578035936001600160401b03918286116102295736602387011215610229578581013583811161050a57601f199251966103cc8685601f8501160189610601565b8188523660248383010111610506578187926024889301838b0137880101526103f361074c565b85519283116104f3575060019261040a84546105c7565b601f81116104ad575b508091601f841160011461044f575050839482939492610444575b5050600019600383901b1c191690821b17905580f35b01519050388061042e565b8392919216958486528286209286905b888210610496575050838596971061047d575b505050811b01905580f35b015160001960f88460031b161c19169055388080610472565b80878596829496860151815501950193019061045f565b848652818620601f850160051c8101918386106104e9575b601f0160051c019085905b8281106104de575050610413565b8781550185906104d0565b90915081906104c5565b634e487b7160e01b855260419052602484fd5b8680fd5b634e487b7160e01b865260418252602486fd5b92905034610275576020366003190112610275576001600160e01b03198435818116929083900361027557637008028360e01b8314948515610566575b60208686519015158152f35b6a444947495f4d4f44554c4560a81b60208201908152600b82529495509293919290858201906001600160401b038211838310176105b457506020965085525190201614903880808061055a565b634e487b7160e01b815260418852602490fd5b90600182811c921680156105f7575b60208310146105e157565b634e487b7160e01b600052602260045260246000fd5b91607f16916105d6565b601f909101601f19168101906001600160401b0382119082101761062457604052565b634e487b7160e01b600052604160045260246000fd5b60405190600082600191825492610650846105c7565b9081845260209481811690816000146106ba575060011461067c575b505061067a92500383610601565b565b600081815285812095935091905b8183106106a257505061067a9350820101388061066c565b8554888401850152948501948794509183019161068a565b91505061067a94925060ff191682840152151560051b820101388061066c565b919082519283825260005b848110610706575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016106e5565b9181601f84011215610747578235916001600160401b038311610747576020838186019501011161074757565b600080fd5b6000546001600160a01b0316330361076057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220e74545d6123fe8e1825f7ba421b37d3080988435fb47220db2cc1b98ce4422ab64736f6c63430008150033";

type MockFollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockFollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockFollowModule__factory extends ContractFactory {
  constructor(...args: MockFollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MockFollowModule> {
    return super.deploy(
      moduleOwner,
      overrides || {}
    ) as Promise<MockFollowModule>;
  }
  override getDeployTransaction(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(moduleOwner, overrides || {});
  }
  override attach(address: string): MockFollowModule {
    return super.attach(address) as MockFollowModule;
  }
  override connect(signer: Signer): MockFollowModule__factory {
    return super.connect(signer) as MockFollowModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFollowModuleInterface {
    return new utils.Interface(_abi) as MockFollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFollowModule {
    return new Contract(address, _abi, signerOrProvider) as MockFollowModule;
  }
}
