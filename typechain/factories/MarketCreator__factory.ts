/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MarketCreator, MarketCreatorInterface } from "../MarketCreator";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_printAccessControlAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_printSplitsDataAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_printOrderDataAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collectionCreatorAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_printDesignDataAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_fiatPKPAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "buyTokens",
    inputs: [
      {
        name: "_params",
        type: "tuple",
        internalType: "struct PrintLibrary.BuyTokensParams",
        components: [
          {
            name: "collectionIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "collectionAmounts",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "collectionIndexes",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "details",
            type: "string",
            internalType: "string",
          },
          {
            name: "buyerAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "chosenCurrency",
            type: "address",
            internalType: "address",
          },
          {
            name: "pkpAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "pubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyerProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "withPKP",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "buyTokensOnlyNFT",
    inputs: [
      {
        name: "_params",
        type: "tuple",
        internalType: "struct PrintLibrary.BuyTokensOnlyNFTParams",
        components: [
          {
            name: "collectionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyerAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "chosenCurrency",
            type: "address",
            internalType: "address",
          },
          {
            name: "pubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buyerProfileId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectionCreator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract CollectionCreator",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fiatPKPAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "printAccessControl",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract PrintAccessControl",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "printDesignData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract PrintDesignData",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "printOrderData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract PrintOrderData",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "printSplitsData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract PrintSplitsData",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setCollectionCreatorAddress",
    inputs: [
      {
        name: "_newCollectionCreatorAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFiatPKPAddress",
    inputs: [
      {
        name: "_newFiatPKPAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPrintAccessControlAddress",
    inputs: [
      {
        name: "_newPrintAccessControlAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPrintDesignDataAddress",
    inputs: [
      {
        name: "_newPrintDesignDataAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPrintOrderDataAddress",
    inputs: [
      {
        name: "_newPrintOrderDataAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPrintSplitsDataAddress",
    inputs: [
      {
        name: "_newPrintSplitsDataAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "InvalidAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "";

type MarketCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketCreator__factory extends ContractFactory {
  constructor(...args: MarketCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _printAccessControlAddress: string,
    _printSplitsDataAddress: string,
    _printOrderDataAddress: string,
    _collectionCreatorAddress: string,
    _printDesignDataAddress: string,
    _fiatPKPAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MarketCreator> {
    return super.deploy(
      _printAccessControlAddress,
      _printSplitsDataAddress,
      _printOrderDataAddress,
      _collectionCreatorAddress,
      _printDesignDataAddress,
      _fiatPKPAddress,
      overrides || {}
    ) as Promise<MarketCreator>;
  }
  override getDeployTransaction(
    _printAccessControlAddress: string,
    _printSplitsDataAddress: string,
    _printOrderDataAddress: string,
    _collectionCreatorAddress: string,
    _printDesignDataAddress: string,
    _fiatPKPAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _printAccessControlAddress,
      _printSplitsDataAddress,
      _printOrderDataAddress,
      _collectionCreatorAddress,
      _printDesignDataAddress,
      _fiatPKPAddress,
      overrides || {}
    );
  }
  override attach(address: string): MarketCreator {
    return super.attach(address) as MarketCreator;
  }
  override connect(signer: Signer): MarketCreator__factory {
    return super.connect(signer) as MarketCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketCreatorInterface {
    return new utils.Interface(_abi) as MarketCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketCreator {
    return new Contract(address, _abi, signerOrProvider) as MarketCreator;
  }
}
