/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockNonDiGiHubGoverned,
  MockNonDiGiHubGovernedInterface,
} from "../../GovernanceTest.t.sol/MockNonDiGiHubGoverned";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "newGovernance",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "failWithCustomError",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "failWithNoErrorData",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "failWithPanic",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "failWithStringRevert",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "governance",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "requiresGovernance",
    inputs: [
      {
        name: "pass",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "testMockNonDiGiHubGoverned",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "CustomError",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60803461007457601f6102b038819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161022090816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c91826314418cd8146101a35782633d94ca7a1461011a5782635aa6e675146100ee57826384b18ddd146100cf5782639a253d44146100bb5782639f26e43f1461008757505063a5bb48a51461007157600080fd5b3461008457806003193601126100845780fd5b80fd5b909150346100b757826003193601126100b7575162461bcd60e51b8152915081906100b39082016101c8565b0390fd5b8280fd5b833461008457806003193601126100845780f35b833461008457806003193601126100845750516309caebf360e01b8152fd5b839034610116578160031936011261011657905490516001600160a01b039091168152602090f35b5080fd5b9083346100845760203660031901126100845781359081159182150361008457546001600160a01b0316330361017157610158576020825160018152f35b905162461bcd60e51b81529081906100b39082016101c8565b506020606492519162461bcd60e51b8352820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152fd5b838234610116578160031936011261011657634e487b7160e01b825260019052602490fd5b6060906020815260076020820152664661696c75726560c81b6040820152019056fea2646970667358221220d7c7810a27dc878d7f64bf16ff423badf0e109e083c4bad66763432f915d1ec164736f6c63430008150033";

type MockNonDiGiHubGovernedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNonDiGiHubGovernedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNonDiGiHubGoverned__factory extends ContractFactory {
  constructor(...args: MockNonDiGiHubGovernedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    newGovernance: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MockNonDiGiHubGoverned> {
    return super.deploy(
      newGovernance,
      overrides || {}
    ) as Promise<MockNonDiGiHubGoverned>;
  }
  override getDeployTransaction(
    newGovernance: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(newGovernance, overrides || {});
  }
  override attach(address: string): MockNonDiGiHubGoverned {
    return super.attach(address) as MockNonDiGiHubGoverned;
  }
  override connect(signer: Signer): MockNonDiGiHubGoverned__factory {
    return super.connect(signer) as MockNonDiGiHubGoverned__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNonDiGiHubGovernedInterface {
    return new utils.Interface(_abi) as MockNonDiGiHubGovernedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockNonDiGiHubGoverned {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockNonDiGiHubGoverned;
  }
}
