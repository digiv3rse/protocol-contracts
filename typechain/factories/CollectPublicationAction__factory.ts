/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CollectPublicationAction,
  CollectPublicationActionInterface,
} from "../CollectPublicationAction";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "hub",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectNFTImpl",
        type: "address",
        internalType: "address",
      },
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "COLLECT_NFT_IMPL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "HUB",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCollectData",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct CollectPublicationAction.CollectData",
        components: [
          {
            name: "collectModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "collectNFT",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "initializePublicationAction",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "transactionExecutor",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isCollectModuleRegistered",
    inputs: [
      {
        name: "collectModule",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processPublicationAction",
    inputs: [
      {
        name: "processActionParams",
        type: "tuple",
        internalType: "struct Types.ProcessActionParams",
        components: [
          {
            name: "publicationActedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationActedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "actorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "actorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "actionModuleData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerCollectModule",
    inputs: [
      {
        name: "collectModule",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verifyCollectModule",
    inputs: [
      {
        name: "collectModule",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "CollectModuleRegistered",
    inputs: [
      {
        name: "collectModule",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "metadata",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CollectNFTDeployed",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "collectNFT",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Collected",
    inputs: [
      {
        name: "collectedProfileId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "collectedPubId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "collectorProfileId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "nftRecipient",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "collectActionData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "collectActionResult",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "collectNFT",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "transactionExecutor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "CollectNotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "NotCollectModule",
    inputs: [],
  },
  {
    type: "error",
    name: "NotHub",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c034620000bb57601f620015a838819003918201601f19168301916001600160401b03831184841017620000c057808492606094604052833981010312620000bb576200004d81620000d6565b6200007e6200006d60406200006560208601620000d6565b9401620000d6565b6200007833620000eb565b620000eb565b60805260a05260405161147590816200013382396080518181816102b1015281816103140152610c8e015260a0518181816103750152610e4d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000bb57565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608080604052600436101561001357600080fd5b600090813560e01c908162a7c89b14610e395750806301ffc9a714610dba57806303ee438c146102195780630b96022014610c21578063681591c114610ac0578063715018a614610a78578063895e9c1614610a4f5780638da5cb5b14610a285780638e8b8c97146109fa57806390ce6e08146102e0578063a4c52b861461029b578063c4d66de81461024d578063ce90d52e14610219578063e8336893146101a2578063f2fde38b146101115763f32ffcbc146100d057600080fd5b3461010e57602036600319011261010e5760209060ff906040906001600160a01b036100fa610fdc565b168152600284522054166040519015158152f35b80fd5b503461010e57602036600319011261010e5761012b610fdc565b610133611372565b6001600160a01b0381161561014e5761014b906113ca565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461010e57604036600319011261010e576040818192602083516101c681610eb6565b82815201526004358152600360205281812060243582526020522081516101ec81610eb6565b81546001600160a01b03908116808352600190930154811660209283019081528451938452511690820152f35b503461010e578060031936011261010e57610249610235610ef4565b604051918291602083526020830190610fb7565b0390f35b503461010e57602036600319011261010e57610267610fdc565b81546001600160a01b039081161580159190610290575b5061028c5761014b906113ca565b5080fd5b90508116153861027e565b503461010e578060031936011261010e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461010e5760031960203682011261028c576001600160401b036004351161028c57610120906004353603011261010e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036109e85760043560040135815260036020526040812060246004350135825260205260018060a01b0360408220541680156109d6577f000000000000000000000000000000000000000000000000000000000000000060043560040135835260036020526040832060246004350135845260205260018060a01b0360016040852001541690811561084f575b506022196004353603016101046004350135121561084b57600480356101048101350190810135906001600160401b03821161084757602481019082360382136108305761041c920160240190611208565b6040516335313c2160e11b81526001600160a01b03838116600483015290949190602090869060249082908a9089165af194851561083c578695610804575b5061046a606460043501611290565b92610479608460043501611290565b9361048e60a4600435016004356004016112a4565b956104a360c4600435016004356004016112a4565b6104b760e4600435016004356004016112a4565b6040519a90969195906001600160401b036101208d01908111908d11176107ee576101208c01604090815260048035908101358e52602481013560208f015260440135908d01526001600160a01b0392831660608d01529190941660808b0152610532936105269136916112f0565b60a08a015236916112f0565b60c0870152610540826112d9565b9161054e6040519384610ed1565b8083526020830191368260051b8201116107ea5780925b8260051b820184106107cc575050505060e085015281610100850152866040518095636fb7166160e01b82526020600483015280516024830152602081015160448301526040810151606483015260018060a01b03606082015116608483015260018060a01b0360808201511660a483015261060b6105f560a083015161012060c486015261014485019061133e565b60c08301518482036023190160e486015261133e565b9060e081015191602319848203016101048501526020808451928381520193019085905b80821061078c57505050610100015182820360231901610124840152829161065691610fb7565b038183875af1938415610781579161074e9391610235969593896102499a9561075c575b50506106be6106b0610690608460043501611290565b936040519360018060a01b0316845260e0602085015260e0840190610fb7565b828103604084015285610fb7565b6001600160a01b038781166060840152608083018a905290921660a08201524260c0820152600480356044810135936024820135939190920135917f4b220a4de1946418b442a3659c114b9f74ed61e23509c34f97bbe8f2f1d645e0919081900390a460405195869460018060a01b031660208601526040850152606084015260808084015260a0830190610fb7565b03601f198101835282610ed1565b6107799295503d8091833e6107718183610ed1565b81019061125a565b92388061067a565b6040513d89823e3d90fd5b92945092908095505160058110156107b8576020828192600194520195019201918b949289949261062f565b634e487b7160e01b8d52602160045260248dfd5b6005843510156107e6578335815260209384019301610565565b8b80fd5b8a80fd5b634e487b7160e01b600052604160045260246000fd5b9094506020813d602011610834575b8161082060209383610ed1565b810103126108305751933861045b565b8580fd5b3d9150610813565b6040513d88823e3d90fd5b8480fd5b8280fd5b6e5af43d82803e903d91602b57fd5bf39150763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c1617845260781b176020526037600983f06001600160a01b03811690811561099857813b1561099457604051637251808b60e11b8152600435600401356004820152602460043501356024820152848160448183875af180156109895761095a575b508160405142815260246004350135907f0b227b550ffed48af813b32e246f787e99581ee13206ba8f9d90d63615269b3f60206004356004013592a490600435600401358452600360205260408420602460043501358552602052600160408520019060018060a01b0319825416179055386103ca565b9093906001600160401b0381116109755760405292386108e3565b634e487b7160e01b82526041600452602482fd5b6040513d87823e3d90fd5b8380fd5b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b60405163ad4cf0a360e01b8152600490fd5b6040516313bd2e8360e31b8152600490fd5b503461010e57602036600319011261010e576020610a1e610a19610fdc565b61107e565b6040519015158152f35b503461010e578060031936011261010e57546040516001600160a01b039091168152602090f35b503461010e57602036600319011261010e57610a6c610a19610fdc565b50602060405160018152f35b503461010e578060031936011261010e57610a91611372565b80546001600160a01b03198116825581906001600160a01b03166000805160206114008339815191528280a380f35b503461010e576020908160031936011261010e576001600160401b039160043583811161084b573660238201121561084b57610b06903690602481600401359101611012565b92610b0f611372565b8351908111610c0d57600191610b258354610e7c565b601f8111610bc7575b5080601f8311600114610b685750839482939492610b5d575b5050600019600383901b1c191690821b17905580f35b015190503880610b47565b90601f198316958486528286209286905b888210610bb05750508385969710610b97575b505050811b01905580f35b015160001960f88460031b161c19169055388080610b8c565b808785968294968601518155019501930190610b79565b838552818520601f840160051c810191838510610c03575b601f0160051c019084905b828110610bf8575050610b2e565b868155018490610bea565b9091508190610bdf565b634e487b7160e01b83526041600452602483fd5b503461010e57608036600319011261010e57602435906001600160a01b0390604435828116906004359082900361084b576001600160401b0394606435929086841161084757366023850112156108475783600401358781116108305784016024019336851161083057867f00000000000000000000000000000000000000000000000000000000000000001633036109e85786946024610cc29201611208565b94169083865260209660038852604087208288528852604087205416610da957858094610cee8461107e565b5080825260038952604082208383528952604082208460018060a01b0319825416179055610d49604051978896879586946391027b5360e01b8652600486015260248501526044840152608060648401526084830190610fb7565b03925af18015610d9e57610d84575b506040519282840190811184821017610975576040528252610249604051928284938452830190610fb7565b610d97903d8084833e6107718183610ed1565b5038610d58565b6040513d84823e3d90fd5b60405162dc149f60e41b8152600490fd5b503461010e57602036600319011261010e576001600160e01b03196004358181169081900361084b576020925063136b0d8560e31b8114918215610e05575b50506040519015158152f35b909150604051838101906a444947495f4d4f44554c4560a81b8252600b8152610e2d81610eb6565b51902016143880610df9565b90503461028c578160031936011261028c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90600182811c92168015610eac575b6020831014610e9657565b634e487b7160e01b600052602260045260246000fd5b91607f1691610e8b565b604081019081106001600160401b038211176107ee57604052565b601f909101601f19168101906001600160401b038211908210176107ee57604052565b60405190600082600191825492610f0a84610e7c565b908184526020948181169081600014610f745750600114610f36575b5050610f3492500383610ed1565b565b600081815285812095935091905b818310610f5c575050610f3493508201013880610f26565b85548884018501529485019487945091830191610f44565b915050610f3494925060ff191682840152151560051b8201013880610f26565b60005b838110610fa75750506000910152565b8181015183820152602001610f97565b90602091610fd081518092818552858086019101610f94565b601f01601f1916010190565b600435906001600160a01b0382168203610ff257565b600080fd5b6001600160401b0381116107ee57601f01601f191660200190565b92919261101e82610ff7565b9161102c6040519384610ed1565b829481845281830111610ff2578281602093846000960137010152565b9092919261105681610ff7565b916110646040519384610ed1565b829482845282820111610ff2576020610f34930190610f94565b6001600160a01b031660008181526002602090815260408083205490939060ff16156110ab575050905090565b83516301ffc9a760e01b8152637f5ab69960e11b60048201528281602481855afa9081156111b75784916111d2575b50156111c15783516367486a9760e11b81528381600481855afa9081156111b757849161114e575b50906000805160206114208339815191526111326002949387519182918583526060878401526060830190610fb7565b42898301520390a183525220600160ff19825416179055600190565b90503d8085833e61115f8183610ed1565b8101908381830312610847578051906001600160401b038211610830570181601f82011215610847576111326111ad8594938360029760008051602061142083398151915295519101611049565b9293945050611102565b85513d86823e3d90fd5b835163ceeb1f8f60e01b8152600490fd5b90508281813d8311611201575b6111e98183610ed1565b810103126109945751801515810361099457386110da565b503d6111df565b9190604083820312610ff25782356001600160a01b0381168103610ff257926020810135906001600160401b038211610ff257019080601f83011215610ff25781602061125793359101611012565b90565b602081830312610ff2578051906001600160401b038211610ff257019080601f83011215610ff257815161125792602001611049565b356001600160a01b0381168103610ff25790565b903590601e1981360301821215610ff257018035906001600160401b038211610ff257602001918160051b36038313610ff257565b6001600160401b0381116107ee5760051b60200190565b92916112fb826112d9565b916113096040519384610ed1565b829481845260208094019160051b8101928311610ff257905b82821061132f5750505050565b81358152908301908301611322565b90815180825260208080930193019160005b82811061135e575050505090565b835185529381019392810192600101611350565b6000546001600160a01b0316330361138657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600080546001600160a01b039283166001600160a01b03198216811783559216906000805160206114008339815191529080a356fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0f6b57d3a49fa5be1fc25346ee0b64048a6a4734e50280e64080e3de8dca50267a2646970667358221220b4223d179cfa83d64db7dfea52b9e9221eed260625929a73dd04b6c38f4673a364736f6c63430008150033";

type CollectPublicationActionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectPublicationActionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollectPublicationAction__factory extends ContractFactory {
  constructor(...args: CollectPublicationActionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    hub: string,
    collectNFTImpl: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<CollectPublicationAction> {
    return super.deploy(
      hub,
      collectNFTImpl,
      moduleOwner,
      overrides || {}
    ) as Promise<CollectPublicationAction>;
  }
  override getDeployTransaction(
    hub: string,
    collectNFTImpl: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      hub,
      collectNFTImpl,
      moduleOwner,
      overrides || {}
    );
  }
  override attach(address: string): CollectPublicationAction {
    return super.attach(address) as CollectPublicationAction;
  }
  override connect(signer: Signer): CollectPublicationAction__factory {
    return super.connect(signer) as CollectPublicationAction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectPublicationActionInterface {
    return new utils.Interface(_abi) as CollectPublicationActionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollectPublicationAction {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CollectPublicationAction;
  }
}
