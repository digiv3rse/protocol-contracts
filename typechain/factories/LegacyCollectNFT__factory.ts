/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LegacyCollectNFT,
  LegacyCollectNFTInterface,
} from "../LegacyCollectNFT";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "hub",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "HUB",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exists",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDomainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSourcePublicationPointer",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintTimestampOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nonces",
    inputs: [
      {
        name: "signer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "royaltyInfo",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "salePrice",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRoyalty",
    inputs: [
      {
        name: "royaltiesInBasisPoints",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "tokenDataOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Types.TokenData",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "mintTimestamp",
            type: "uint96",
            internalType: "uint96",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InitParamsInvalid",
    inputs: [],
  },
  {
    type: "error",
    name: "Initialized",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidParameter",
    inputs: [],
  },
  {
    type: "error",
    name: "NonERC721ReceiverImplementer",
    inputs: [],
  },
  {
    type: "error",
    name: "NotHub",
    inputs: [],
  },
  {
    type: "error",
    name: "NotOwnerOrApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "NotProfileOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "TokenDoesNotExist",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0346100ab57601f6116b538819003918201601f19168301916001600160401b038311848410176100b0578084926020946040528339810103126100ab57516001600160a01b0381168082036100ab571561009957608052600160ff19600e541617600e556040516115ee90816100c782396080518181816105fa015281816107ff01528181610a7e01528181610c90015261134d0152f35b6040516348be0eb360e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101b757806306fdde03146101b2578063081812fc146101ad578063095ea7b3146101a857806318160ddd146101a357806323b872dd1461019e5780632a55205a146101995780633a755ed1146101945780634209a2e11461018f57806342842e0e1461018a57806342966c68146101855780634f558e791461018057806350ddf35c1461017b5780636352211e146101765780636a6278421461017157806370a082311461016c5780637ecebe001461016757806395d89b4114610162578063a22cb4651461015d578063a4c52b8614610158578063b88d4fde14610153578063c0da9bcd1461014e578063c87b56dd14610149578063e4a3011614610144578063e985e9c51461013f5763ed24911d1461013a57600080fd5b610d96565b610d3e565b610cf2565b610c3d565b610bac565b610b1c565b610a68565b6109d7565b610980565b610943565b6108ff565b6107d7565b6107b9565b610771565b610749565b6106c7565b610687565b6105c1565b610598565b610534565b61050d565b6104c3565b610419565b6103d8565b610324565b6101d3565b6001600160e01b03198116036101ce57565b600080fd5b346101ce5760203660031901126101ce576102286004356101f3816101bc565b63ffffffff60e01b1663152a902d60e11b81149081156102b7575b811561022c575b5060405190151581529081906020820190565b0390f35b6380ac58cd60e01b8114915081156102a6575b8115610295575b8115610284575b8115610273575b8115610262575b5038610215565b6301ffc9a760e01b1490503861025b565b635b5e139f60e01b81149150610254565b6393ea2f1d60e01b8114915061024d565b630852cd8d60e31b81149150610246565b63c744eb3560e01b8114915061023f565b6301ffc9a760e01b8114915061020e565b60005b8381106102db5750506000910152565b81810151838201526020016102cb565b90602091610304815180928185528580860191016102c8565b601f01601f1916010190565b9060206103219281815201906102eb565b90565b346101ce5760003660031901126101ce57610228610343600b5461143b565b6103cc6048610353600c5461143b565b92604051938491774469476920436f6c6c656374207c2050726f66696c65202360401b602084015261038f8151809260206038870191016102c8565b82016f202d205075626c69636174696f6e202360801b60388201526103bd82518093602087850191016102c8565b01036028810184520182610ade565b60405191829182610310565b346101ce5760203660031901126101ce5760206103f6600435610e0b565b6040516001600160a01b039091168152f35b6001600160a01b038116036101ce57565b346101ce5760403660031901126101ce5760043561043681610408565b6024356001600160a01b038061044b83610dea565b1680918416146104b157803314159081610482575b506104705761046e91610fea565b005b604051636d8a29e760e11b8152600490fd5b905060005260056020526104ab6104a76104a0336040600020610dd3565b5460ff1690565b1590565b38610460565b604051630309cb8760e51b8152600490fd5b346101ce5760003660031901126101ce576020600854604051908152f35b60609060031901126101ce576004356104f981610408565b9060243561050681610408565b9060443590565b346101ce5761051b366104e1565b906105268233610e90565b156104705761046e92610f18565b346101ce5760403660031901126101ce57602435610550611328565b600f549182810292818404149015171561058257604080516001600160a01b0390921682526127109092046020820152f35b634e487b7160e01b600052601160045260246000fd5b346101ce5760003660031901126101ce57600b54600c5460408051928352602083019190915290f35b346101ce5760203660031901126101ce57600b546040516331a9108f60e11b815260048101919091526001600160a01b036020826024817f000000000000000000000000000000000000000000000000000000000000000085165afa91821561068257600092610652575b50339116036106405761046e60043561116a565b60405163f194fae560e01b8152600490fd5b61067491925060203d811161067b575b61066c8183610ade565b810190611313565b903861062c565b503d610662565b611072565b346101ce57610695366104e1565b60405160208101939092906001600160401b038511848610176106c25761046e9460405260008452610e34565b610aad565b346101ce5760203660031901126101ce576004356106e58133610e90565b15610470576106f381610dea565b6106fc82610fa8565b60018060a01b03169060008281938252600360205260408220600019908181540190556008540160085582825260026020528160408120556000805160206115798339815191528280a480f35b346101ce5760203660031901126101ce576020610767600435610e73565b6040519015158152f35b346101ce5760203660031901126101ce57600435600052600260205260406000205460a01c80156107a757602090604051908152f35b60405163677510db60e11b8152600490fd5b346101ce5760203660031901126101ce5760206103f6600435610dea565b346101ce5760203660031901126101ce576004356107f481610408565b6001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036108ed576001600d54019182600d55811690811580156108de575b6104b15761088d90826000526003602052604060002061085e815460010190565b905561087461086f60085460010190565b600855565b610888846000526002602052604060002090565b610ef9565b600082815260026020526040902080546001600160a01b03164260a01b6001600160a01b0319161790556102288260405193849360006000805160206115798339815191528180a482526020820190565b506108e883610e73565b61083d565b6040516313bd2e8360e31b8152600490fd5b346101ce5760203660031901126101ce5760043561091c81610408565b6001600160a01b031680156104b15760005260036020526020604060002054604051908152f35b346101ce5760203660031901126101ce5760043561096081610408565b60018060a01b0316600052600a6020526020604060002054604051908152f35b346101ce5760003660031901126101ce576102286040516109a081610ac3565b600c81526b111251d24b50d3d3131150d560a21b60208201526040519182916020835260208301906102eb565b801515036101ce57565b346101ce5760403660031901126101ce576004356109f481610408565b602435610a00816109cd565b6001600160a01b038216913383146104b157610a29903360005260056020526040600020610dd3565b9015159060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b346101ce5760003660031901126101ce576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b038211176106c257604052565b601f909101601f19168101906001600160401b038211908210176106c257604052565b6001600160401b0381116106c257601f01601f191660200190565b346101ce5760803660031901126101ce57600435610b3981610408565b602435610b4581610408565b606435916001600160401b0383116101ce57366023840112156101ce57826004013591610b7183610b01565b92610b7f6040519485610ade565b80845236602482870101116101ce57602081600092602461046e9801838801378501015260443591610e34565b346101ce5760203660031901126101ce5760043560006020604051610bd081610ac3565b8281520152610bde81610e73565b156107a7576000526002602052610228604060002060405190610c0082610ac3565b546001600160a01b03811680835260a09190911c60209283019081526040805192835290516001600160601b031692820192909252918291820190565b346101ce5760203660031901126101ce57610c5c6104a7600435610e73565b6107a757600b54600c54604051635ad18a4b60e11b8152600481019290925260248201526000816044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156106825761022891600091610cd1575b5060405191829182610310565b610cec913d8091833e610ce48183610ade565b810190611178565b38610cc4565b346101ce5760403660031901126101ce57600e5460ff8116610d2c5760ff1916600117600e556103e8600f55600435600b55602435600c55005b6040516302ed543d60e51b8152600490fd5b346101ce5760403660031901126101ce57602060ff610d8a600435610d6281610408565b60243590610d6f82610408565b6001600160a01b031660009081526005855260409020610dd3565b54166040519015158152f35b346101ce5760003660031901126101ce576020610db16111f5565b604051908152f35b6001600160a01b0316600090815260036020526040902090565b9060018060a01b0316600052602052604060002090565b6000908152600260205260409020546001600160a01b031680156107a75790565b610e1481610e73565b156107a7576000908152600460205260409020546001600160a01b031690565b929190610e418233610e90565b156104705783610e558383610e5a97610f18565b6110ae565b15610e6157565b6040516342eac10f60e11b8152600490fd5b6000908152600260205260409020546001600160a01b0316151590565b6001600160a01b0380610ea284610dea565b169080831690828214948515610ee1575b5050508215610ec157505090565b60ff925090610edc9160005260056020526040600020610dd3565b541690565b610eee9192939550610e0b565b161491388080610eb3565b80546001600160a01b0319166001600160a01b03909216919091179055565b610f2183610dea565b6001600160a01b0380831692918116839003610f965783169283156104b157610f55610f8192610f5087610fa8565b610db9565b8054600019019055610f6681610db9565b60018154019055610888856000526002602052604060002090565b600080516020611579833981519152600080a4565b6040516349e27cff60e01b8152600490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b03610fd583610dea565b166000805160206115998339815191528280a4565b816000526004602052611001816040600020610ef9565b6001600160a01b038061101384610dea565b16911690600080516020611599833981519152600080a4565b908160209103126101ce5751610321816101bc565b6001600160a01b039182168152911660208201526040810191909152608060608201819052610321929101906102eb565b6040513d6000823e3d90fd5b3d156110a9573d9061108f82610b01565b9161109d6040519384610ade565b82523d6000602084013e565b606090565b92909190823b15611161576110e1926020926000604051809681958294630a85bd0160e11b9a8b85523360048601611041565b03926001600160a01b03165af160009181611131575b506111235761110461107e565b8051908161111e576040516342eac10f60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b61115391925060203d811161115a575b61114b8183610ade565b81019061102c565b90386110f7565b503d611141565b50505050600190565b61271081116104b157600f55565b6020818303126101ce578051906001600160401b0382116101ce570181601f820112156101ce5780516111aa81610b01565b926111b86040519485610ade565b818452602082840101116101ce5761032191602080850191016102c8565b600160206040516111e681610ac3565b82815201601960f91b81522090565b73db46d1dc155634fbc732f92e853b10b288ad5a1d3014806112f4575b6112d0576040516306fdde0360e01b8152600081600481305afa908115610682576000916112b7575b50602081519101206112a36112b16112516111d6565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f602082019081529181019590955260608501919091524660808501523060a08501529291829060c0820190565b03601f198101835282610ade565b51902090565b6112ca913d8091833e610ce48183610ade565b3861123b565b7fbf9544cf7d7a0338fc4f071be35409a61e51e9caef559305410ad74e16a05f2d90565b5060894614611212565b908160209103126101ce5751610321816109cd565b908160209103126101ce575161032181610408565b600b54604051634f558e7960e01b815260048101829052602091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016908381602481855afa908115610682576000916113dc575b50156113d4576040516331a9108f60e11b815260048101929092528290829060249082905afa918215610682576000926113be57505090565b6103219250803d1061067b5761066c8183610ade565b505050600090565b6113fc9150843d8611611402575b6113f48183610ade565b8101906112fe565b38611385565b503d6113ea565b9061141382610b01565b6114206040519182610ade565b8281528092611431601f1991610b01565b0190602036910137565b6000908072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8082101561156a575b506904ee2d6d415b85acef8160201b8083101561155b575b50662386f26fc100008083101561154c575b506305f5e1008083101561153d575b506127108083101561152e575b50606482101561151e575b600a80921015611514575b6001908160216114cc828701611409565b95860101905b6114de575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561150f579190826114d2565b6114d7565b91600101916114bb565b91906064600291049101916114b0565b600491939204910191386114a5565b60089193920491019138611498565b60109193920491019138611489565b60209193920491019138611477565b60409350810491503861145f56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212208273faefe5005b5bfeea9a4fae485150d7bc96bd692ae719867b52146f871a1664736f6c63430008150033";

type LegacyCollectNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LegacyCollectNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LegacyCollectNFT__factory extends ContractFactory {
  constructor(...args: LegacyCollectNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    hub: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LegacyCollectNFT> {
    return super.deploy(hub, overrides || {}) as Promise<LegacyCollectNFT>;
  }
  override getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  override attach(address: string): LegacyCollectNFT {
    return super.attach(address) as LegacyCollectNFT;
  }
  override connect(signer: Signer): LegacyCollectNFT__factory {
    return super.connect(signer) as LegacyCollectNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegacyCollectNFTInterface {
    return new utils.Interface(_abi) as LegacyCollectNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LegacyCollectNFT {
    return new Contract(address, _abi, signerOrProvider) as LegacyCollectNFT;
  }
}
