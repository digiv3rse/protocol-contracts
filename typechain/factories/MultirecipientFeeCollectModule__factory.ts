/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultirecipientFeeCollectModule,
  MultirecipientFeeCollectModuleInterface,
} from "../MultirecipientFeeCollectModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "hub",
        type: "address",
        internalType: "address",
      },
      {
        name: "actionModule",
        type: "address",
        internalType: "address",
      },
      {
        name: "moduleRegistry",
        type: "address",
        internalType: "address",
      },
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ACTION_MODULE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MODULE_REGISTRY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IModuleRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculateFee",
    inputs: [
      {
        name: "processCollectParams",
        type: "tuple",
        internalType: "struct ModuleTypes.ProcessCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint160",
        internalType: "uint160",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBasePublicationData",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BaseProfilePublicationData",
        components: [
          {
            name: "amount",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "collectLimit",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "currentCollects",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "referralFee",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "followerOnly",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "endTimestamp",
            type: "uint72",
            internalType: "uint72",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPublicationData",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct MultirecipientFeeCollectProfilePublicationData",
        components: [
          {
            name: "amount",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "collectLimit",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "currentCollects",
            type: "uint96",
            internalType: "uint96",
          },
          {
            name: "referralFee",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "followerOnly",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "endTimestamp",
            type: "uint72",
            internalType: "uint72",
          },
          {
            name: "recipients",
            type: "tuple[]",
            internalType: "struct RecipientData[]",
            components: [
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "split",
                type: "uint16",
                internalType: "uint16",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializePublicationCollectModule",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processCollect",
    inputs: [
      {
        name: "processCollectParams",
        type: "tuple",
        internalType: "struct ModuleTypes.ProcessCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileOwner",
            type: "address",
            internalType: "address",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CollectExpired",
    inputs: [],
  },
  {
    type: "error",
    name: "InitParamsInvalid",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRecipientSplits",
    inputs: [],
  },
  {
    type: "error",
    name: "MintLimitExceeded",
    inputs: [],
  },
  {
    type: "error",
    name: "ModuleDataMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "NotActionModule",
    inputs: [],
  },
  {
    type: "error",
    name: "NotFollowing",
    inputs: [],
  },
  {
    type: "error",
    name: "RecipientSplitCannotBeZero",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61010034620000f857601f62001d8f38819003918201601f19168301916001600160401b03831184841017620000fd57808492608094604052833981010312620000f8578062000053620000a89262000113565b620000616020830162000113565b6200007d6060620000756040860162000113565b940162000113565b6001600160a01b0383811660805290931660a05260c05260e052620000a23362000128565b62000128565b604051611c1d90816200017282396080518161170a015260a051818181610274015261081a015260c05181818161030601528181610a0b01526111e1015260e051818181610ccd0152610e130152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000f857565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146112105750806303ee438c1461022a578063397a2a88146111cb5780633f50389214610f8c578063681591c114610e3c5780636fb71661146109f2578063715018a6146109a75780638da5cb5b1461097e57806391027b53146102a3578063b95ddb521461025e578063ce90d52e1461022a578063f2fde38b14610177578063f8d7758c1461014d5763fcdd2347146100b957600080fd5b34610148576101006100d36100cd3661141f565b9061155b565b6040519060018060a01b03808251168352602082015160018060601b0380911660208501528160408401511660408501526060830151166060840152608082015116608083015261ffff60a08201511660a083015260c0810151151560c083015260e060018060481b039101511660e0820152f35b600080fd5b3461014857602061016561016036611487565b611616565b6040516001600160a01b039091168152f35b34610148576020366003190112610148576004356001600160a01b0381811691829003610148576101a661198b565b81156101d657600180546001600160a01b03198116841790915516600080516020611bc8833981519152600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101485760003660031901126101485761025a61024661133d565b6040519182916020835260208301906113df565b0390f35b34610148576000366003190112610148576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610148576080366003190112610148576044356001600160a01b03811603610148576064356001600160401b0381116101485736602382011215610148576001600160401b0360048201351161014857366024826004013583010111610148577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361096c576020818060040135810103126101485760248101356001600160401b0381116101485760e08183018360040135840103126101485760405190610376826112ff565b828101602401356001600160a01b0381168103610148578252828101604401356001600160601b038116900361014857828101604481013560208401526103bf906064016114b9565b60408301526103d26084828501016114cd565b606083015260a48184010135801515810361014857608083015282810160c401356001600160481b03811681036101485760a083015282810160e40135906001600160401b03821161014857602484600401358501016043838387010101121561014857602482828601010135610448816114dc565b92610456604051948561131a565b81845260208401926024876004013588010160448460061b84848b010101011161014857868101820160440193915b60448460061b82848b0101010185106109205760c08701869052865160208801516040808a015160608b015160808c015160a08d015193518e9690958e956001600160a01b03928316956001600160481b03909116949315159361ffff169216906001600160601b03166104f8886112ff565b858852602088015260408701526060860152608085015260a0840152600060c084015215801561090b575b6107e95781516001600160a01b03161580806108f4575b81156108d0575b5080156108bd575b8015610894575b6107e95760408201516001600160a01b031690816107fb575b60c0015180519150600282106107e9576000906000925b8084106106d95750506127109150036106c75780516004356000908152602081815260408083206024358452825290912080546001600160a01b039093166001600160a01b03199384161781559083015161025a9461024694909360a093919290916105f5916001600160601b031690611656565b60408281015160043560009081526020818152838220602435835290529190912060018082018054851660001992881b9290920193841691909117905560c0840151600290910180549093169116178155606082015161065b9161ffff90911690611507565b6080810151600480356000908152602081815260408083206024803585529252909120600201805495909401516001600160b01b0390951692151560b01b60ff60b01b169290921760b89490941b6001600160b81b031916939093179091553692918201359101611450565b60405163195f90f160e21b8152600490fd5b909161ffff60206106ea86866114f3565b51015116156107d75761ffff602061070286866114f3565b5101511681018091116107c157926004356000526003602052604060002060243560005260205260406000209061073981856114f3565b5182549290600160401b8410156107ab57600184018083558410156107955761ffff602060019561078c94600052816000200192868060a01b03815116878060a01b031985541617845501511690611507565b01929190610580565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60405163409bab8160e01b8152600490fd5b6040516348be0eb360e01b8152600490fd5b604051633f8ecfd360e21b8152600481019290925260208260248160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19182156108885760c092610859575b50610569565b61087a9060203d602011610881575b610872818361131a565b81019061163e565b5084610853565b503d610868565b6040513d6000823e3d90fd5b5060a08201516001600160481b031680151590816108b3575b50610550565b90504211846108ad565b5061271061ffff60608401511611610549565b905015806108df575b84610541565b5060408201516001600160a01b0316156108d9565b60408401516001600160a01b03161515915061053a565b5060408101516001600160a01b031615610523565b60406024868a600401358b0103011261014857604060206044948251610945816112e4565b61094e896114b9565b815261095b838a016114cd565b838201528152019501949250610485565b604051632fc56e1160e21b8152600490fd5b34610148576000366003190112610148576001546040516001600160a01b039091168152602090f35b34610148576000366003190112610148576109c061198b565b600180546001600160a01b031981169091556000906001600160a01b0316600080516020611bc88339815191528280a3005b3461014857610a0036611487565b6001600160a01b03907f00000000000000000000000000000000000000000000000000000000000000008216330361096c5780359081600052602091600083526040600020838301359081600052845260019081604060002001805460a01c9060018060601b03918281146107c15784610a7c91018092611656565b8460005260008752604060002083600052875260ff60026040600020015460b01c16610e08575b8460005260008752604060002083600052875260026040600020015460b81c918560005260008852604060002084600052885260406000205460a01c908115159283610dfc575b505050610dea578015159081610de0575b50610dce5760a08401610b0e8186611526565b15159050610be2575085610b8b9261ffff92610b919798610b2e88611616565b1695600052600089526040600020906000528852604060002001541692610b648185610b5e610100890189611679565b906117a6565b612710610b7b610b726116f3565b909416836116ab565b04918280610bc5575b50506116d2565b91611804565b604051908082016001600160401b038111838210176107ab576040526000825261025a6040519282849384528301906113df565b610bdb91610bd5608089016116be565b876119e3565b8782610b84565b90929186610bef86611616565b169683600052600087526040600020856000528752610c558183604060002001541695610c258a88610b5e6101008c018c611679565b610c2d6116f3565b92906127109b8a8d610c4461ffff809816846116ab565b04809381610db7575b5050506116d2565b9560005260008952604060002090600052885260026040600020015460a01c169760009880610c97575b5050505050610c929394610b8b916116d2565b610b91565b610ca6919293949950856116ab565b0496610cb28187611526565b8092915015610da157818904908115610c7f576000939293927f0000000000000000000000000000000000000000000000000000000000000000169060808901935b858110610d02575050610c7f565b610d0c828b611526565b829192101561079557604051916331a9108f60e11b83528160051b013560048301528b82602481875afa9182156108885788928691600091610d64575b5090610d5e91610d58896116be565b8d6119e3565b01610cf4565b935050508b82813d8311610d9a575b610d7d818361131a565b8101031261014857610d5e85610d938a946116df565b9091610d49565b503d610d73565b634e487b7160e01b600052601260045260246000fd5b610d586080610dc694016116be565b8a828f610c4d565b6040516304cd703960e51b8152600490fd5b9050421187610afb565b604051635b21dfd360e11b8152600490fd5b16119050888080610aea565b610e378560408801357f0000000000000000000000000000000000000000000000000000000000000000611907565b610aa3565b3461014857602080600319360112610148576001600160401b03600435818111610148573660238201121561014857610e7f903690602481600401359101611450565b91610e8861198b565b82519182116107ab57610e9c60025461128e565b601f8111610f45575b5080601f8311600114610ee157508192600092610ed6575b5050600019600383901b1c191660019190911b17600255005b015190508280610ebd565b90601f19831693600260005282600020926000905b868210610f2d5750508360019510610f14575b505050811b01600255005b015160001960f88460031b161c19169055828080610f09565b80600185968294968601518155019501930190610ef6565b600260005281600020601f840160051c810191838510610f82575b601f0160051c01905b818110610f765750610ea5565b60008155600101610f69565b9091508190610f60565b3461014857610f9a3661141f565b606060e0604051610faa816112c8565b60008152600060208201526000604082015260008382015260006080820152600060a0820152600060c08201520152610fe3818361155b565b91600052600360205260406000209060005260205260406000208054611008816114dc565b91611016604051938461131a565b818352602083019060005260206000206000915b838310611194578551602087015160408089015160608a015160a08b015160c08c015160e0808e01519551909790968d966001600160481b0316959215159461ffff909416936001600160601b03908116936001600160a01b0390811693919092169116611097896112c8565b8852602088015260408701526060860152608085015260a084015260c0830152828201526040519182916020835260018060a01b03815116602084015260018060601b03602082015116604084015260018060a01b03604082015116606084015260018060601b03606082015116608084015261ffff60808201511660a084015260a0810151151560c084015260018060481b0360c082015116828401520151610100808301528051806101208401526020610140840192019060005b818110611162575050500390f35b825180516001600160a01b0316855260209081015161ffff168186015286955060409094019390920191600101611154565b6001602081926040516111a6816112e4565b61ffff8654858060a01b038116835260a01c168382015281520192019201919061102a565b34610148576000366003190112610148576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610148576020366003190112610148576001600160e01b0319906004358281169081900361014857602092637f5ab69960e11b821492831561125b575b5050506040519015158152f35b90919250838101906a444947495f4d4f44554c4560a81b8252600b8152611281816112e4565b519020161482808061124e565b90600182811c921680156112be575b60208310146112a857565b634e487b7160e01b600052602260045260246000fd5b91607f169161129d565b61010081019081106001600160401b038211176107ab57604052565b604081019081106001600160401b038211176107ab57604052565b60e081019081106001600160401b038211176107ab57604052565b601f909101601f19168101906001600160401b038211908210176107ab57604052565b60405190600082600254916113518361128e565b8083526020936001908181169081156113bf575060011461137d575b505061137b9250038361131a565b565b90939150600260005281600020936000915b8183106113a757505061137b9350820101388061136d565b8554888401850152948501948794509183019161138f565b91505061137b94925060ff191682840152151560051b820101388061136d565b919082519283825260005b84811061140b575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016113ea565b6040906003190112610148576004359060243590565b6001600160401b0381116107ab57601f01601f191660200190565b92919261145c82611435565b9161146a604051938461131a565b829481845281830111610148578281602093846000960137010152565b6003199060208183011261014857600435916001600160401b0383116101485782610120920301126101485760040190565b35906001600160a01b038216820361014857565b359061ffff8216820361014857565b6001600160401b0381116107ab5760051b60200190565b80518210156107955760209160051b010190565b805461ffff60a01b191660a09290921b61ffff60a01b16919091179055565b903590601e198136030182121561014857018035906001600160401b03821161014857602001918160051b3603831361014857565b60e06040928392835161156d816112c8565b600093818580935282602082015282878201528260608201528260808201528260a08201528260c08201520152825281602052828220908252602052209060028151926115b9846112c8565b80549260018060a01b0393848116865260a01c60208601526001820154908482169086015260a01c60608501520154908116608083015261ffff8160a01c1660a083015260ff8160b01c16151560c083015260b81c60e082015290565b803560009081526020818152604080832093820135835292905220546001600160a01b031690565b90816020910312610148575180151581036101485790565b80546001600160a01b031660a09290921b6001600160a01b031916919091179055565b903590601e198136030182121561014857018035906001600160401b0382116101485760200191813603831361014857565b818102929181159184041417156107c157565b356001600160a01b03811681036101485790565b919082039182116107c157565b51906001600160a01b038216820361014857565b604080516398f965d160e01b8152919080836004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa92831561179b57600091829461174b575b50509190565b9080929450813d8311611794575b611763818361131a565b81010312611790576020611776826116df565b9101519261ffff8416840361178d57503880611745565b80fd5b8280fd5b503d611759565b50513d6000823e3d90fd5b908160409194939481010312610148576001600160a01b03813581811693919290849003610148576020013514928315936117f7575b5050506117e557565b6040516346308bd560e01b8152600490fd5b16141590503880806117dc565b909160009282358452602091600383526040928386208186013587528152838620805490611831826114dc565b9561183e8151978861131a565b8287529088528288208891848089015b8585106118d0575050505050508351955b86811061186f5750505050505050565b8061271061189061ffff856118866001968b6114f3565b51015116866116ab565b048061189e575b500161185f565b6118ca90838060a01b036118b460808b016116be565b816118bf868c6114f3565b5151169189166119e3565b38611897565b600191829184516118e0816112e4565b61ffff8754858060a01b038116835260a01c1683820152815201930193019291859061184e565b91808214611986576040516347720ebb60e01b81526004810192909252602482015290602090829060449082906001600160a01b03165afa90811561088857600091611968575b501561195657565b6040516322d9eef360e21b8152600490fd5b611980915060203d811161088157610872818361131a565b3861194e565b505050565b6001546001600160a01b0316330361199f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6040516323b872dd60e01b60208083019182526001600160a01b039485166024840152948416604483015260648083019690965294815292939260a081019290916001600160401b038411838510176107ab57611aaa946000928392866040521693611a4e866112e4565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af13d15611b26573d91611a8e83611435565b92611a9c604051948561131a565b83523d60008785013e611b2a565b80519081611ab757505050565b8280611ac793830101910161163e565b15611acf5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b6060915b91929015611b8c5750815115611b3e575090565b3b15611b475790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611b9f5750805190602001fd5b60405162461bcd60e51b815260206004820152908190611bc39060248301906113df565b0390fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212206525875c9e805caeb14c0af3fcf3e55026d16b0372825e23b2ceaa0406f33ce364736f6c63430008150033";

type MultirecipientFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultirecipientFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultirecipientFeeCollectModule__factory extends ContractFactory {
  constructor(...args: MultirecipientFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    hub: string,
    actionModule: string,
    moduleRegistry: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MultirecipientFeeCollectModule> {
    return super.deploy(
      hub,
      actionModule,
      moduleRegistry,
      moduleOwner,
      overrides || {}
    ) as Promise<MultirecipientFeeCollectModule>;
  }
  override getDeployTransaction(
    hub: string,
    actionModule: string,
    moduleRegistry: string,
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      hub,
      actionModule,
      moduleRegistry,
      moduleOwner,
      overrides || {}
    );
  }
  override attach(address: string): MultirecipientFeeCollectModule {
    return super.attach(address) as MultirecipientFeeCollectModule;
  }
  override connect(signer: Signer): MultirecipientFeeCollectModule__factory {
    return super.connect(signer) as MultirecipientFeeCollectModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultirecipientFeeCollectModuleInterface {
    return new utils.Interface(_abi) as MultirecipientFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultirecipientFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultirecipientFeeCollectModule;
  }
}
