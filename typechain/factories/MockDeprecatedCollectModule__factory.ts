/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockDeprecatedCollectModule,
  MockDeprecatedCollectModuleInterface,
} from "../MockDeprecatedCollectModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializePublicationCollectModule",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processCollect",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testMockDeprecatedCollectModule",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testMockModule",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "MockModuleReverted",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60803461007057601f61085538819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b60405161078290816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a71461043f5750806303ee438c146101b55780634e413e92146101ea578063681591c1146102dd578063715018a6146102925780638da5cb5b1461026a578063c233f951146101ef578063c55685c4146101ea578063ce90d52e146101b5578063e49c3dda146101575763f2fde38b1461009d57600080fd5b34610153576020366003190112610153576001600160a01b0382358181169391929084900361014f576100ce61069f565b83156100fd57505082546001600160a01b03198116831784551660008051602061072d8339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b5050346101b15760a03660031901126101b1576024356001600160a01b038116036101b157608435906001600160401b038211610153576101a16101a8916101ad93369101610672565b369161062c565b6106f7565b5080f35b5080fd5b8382346101b157816003193601126101b1576101e6906101d3610534565b90519182916020835260208301906105d4565b0390f35b610614565b508290346101b15760603660031901126101b1576001600160401b03916044358381116101b1576101a86101a16102299236908801610672565b508151926020840190811184821017610257576101e6945082528252519182916020835260208301906105d4565b634e487b7160e01b825260418552602482fd5b8382346101b157816003193601126101b157905490516001600160a01b039091168152602090f35b83346102da57806003193601126102da576102ab61069f565b80546001600160a01b03198116825581906001600160a01b031660008051602061072d8339815191528280a380f35b80fd5b8284346102da576020806003193601126101b1576001600160401b03833581811161043b573660238201121561043b57610320903690602481880135910161062c565b9361032961069f565b8451918211610428575060019161034083546104c1565b601f81116103e2575b5080601f83116001146103835750839482939492610378575b5050600019600383901b1c191690821b17905580f35b015190508480610362565b90601f198316958486528286209286905b8882106103cb57505083859697106103b2575b505050811b01905580f35b015160001960f88460031b161c191690558480806103a7565b808785968294968601518155019501930190610394565b838552818520601f840160051c81019183851061041e575b601f0160051c019084905b828110610413575050610349565b868155018490610405565b90915081906103fa565b634e487b7160e01b845260419052602483fd5b8380fd5b84929150346101535760203660031901126101535783359163ffffffff60e01b9182841680940361014f576a444947495f4d4f44554c4560a81b60208201908152600b8252828201959092906001600160401b038711838810176104ae57506020965085905251902016148152f35b634e487b7160e01b815260418852602490fd5b90600182811c921680156104f1575b60208310146104db57565b634e487b7160e01b600052602260045260246000fd5b91607f16916104d0565b601f909101601f19168101906001600160401b0382119082101761051e57604052565b634e487b7160e01b600052604160045260246000fd5b6040519060008260019182549261054a846104c1565b9081845260209481811690816000146105b45750600114610576575b5050610574925003836104fb565b565b600081815285812095935091905b81831061059c57505061057493508201013880610566565b85548884018501529485019487945091830191610584565b91505061057494925060ff191682840152151560051b8201013880610566565b919082519283825260005b848110610600575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016105df565b3461062757600036600319011261062757005b600080fd5b9192916001600160401b03821161051e5760405191610655601f8201601f1916602001846104fb565b829481845281830111610627578281602093846000960137010152565b9181601f84011215610627578235916001600160401b038311610627576020838186019501011161062757565b6000546001600160a01b031633036106b357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6020818051810103126106275760208101518015908115036106275761071a5790565b60405163070dc3b560e31b8152600490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220daab4969d42f5f634452f7922add70d1ad95fe6496bed1bd290f67db8d78dbb764736f6c63430008150033";

type MockDeprecatedCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDeprecatedCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDeprecatedCollectModule__factory extends ContractFactory {
  constructor(...args: MockDeprecatedCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MockDeprecatedCollectModule> {
    return super.deploy(
      moduleOwner,
      overrides || {}
    ) as Promise<MockDeprecatedCollectModule>;
  }
  override getDeployTransaction(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(moduleOwner, overrides || {});
  }
  override attach(address: string): MockDeprecatedCollectModule {
    return super.attach(address) as MockDeprecatedCollectModule;
  }
  override connect(signer: Signer): MockDeprecatedCollectModule__factory {
    return super.connect(signer) as MockDeprecatedCollectModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDeprecatedCollectModuleInterface {
    return new utils.Interface(_abi) as MockDeprecatedCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockDeprecatedCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockDeprecatedCollectModule;
  }
}
