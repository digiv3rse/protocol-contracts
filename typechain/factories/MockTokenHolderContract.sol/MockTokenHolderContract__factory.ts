/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockTokenHolderContract,
  MockTokenHolderContractInterface,
} from "../../MockTokenHolderContract.sol/MockTokenHolderContract";

const _abi = [
  {
    type: "function",
    name: "depositNft",
    inputs: [
      {
        name: "collection",
        type: "address",
        internalType: "address",
      },
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeApprove",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeBurn",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeDisableTokenGuardian",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeEnableTokenGuardian",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeSafeTransferFrom",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeSetApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeTransferFrom",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getTokenId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setCollection",
    inputs: [
      {
        name: "collection",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testMockTokenHolderContract",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610584908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163010a38f5146104b657508063150b7a021461042f5780631814ac001461041b5780631eec9035146103b8578381632ceffa781461036057508063768b5fd51461032a5783816382a5b1aa146102b65781639e0b4b2414610241578163aa060c00146101d2578163d783b21214610186578163dc45c7781461011b575063fbb74bdf146100ab57600080fd5b82913461011757826003193601126101175782546001600160a01b031691823b15610112578151632248f76d60e01b81529284918491829084905af190811561010957506100f65750f35b6100ff90610503565b6101065780f35b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b92905034610117576020366003190112610117576101376104d2565b8354600154916001600160a01b0391821690813b15610182578660449281958751988996879563095ea7b360e01b8752169085015260248401525af190811561010957506100f65750f35b8680fd5b9290503461011757826003193601126101175782546001600160a01b031691823b15610112578151631e9df67360e01b81529284918491829084905af190811561010957506100f65750f35b92905034610117576020366003190112610117576101ee6104d2565b8354600154919391906001600160a01b0316803b1561023d5761022a948680948651978895869485936323b872dd60e01b85523090850161052c565b03925af190811561010957506100f65750f35b8580fd5b9290503461011757806003193601126101175761025c6104d2565b602435908115158092036102b25784546001600160a01b039190821690813b15610182578660449281958751988996879563a22cb46560e01b8752169085015260248401525af190811561010957506100f65750f35b8480fd5b92905034610117576060366003190112610117576102d26104d2565b6102da6104ed565b84546001600160a01b0319166001600160a01b03909216918217855560443560018190559091803b1561023d5761022a948680948651978895869485936323b872dd60e01b85523091850161052c565b8334610106576020366003190112610106576001600160a01b0361034c6104d2565b1660018060a01b0319600054161760005580f35b929050346101175760203660031901126101175761037c6104d2565b8354600154919391906001600160a01b0316803b1561023d5761022a94868094865197889586948593632142170760e11b85523090850161052c565b5090346104175782600319360112610417578260018060a01b038154169260015490843b15610417576024908385519687948593630852cd8d60e31b85528401525af1908115610109575061040b575080f35b61041490610503565b80f35b8280fd5b833461010657806003193601126101065780f35b5034610417576080366003190112610417576104496104d2565b506104526104ed565b50606435906001600160401b03908183116102b257366023840112156102b2578201359081116104b257369101602401116104ae5781546001600160a01b031916331790915560443560015551630a85bd0160e11b8152602090f35b5080fd5b8380fd5b8490346104ae57816003193601126104ae576020906001548152f35b600435906001600160a01b03821682036104e857565b600080fd5b602435906001600160a01b03821682036104e857565b6001600160401b03811161051657604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fea2646970667358221220867b1d38417b3565d3031e56ef5dd6d8531b1079d2344f8da53f53362d1f633f64736f6c63430008150033";

type MockTokenHolderContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenHolderContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenHolderContract__factory extends ContractFactory {
  constructor(...args: MockTokenHolderContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockTokenHolderContract> {
    return super.deploy(overrides || {}) as Promise<MockTokenHolderContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockTokenHolderContract {
    return super.attach(address) as MockTokenHolderContract;
  }
  override connect(signer: Signer): MockTokenHolderContract__factory {
    return super.connect(signer) as MockTokenHolderContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenHolderContractInterface {
    return new utils.Interface(_abi) as MockTokenHolderContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTokenHolderContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockTokenHolderContract;
  }
}
