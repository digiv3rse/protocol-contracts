/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockERC721RecipientWithRevertFlag,
  MockERC721RecipientWithRevertFlagInterface,
} from "../MockERC721RecipientWithRevertFlag";

const _abi = [
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revertOnNextCall",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testMockERC721RecipientWithRevertFlag",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "error",
    name: "MockERC721RecipientReverted",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608080604052346100165761018d908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c908163150b7a0214610077575080633e683d99146100585763720782881461004257600080fd5b3461005557806003193601126100555780f35b80fd5b5034610055578060031936011261005557805460ff1916600117815580f35b8234610055576080366003190112610055576001600160a01b03600435818116036101535760243590811603610055576001600160401b039060643590828211610055573660238301121561005557816004013592831161005557828201913660248401116101535760ff825416938415610116575b5050505061010757604051630a85bd0160e11b8152602090f35b63f9ca6df560e01b8152600490fd5b1515935090918361012e575b505050828080806100ed565b8192935090602091031261015357602401359081151582036100555750828080610122565b5080fdfea2646970667358221220960dc26541d2831ebae894ad753e70f8610ff28c332d894c6641c5cbbcbddd3264736f6c63430008150033";

type MockERC721RecipientWithRevertFlagConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721RecipientWithRevertFlagConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721RecipientWithRevertFlag__factory extends ContractFactory {
  constructor(...args: MockERC721RecipientWithRevertFlagConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockERC721RecipientWithRevertFlag> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockERC721RecipientWithRevertFlag>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC721RecipientWithRevertFlag {
    return super.attach(address) as MockERC721RecipientWithRevertFlag;
  }
  override connect(signer: Signer): MockERC721RecipientWithRevertFlag__factory {
    return super.connect(signer) as MockERC721RecipientWithRevertFlag__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721RecipientWithRevertFlagInterface {
    return new utils.Interface(
      _abi
    ) as MockERC721RecipientWithRevertFlagInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721RecipientWithRevertFlag {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockERC721RecipientWithRevertFlag;
  }
}
