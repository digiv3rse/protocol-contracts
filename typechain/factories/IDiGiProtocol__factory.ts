/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IDiGiProtocol, IDiGiProtocolInterface } from "../IDiGiProtocol";

const _abi = [
  {
    type: "function",
    name: "act",
    inputs: [
      {
        name: "publicationActionParams",
        type: "tuple",
        internalType: "struct Types.PublicationActionParams",
        components: [
          {
            name: "publicationActedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationActedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "actorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "actionModuleAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "actionModuleData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "actWithSig",
    inputs: [
      {
        name: "publicationActionParams",
        type: "tuple",
        internalType: "struct Types.PublicationActionParams",
        components: [
          {
            name: "publicationActedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationActedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "actorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "actionModuleAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "actionModuleData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeDelegatedExecutorsConfig",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "delegatedExecutors",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "approvals",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "configNumber",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "switchToGivenConfig",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeDelegatedExecutorsConfig",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "delegatedExecutors",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "approvals",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeDelegatedExecutorsConfigWithSig",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "delegatedExecutors",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "approvals",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "configNumber",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "switchToGivenConfig",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectLegacy",
    inputs: [
      {
        name: "collectParams",
        type: "tuple",
        internalType: "struct Types.LegacyCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectModuleData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectLegacyWithSig",
    inputs: [
      {
        name: "collectParams",
        type: "tuple",
        internalType: "struct Types.LegacyCollectParams",
        components: [
          {
            name: "publicationCollectedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "publicationCollectedId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectorProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collectModuleData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "comment",
    inputs: [
      {
        name: "commentParams",
        type: "tuple",
        internalType: "struct Types.CommentParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contentURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referenceModuleData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "actionModules",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "actionModulesInitDatas",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "referenceModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "referenceModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "commentWithSig",
    inputs: [
      {
        name: "commentParams",
        type: "tuple",
        internalType: "struct Types.CommentParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contentURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referenceModuleData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "actionModules",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "actionModulesInitDatas",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "referenceModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "referenceModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createProfile",
    inputs: [
      {
        name: "createProfileParams",
        type: "tuple",
        internalType: "struct Types.CreateProfileParams",
        components: [
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "followModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "followModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "follow",
    inputs: [
      {
        name: "followerProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "idsOfProfilesToFollow",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "followTokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "datas",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "followWithSig",
    inputs: [
      {
        name: "followerProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "idsOfProfilesToFollow",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "followTokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "datas",
        type: "bytes[]",
        internalType: "bytes[]",
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getContentURI",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDelegatedExecutorsConfigNumber",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDelegatedExecutorsMaxConfigNumberSet",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDelegatedExecutorsPrevConfigNumber",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getProfile",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Types.Profile",
        components: [
          {
            name: "pubCount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "followModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "followNFT",
            type: "address",
            internalType: "address",
          },
          {
            name: "__DEPRECATED__handle",
            type: "string",
            internalType: "string",
          },
          {
            name: "__DEPRECATED__imageURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "__DEPRECATED__followNFTURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPublication",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Types.PublicationMemory",
        components: [
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contentURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "referenceModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "__DEPRECATED__collectModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "__DEPRECATED__collectNFT",
            type: "address",
            internalType: "address",
          },
          {
            name: "pubType",
            type: "uint8",
            internalType: "enum Types.PublicationType",
          },
          {
            name: "rootProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "rootPubId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPublicationType",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum Types.PublicationType",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "incrementNonce",
    inputs: [
      {
        name: "increment",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isActionModuleEnabledInPublication",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pubId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "module",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBlocked",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "byProfileId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isDelegatedExecutorApproved",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "delegatedExecutor",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isDelegatedExecutorApproved",
    inputs: [
      {
        name: "delegatorProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "delegatedExecutor",
        type: "address",
        internalType: "address",
      },
      {
        name: "configNumber",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isFollowing",
    inputs: [
      {
        name: "followerProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "followedProfileId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mirror",
    inputs: [
      {
        name: "mirrorParams",
        type: "tuple",
        internalType: "struct Types.MirrorParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referenceModuleData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mirrorWithSig",
    inputs: [
      {
        name: "mirrorParams",
        type: "tuple",
        internalType: "struct Types.MirrorParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referenceModuleData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "post",
    inputs: [
      {
        name: "postParams",
        type: "tuple",
        internalType: "struct Types.PostParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contentURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "actionModules",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "actionModulesInitDatas",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "referenceModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "referenceModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "postWithSig",
    inputs: [
      {
        name: "postParams",
        type: "tuple",
        internalType: "struct Types.PostParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contentURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "actionModules",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "actionModulesInitDatas",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "referenceModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "referenceModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "quote",
    inputs: [
      {
        name: "quoteParams",
        type: "tuple",
        internalType: "struct Types.QuoteParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contentURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referenceModuleData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "actionModules",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "actionModulesInitDatas",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "referenceModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "referenceModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "quoteWithSig",
    inputs: [
      {
        name: "quoteParams",
        type: "tuple",
        internalType: "struct Types.QuoteParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "contentURI",
            type: "string",
            internalType: "string",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referenceModuleData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "actionModules",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "actionModulesInitDatas",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "referenceModule",
            type: "address",
            internalType: "address",
          },
          {
            name: "referenceModuleInitData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBlockStatus",
    inputs: [
      {
        name: "byProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "idsOfProfilesToSetBlockStatus",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "blockStatus",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBlockStatusWithSig",
    inputs: [
      {
        name: "byProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "idsOfProfilesToSetBlockStatus",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "blockStatus",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFollowModule",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "followModule",
        type: "address",
        internalType: "address",
      },
      {
        name: "followModuleInitData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFollowModuleWithSig",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "followModule",
        type: "address",
        internalType: "address",
      },
      {
        name: "followModuleInitData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setProfileMetadataURI",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setProfileMetadataURIWithSig",
    inputs: [
      {
        name: "profileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "metadataURI",
        type: "string",
        internalType: "string",
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unfollow",
    inputs: [
      {
        name: "unfollowerProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "idsOfProfilesToUnfollow",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unfollowWithSig",
    inputs: [
      {
        name: "unfollowerProfileId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "idsOfProfilesToUnfollow",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "signature",
        type: "tuple",
        internalType: "struct Types.EIP712Signature",
        components: [
          {
            name: "signer",
            type: "address",
            internalType: "address",
          },
          {
            name: "v",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "r",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "s",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class IDiGiProtocol__factory {
  static readonly abi = _abi;
  static createInterface(): IDiGiProtocolInterface {
    return new utils.Interface(_abi) as IDiGiProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDiGiProtocol {
    return new Contract(address, _abi, signerOrProvider) as IDiGiProtocol;
  }
}
