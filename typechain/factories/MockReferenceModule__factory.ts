/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockReferenceModule,
  MockReferenceModuleInterface,
} from "../MockReferenceModule";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "moduleOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getModuleMetadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initializeReferenceModule",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "metadataURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processComment",
    inputs: [
      {
        name: "processCommentParams",
        type: "tuple",
        internalType: "struct Types.ProcessCommentParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "processMirror",
    inputs: [
      {
        name: "processMirrorParams",
        type: "tuple",
        internalType: "struct Types.ProcessMirrorParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "processQuote",
    inputs: [
      {
        name: "processQuoteParams",
        type: "tuple",
        internalType: "struct Types.ProcessQuoteParams",
        components: [
          {
            name: "profileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "transactionExecutor",
            type: "address",
            internalType: "address",
          },
          {
            name: "pointedProfileId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pointedPubId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "referrerProfileIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
          {
            name: "referrerPubTypes",
            type: "uint8[]",
            internalType: "enum Types.PublicationType[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setModuleMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceID",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "testMockModule",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testMockReferenceModule",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "MockModuleReverted",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60803461007057601f61089b38819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b6040516107c890816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301ffc9a7146104115750806303ee438c1461020057806317e91e38146102935780634985ec12146102935780634e413e921461021e578063681591c1146102af578063684816ba14610293578063715018a61461024b5780638da5cb5b14610223578063bfcbbe271461021e578063ce90d52e14610200578063ee299f5d1461016d5763f2fde38b146100b357600080fd5b34610169576020366003190112610169576001600160a01b03823581811693919290849003610165576100e461069f565b831561011357505082546001600160a01b0319811683178455166000805160206107738339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b509034610169576080366003190112610169576044356001600160a01b0381160361016957606435926001600160401b03918285116101fc57366023860112156101fc578401359182116101f95736602483860101116101f957506101dd6101f5936101e2926024369201610659565b6106f7565b90519182916020835260208301906105cf565b0390f35b80fd5b5080fd5b8382346101fc57816003193601126101fc576101f5906101e261052f565b610646565b8382346101fc57816003193601126101fc57905490516001600160a01b039091168152602090f35b83346101f957806003193601126101f95761026461069f565b80546001600160a01b03198116825581906001600160a01b03166000805160206107738339815191528280a380f35b8382346101fc576101f5906101e26102aa3661060f565b61072c565b8284346101f9576020806003193601126101fc576001600160401b03833581811161040d573660238201121561040d576102f29036906024818801359101610659565b936102fb61069f565b84519182116103fa575060019161031283546104bc565b601f81116103b4575b5080601f8311600114610355575083948293949261034a575b5050600019600383901b1c191690821b17905580f35b015190508480610334565b90601f198316958486528286209286905b88821061039d5750508385969710610384575b505050811b01905580f35b015160001960f88460031b161c19169055848080610379565b808785968294968601518155019501930190610366565b838552818520601f840160051c8101918385106103f0575b601f0160051c019084905b8281106103e557505061031b565b8681550184906103d7565b90915081906103cc565b634e487b7160e01b845260419052602483fd5b8380fd5b92939050346101f95760203660031901126101f9576001600160e01b0319843581811692908390036101f95763d80d7bcd60e01b831494851561045b575b60208686519015158152f35b6a444947495f4d4f44554c4560a81b60208201908152600b82529495509293919290858201906001600160401b038211838310176104a957506020965085525190201614903880808061044f565b634e487b7160e01b815260418852602490fd5b90600182811c921680156104ec575b60208310146104d657565b634e487b7160e01b600052602260045260246000fd5b91607f16916104cb565b601f909101601f19168101906001600160401b0382119082101761051957604052565b634e487b7160e01b600052604160045260246000fd5b60405190600082600191825492610545846104bc565b9081845260209481811690816000146105af5750600114610571575b505061056f925003836104f6565b565b600081815285812095935091905b81831061059757505061056f93508201013880610561565b8554888401850152948501948794509183019161057f565b91505061056f94925060ff191682840152151560051b8201013880610561565b919082519283825260005b8481106105fb575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016105da565b6003199060208183011261064157600435916001600160401b0383116106415782610120920301126106415760040190565b600080fd5b3461064157600036600319011261064157005b9192916001600160401b0382116105195760405191610682601f8201601f1916602001846104f6565b829481845281830111610641578281602093846000960137010152565b6000546001600160a01b031633036106b357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6020818051810103126106415760208101518015908115036106415761071a5790565b60405163070dc3b560e31b8152600490fd5b61010081013590601e198136030182121561064157018035906001600160401b038211610641576020019080360382136106415761076f916101dd913691610659565b9056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220f495e02b9a03fcc5dc7588d15e7e2520cd5956b150384ecf0bcc1bceb0274e4e64736f6c63430008150033";

type MockReferenceModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockReferenceModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockReferenceModule__factory extends ContractFactory {
  constructor(...args: MockReferenceModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MockReferenceModule> {
    return super.deploy(
      moduleOwner,
      overrides || {}
    ) as Promise<MockReferenceModule>;
  }
  override getDeployTransaction(
    moduleOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(moduleOwner, overrides || {});
  }
  override attach(address: string): MockReferenceModule {
    return super.attach(address) as MockReferenceModule;
  }
  override connect(signer: Signer): MockReferenceModule__factory {
    return super.connect(signer) as MockReferenceModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockReferenceModuleInterface {
    return new utils.Interface(_abi) as MockReferenceModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockReferenceModule {
    return new Contract(address, _abi, signerOrProvider) as MockReferenceModule;
  }
}
