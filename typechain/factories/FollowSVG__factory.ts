/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FollowSVG, FollowSVGInterface } from "../FollowSVG";

const _abi = [
  {
    type: "function",
    name: "getFollowSVG",
    inputs: [
      {
        name: "followTokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a57610f869081610020823930815050f35b600080fdfe604060808152600436101561001357600080fd5b60003560e01c630121da101461002857600080fd5b6020908160031936011261008b57610041600435610090565b918151928184928352815191828285015260005b838110610075575050600083830185015250601f01601f19168101030190f35b8181018301518782018701528694508201610055565b600080fd5b600a106108555760405161068081016001600160401b0381118282101761083f576040526106588152600080516020610ef18339815191526020820152600080516020610f318339815191526040820152600080516020610f1183398151915260608201527f2362292220643d224d302030683237357632373548307a222f3e3c706174682060808201527f66696c6c3d2275726c2823632922207374726f6b653d2223423936333236222060a08201527f7374726f6b652d6c696e656361703d2273717561726522207374726f6b652d6c60c08201527f696e656a6f696e3d22726f756e6422207374726f6b652d77696474683d22342260e08201527f20643d224d3136382e39203131362e387630613120312030203020312d312e386101008201527f2d2e3876302d322e37632d312e312d33372e372d35382e312d33372e372d35396101208201527f2e31203076322e37613120312030203020312d312e392e3876306c2d322d32436101408201527f37362e382038392033362e35203132392e332036322e35203135362e366c32206101608201527f32613131332e33203131332e332030203020302037332e312033312e337330206101808201527f30203020302034312e3820302037332e322d33312e33613831203831203020306101a08201527f203020322d326332362d32372e342d31342e342d36372e362d34312e392d34316101c08201527f2e366c2d3220312e395a222f3e3c673e3c706174682066696c6c3d22234239366101e08201527f3332362220643d224d3132372e33203135322e32613120312030203020302d316102008201527f2d312e3348313235613120312030203020312d312d31762d312e3863302d2e366102208201527f2e342d3120312d3168322e386131203120302030203020312d2e386c2e372d336102408201527f2e31613120312030203020302d312d312e32682d312e376131203120302030206102608201527f312d312d31762d3263302d2e352e342d3120312d3168332e32613120312030206102808201527f30203020312d2e376c312d342e366131203120302030203120312d2e386833616102a08201527f312031203020302031203120312e326c2d2e3920332e376131203120302030206102c08201527f30203120312e3268336131203120302030203020312d2e376c312e322d342e366102e08201527f6131203120302030203120312d2e38683361312031203020302031203120312e6103008201527f326c2d3120332e3761312031203020302030203120312e3268312e38613120316103208201527f203020302031203120312e336c2d2e3520312e38613120312030203020312d316103408201527f202e3848313436613120312030203020302d31202e376c2d2e3720332e3161316103608201527f2031203020302030203120312e3368312e3861312031203020302031203120316103808201527f2e326c2d2e3520312e39613120312030203020312d31202e37682d322e3861316103a08201527f20312030203020302d31202e386c2d312e3320352e35613120312030203020316103c08201527f2d31202e38682d33613120312030203020312d312d312e336c312e322d342e356103e08201527f613120312030203020302d312d312e33682d332e31613120312030203020302d6104008201527f31202e386c2d312e3320352e35613120312030203020312d31202e38682d33616104208201527f3120312030203020312d312d312e336c312e312d342e355a6d31302e382d35616104408201527f31203120302030203020312d2e386c2e372d332e33613120312030203020302d6104608201527f312d312e32682d332e32613120312030203020302d31202e376c2d2e3820332e6104808201527f3361312031203020302030203120312e3368332e335a222f3e3c2f673e3c2f676104a08201527f3e3c646566733e3c72616469616c4772616469656e742069643d2262222063786104c08201527f3d2230222063793d22302220723d223122206772616469656e745472616e73666104e08201527f6f726d3d226d617472697828323735202d3237352033363220333632203020326105008201527f37352922206772616469656e74556e6974733d227573657253706163654f6e556105208201527f7365223e3c73746f702073746f702d636f6c6f723d2223464645374135222f3e6105408201527f3c73746f70206f66667365743d2231222073746f702d636f6c6f723d222346466105608201527f46324345222f3e3c2f72616469616c4772616469656e743e3c72616469616c476105808201527f72616469656e742069643d2263222063783d2230222063793d22302220723d226105a08201527f3122206772616469656e745472616e73666f726d3d226d6174726978283020386105c08201527f33202d3133322030203133372e35203130372e312922206772616469656e74556105e08201527f6e6974733d227573657253706163654f6e557365223e3c73746f702073746f706106008201527f2d636f6c6f723d2223464644463835222f3e3c73746f70206f66667365743d226106208201527f2e39222073746f702d636f6c6f723d2223463843393434222f3e3c2f726164696106408201527730b623b930b234b2b73a1f1e17b232b3399f1e17b9bb339f60411b61066082015290565b634e487b7160e01b600052604160045260246000fd5b6040516105a081016001600160401b0381118282101761083f5760405261057c8152600080516020610ef18339815191526020820152600080516020610f318339815191526040820152600080516020610f1183398151915260608201527f23677265656e292220643d224d302030683237357632373548307a222f3e3c7060808201527f6174682066696c6c3d222341304431373022207374726f6b653d22233030302260a08201527f207374726f6b652d6c696e656361703d2273717561726522207374726f6b652d60c08201527f6c696e656a6f696e3d22726f756e6422207374726f6b652d77696474683d223460e08201527f2220643d224d3136382e39203131362e387630613120312030203020312d312e6101008201527f382d2e3876302d322e37632d312e312d33372e372d35382e312d33372e372d356101208201527f392e31203076322e37613120312030203020312d312e392e3876306c2d322d326101408201527f4337362e382038392033362e35203132392e332036322e35203135362e366c326101608201527f2032613131332e33203131332e332030203020302037332e312033312e3373346101808201527f312e3820302037332e322d33312e3361383120383120302030203020322d32636101a08201527f32362d32372e342d31342e342d36372e362d34312e392d34312e366c2d3220316101c08201527f2e395a222f3e3c673e3c706174682066696c6c3d22233030302220643d224d316101e08201527f32372e33203135322e32613120312030203020302d312d312e334831323561316102008201527f20312030203020312d312d31762d312e3863302d2e362e342d3120312d3168326102208201527f2e386131203120302030203020312d2e386c2e372d332e3161312031203020306102408201527f20302d312d312e32682d312e37613120312030203020312d312d31762d3263306102608201527f2d2e352e342d3120312d3168332e326131203120302030203020312d2e376c316102808201527f2d342e366131203120302030203120312d2e38683361312031203020302031206102a08201527f3120312e326c2d2e3920332e3761312031203020302030203120312e326833616102c08201527f31203120302030203020312d2e376c312e322d342e36613120312030203020316102e08201527f20312d2e38683361312031203020302031203120312e326c2d3120332e3761316103008201527f2031203020302030203120312e3268312e3861312031203020302031203120316103208201527f2e336c2d2e3520312e38613120312030203020312d31202e38483134366131206103408201527f312030203020302d31202e376c2d2e3720332e316131203120302030203020316103608201527f20312e3368312e3861312031203020302031203120312e326c2d2e3520312e396103808201527f613120312030203020312d31202e37682d322e38613120312030203020302d316103a08201527f202e386c2d312e3320352e35613120312030203020312d31202e38682d3361316103c08201527f20312030203020312d312d312e336c312e322d342e35613120312030203020306103e08201527f2d312d312e33682d332e31613120312030203020302d31202e386c2d312e33206104008201527f352e35613120312030203020312d31202e38682d33613120312030203020312d6104208201527f312d312e336c312e312d342e355a6d31302e382d3561312031203020302030206104408201527f312d2e386c2e372d332e33613120312030203020302d312d312e32682d332e326104608201527f613120312030203020302d31202e376c2d2e3820332e336131203120302030206104808201527f30203120312e3368332e335a222f3e3c2f673e3c2f673e3c646566733e3c72616104a08201527f6469616c4772616469656e742069643d22677265656e222063783d22302220636104c08201527f793d22302220723d223122206772616469656e745472616e73666f726d3d226d6104e08201527f617472697828323735202d3237352033363220333632203020323735292220676105008201527f72616469656e74556e6974733d227573657253706163654f6e557365223e3c736105208201527f746f702073746f702d636f6c6f723d2223444646464246222f3e3c73746f70206105408201527f6f66667365743d2231222073746f702d636f6c6f723d2223454644222f3e3c2f6105608201527b3930b234b0b623b930b234b2b73a1f1e17b232b3399f1e17b9bb339f60211b6105808201529056fe3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f32302066696c6c3d226e6f6e65223e3c673e3c706174682066696c6c3d2275726c2830302f737667222077696474683d2232373522206865696768743d2232373522a26469706673582212205e3f190db1ad60f40a8bb8c5fe5c243ce0c0c40b7f1b66d8f880e28e24b1491764736f6c63430008150033";

type FollowSVGConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FollowSVGConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FollowSVG__factory extends ContractFactory {
  constructor(...args: FollowSVGConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<FollowSVG> {
    return super.deploy(overrides || {}) as Promise<FollowSVG>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FollowSVG {
    return super.attach(address) as FollowSVG;
  }
  override connect(signer: Signer): FollowSVG__factory {
    return super.connect(signer) as FollowSVG__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FollowSVGInterface {
    return new utils.Interface(_abi) as FollowSVGInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FollowSVG {
    return new Contract(address, _abi, signerOrProvider) as FollowSVG;
  }
}
