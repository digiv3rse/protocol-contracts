/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockWrongReturnDataERC721Recipient,
  MockWrongReturnDataERC721RecipientInterface,
} from "../MockWrongReturnDataERC721Recipient";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "returnValue",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testMockWrongReturnDataERC721Recipient",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x6080346100e857601f61020138819003918201601f19168301916001600160401b038311848410176100ed578084926020946040528339810103126100e857516001600160e01b031981168082036100e857630a85bd0160e11b1461007d5760e01c63ffffffff19600054161760005560405160fd90816101048239f35b60405162461bcd60e51b815260206004820152603560248201527f4f6e6c792077726f6e672076616c7565732063616e206265207061737365642060448201527f746f2074686973206d6f636b20636f6e747261637400000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004361015601257600080fd5b600090813560e01c908163150b7a02146048575063f14f045e14603457600080fd5b346045578060031936011260455780f35b80fd5b90503460bb57608036600319011260bb576001600160a01b036004358181160360c3576024359081160360bb576064356001600160401b0380821160bf573660238301121560bf57816004013590811160bf573691016024011160bb57905460e01b6001600160e01b0319168152602090f35b5080fd5b8380fd5b8280fdfea26469706673582212205b2e0d946d6899cc066506d6d4edd4d4d274db55961603652e17e68e9adb8e6d64736f6c63430008150033";

type MockWrongReturnDataERC721RecipientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWrongReturnDataERC721RecipientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWrongReturnDataERC721Recipient__factory extends ContractFactory {
  constructor(...args: MockWrongReturnDataERC721RecipientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    returnValue: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<MockWrongReturnDataERC721Recipient> {
    return super.deploy(
      returnValue,
      overrides || {}
    ) as Promise<MockWrongReturnDataERC721Recipient>;
  }
  override getDeployTransaction(
    returnValue: BytesLike,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(returnValue, overrides || {});
  }
  override attach(address: string): MockWrongReturnDataERC721Recipient {
    return super.attach(address) as MockWrongReturnDataERC721Recipient;
  }
  override connect(
    signer: Signer
  ): MockWrongReturnDataERC721Recipient__factory {
    return super.connect(signer) as MockWrongReturnDataERC721Recipient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWrongReturnDataERC721RecipientInterface {
    return new utils.Interface(
      _abi
    ) as MockWrongReturnDataERC721RecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWrongReturnDataERC721Recipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockWrongReturnDataERC721Recipient;
  }
}
