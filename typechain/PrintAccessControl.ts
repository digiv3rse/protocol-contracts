/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface PrintAccessControlInterface extends utils.Interface {
  functions: {
    "addAdmin(address)": FunctionFragment;
    "addCommunitySteward(address)": FunctionFragment;
    "addDesigner(address)": FunctionFragment;
    "addFulfiller(address)": FunctionFragment;
    "addOpenAction(address)": FunctionFragment;
    "addPKP(address)": FunctionFragment;
    "addVerifiedFiat(address,uint256,uint256)": FunctionFragment;
    "fiatPKPAddress()": FunctionFragment;
    "isAdmin(address)": FunctionFragment;
    "isCommunitySteward(address)": FunctionFragment;
    "isDesigner(address)": FunctionFragment;
    "isFulfiller(address)": FunctionFragment;
    "isOpenAction(address)": FunctionFragment;
    "isPKP(address)": FunctionFragment;
    "isVerifiedFiat(address,uint256,uint256)": FunctionFragment;
    "name()": FunctionFragment;
    "removeAdmin(address)": FunctionFragment;
    "removeCommunitySteward(address)": FunctionFragment;
    "removeDesigner(address)": FunctionFragment;
    "removeFulfiller(address)": FunctionFragment;
    "removeOpenAction(address)": FunctionFragment;
    "removePKP(address)": FunctionFragment;
    "removeVerifiedFiat(address,uint256,uint256)": FunctionFragment;
    "setFiatPKPAddress(address)": FunctionFragment;
    "symbol()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addAdmin"
      | "addCommunitySteward"
      | "addDesigner"
      | "addFulfiller"
      | "addOpenAction"
      | "addPKP"
      | "addVerifiedFiat"
      | "fiatPKPAddress"
      | "isAdmin"
      | "isCommunitySteward"
      | "isDesigner"
      | "isFulfiller"
      | "isOpenAction"
      | "isPKP"
      | "isVerifiedFiat"
      | "name"
      | "removeAdmin"
      | "removeCommunitySteward"
      | "removeDesigner"
      | "removeFulfiller"
      | "removeOpenAction"
      | "removePKP"
      | "removeVerifiedFiat"
      | "setFiatPKPAddress"
      | "symbol"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "addAdmin", values: [string]): string;
  encodeFunctionData(
    functionFragment: "addCommunitySteward",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "addDesigner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "addFulfiller",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addOpenAction",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "addPKP", values: [string]): string;
  encodeFunctionData(
    functionFragment: "addVerifiedFiat",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "fiatPKPAddress",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "isAdmin", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isCommunitySteward",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "isDesigner", values: [string]): string;
  encodeFunctionData(functionFragment: "isFulfiller", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isOpenAction",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "isPKP", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isVerifiedFiat",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(functionFragment: "removeAdmin", values: [string]): string;
  encodeFunctionData(
    functionFragment: "removeCommunitySteward",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeDesigner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeFulfiller",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeOpenAction",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "removePKP", values: [string]): string;
  encodeFunctionData(
    functionFragment: "removeVerifiedFiat",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFiatPKPAddress",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;

  decodeFunctionResult(functionFragment: "addAdmin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addCommunitySteward",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addDesigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addFulfiller",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addOpenAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addPKP", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addVerifiedFiat",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fiatPKPAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isAdmin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isCommunitySteward",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isDesigner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isFulfiller",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isOpenAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isPKP", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isVerifiedFiat",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeCommunitySteward",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeDesigner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeFulfiller",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeOpenAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "removePKP", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeVerifiedFiat",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFiatPKPAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;

  events: {
    "AdminAdded(address)": EventFragment;
    "AdminRemoved(address)": EventFragment;
    "CommunityStewardAdded(address)": EventFragment;
    "CommunityStewardRemoved(address)": EventFragment;
    "DesignerAdded(address)": EventFragment;
    "DesignerRemoved(address)": EventFragment;
    "FulfillerAdded(address)": EventFragment;
    "FulfillerRemoved(address)": EventFragment;
    "OpenActionAdded(address)": EventFragment;
    "OpenActionRemoved(address)": EventFragment;
    "PKPAdded(address)": EventFragment;
    "PKPRemoved(address)": EventFragment;
    "VerifiedFiatAdded(address)": EventFragment;
    "VerifiedFiatRemoved(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AdminAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AdminRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CommunityStewardAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CommunityStewardRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DesignerAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DesignerRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FulfillerAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FulfillerRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OpenActionAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OpenActionRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PKPAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PKPRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VerifiedFiatAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VerifiedFiatRemoved"): EventFragment;
}

export interface AdminAddedEventObject {
  admin: string;
}
export type AdminAddedEvent = TypedEvent<[string], AdminAddedEventObject>;

export type AdminAddedEventFilter = TypedEventFilter<AdminAddedEvent>;

export interface AdminRemovedEventObject {
  admin: string;
}
export type AdminRemovedEvent = TypedEvent<[string], AdminRemovedEventObject>;

export type AdminRemovedEventFilter = TypedEventFilter<AdminRemovedEvent>;

export interface CommunityStewardAddedEventObject {
  pkp: string;
}
export type CommunityStewardAddedEvent = TypedEvent<
  [string],
  CommunityStewardAddedEventObject
>;

export type CommunityStewardAddedEventFilter =
  TypedEventFilter<CommunityStewardAddedEvent>;

export interface CommunityStewardRemovedEventObject {
  pkp: string;
}
export type CommunityStewardRemovedEvent = TypedEvent<
  [string],
  CommunityStewardRemovedEventObject
>;

export type CommunityStewardRemovedEventFilter =
  TypedEventFilter<CommunityStewardRemovedEvent>;

export interface DesignerAddedEventObject {
  designer: string;
}
export type DesignerAddedEvent = TypedEvent<[string], DesignerAddedEventObject>;

export type DesignerAddedEventFilter = TypedEventFilter<DesignerAddedEvent>;

export interface DesignerRemovedEventObject {
  designer: string;
}
export type DesignerRemovedEvent = TypedEvent<
  [string],
  DesignerRemovedEventObject
>;

export type DesignerRemovedEventFilter = TypedEventFilter<DesignerRemovedEvent>;

export interface FulfillerAddedEventObject {
  fulfiller: string;
}
export type FulfillerAddedEvent = TypedEvent<
  [string],
  FulfillerAddedEventObject
>;

export type FulfillerAddedEventFilter = TypedEventFilter<FulfillerAddedEvent>;

export interface FulfillerRemovedEventObject {
  fulfiller: string;
}
export type FulfillerRemovedEvent = TypedEvent<
  [string],
  FulfillerRemovedEventObject
>;

export type FulfillerRemovedEventFilter =
  TypedEventFilter<FulfillerRemovedEvent>;

export interface OpenActionAddedEventObject {
  openAction: string;
}
export type OpenActionAddedEvent = TypedEvent<
  [string],
  OpenActionAddedEventObject
>;

export type OpenActionAddedEventFilter = TypedEventFilter<OpenActionAddedEvent>;

export interface OpenActionRemovedEventObject {
  openAction: string;
}
export type OpenActionRemovedEvent = TypedEvent<
  [string],
  OpenActionRemovedEventObject
>;

export type OpenActionRemovedEventFilter =
  TypedEventFilter<OpenActionRemovedEvent>;

export interface PKPAddedEventObject {
  pkp: string;
}
export type PKPAddedEvent = TypedEvent<[string], PKPAddedEventObject>;

export type PKPAddedEventFilter = TypedEventFilter<PKPAddedEvent>;

export interface PKPRemovedEventObject {
  pkp: string;
}
export type PKPRemovedEvent = TypedEvent<[string], PKPRemovedEventObject>;

export type PKPRemovedEventFilter = TypedEventFilter<PKPRemovedEvent>;

export interface VerifiedFiatAddedEventObject {
  verified: string;
}
export type VerifiedFiatAddedEvent = TypedEvent<
  [string],
  VerifiedFiatAddedEventObject
>;

export type VerifiedFiatAddedEventFilter =
  TypedEventFilter<VerifiedFiatAddedEvent>;

export interface VerifiedFiatRemovedEventObject {
  verified: string;
}
export type VerifiedFiatRemovedEvent = TypedEvent<
  [string],
  VerifiedFiatRemovedEventObject
>;

export type VerifiedFiatRemovedEventFilter =
  TypedEventFilter<VerifiedFiatRemovedEvent>;

export interface PrintAccessControl extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PrintAccessControlInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    addCommunitySteward(
      _communitySteward: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    addDesigner(
      _designer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    addFulfiller(
      _fulfiller: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    addOpenAction(
      _openAction: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    addPKP(
      _pkp: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    addVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    fiatPKPAddress(overrides?: CallOverrides): Promise<[string]>;

    isAdmin(_address: string, overrides?: CallOverrides): Promise<[boolean]>;

    isCommunitySteward(
      _address: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isDesigner(_address: string, overrides?: CallOverrides): Promise<[boolean]>;

    isFulfiller(
      _address: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isOpenAction(
      _address: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isPKP(_address: string, overrides?: CallOverrides): Promise<[boolean]>;

    isVerifiedFiat(
      _address: string,
      _profileId: BigNumberish,
      _pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    name(overrides?: CallOverrides): Promise<[string]>;

    removeAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    removeCommunitySteward(
      _communitySteward: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    removeDesigner(
      _designer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    removeFulfiller(
      _fulfiller: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    removeOpenAction(
      _openAction: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    removePKP(
      _pkp: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    removeVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setFiatPKPAddress(
      _newFiatPKPAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    symbol(overrides?: CallOverrides): Promise<[string]>;
  };

  addAdmin(
    _admin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  addCommunitySteward(
    _communitySteward: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  addDesigner(
    _designer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  addFulfiller(
    _fulfiller: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  addOpenAction(
    _openAction: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  addPKP(
    _pkp: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  addVerifiedFiat(
    _verified: string,
    _pubId: BigNumberish,
    _profileId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  fiatPKPAddress(overrides?: CallOverrides): Promise<string>;

  isAdmin(_address: string, overrides?: CallOverrides): Promise<boolean>;

  isCommunitySteward(
    _address: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isDesigner(_address: string, overrides?: CallOverrides): Promise<boolean>;

  isFulfiller(_address: string, overrides?: CallOverrides): Promise<boolean>;

  isOpenAction(_address: string, overrides?: CallOverrides): Promise<boolean>;

  isPKP(_address: string, overrides?: CallOverrides): Promise<boolean>;

  isVerifiedFiat(
    _address: string,
    _profileId: BigNumberish,
    _pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  name(overrides?: CallOverrides): Promise<string>;

  removeAdmin(
    _admin: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  removeCommunitySteward(
    _communitySteward: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  removeDesigner(
    _designer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  removeFulfiller(
    _fulfiller: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  removeOpenAction(
    _openAction: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  removePKP(
    _pkp: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  removeVerifiedFiat(
    _verified: string,
    _pubId: BigNumberish,
    _profileId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setFiatPKPAddress(
    _newFiatPKPAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  symbol(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    addAdmin(_admin: string, overrides?: CallOverrides): Promise<void>;

    addCommunitySteward(
      _communitySteward: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addDesigner(_designer: string, overrides?: CallOverrides): Promise<void>;

    addFulfiller(_fulfiller: string, overrides?: CallOverrides): Promise<void>;

    addOpenAction(
      _openAction: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addPKP(_pkp: string, overrides?: CallOverrides): Promise<void>;

    addVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    fiatPKPAddress(overrides?: CallOverrides): Promise<string>;

    isAdmin(_address: string, overrides?: CallOverrides): Promise<boolean>;

    isCommunitySteward(
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isDesigner(_address: string, overrides?: CallOverrides): Promise<boolean>;

    isFulfiller(_address: string, overrides?: CallOverrides): Promise<boolean>;

    isOpenAction(_address: string, overrides?: CallOverrides): Promise<boolean>;

    isPKP(_address: string, overrides?: CallOverrides): Promise<boolean>;

    isVerifiedFiat(
      _address: string,
      _profileId: BigNumberish,
      _pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    name(overrides?: CallOverrides): Promise<string>;

    removeAdmin(_admin: string, overrides?: CallOverrides): Promise<void>;

    removeCommunitySteward(
      _communitySteward: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeDesigner(_designer: string, overrides?: CallOverrides): Promise<void>;

    removeFulfiller(
      _fulfiller: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeOpenAction(
      _openAction: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removePKP(_pkp: string, overrides?: CallOverrides): Promise<void>;

    removeVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setFiatPKPAddress(
      _newFiatPKPAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    symbol(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "AdminAdded(address)"(admin?: string | null): AdminAddedEventFilter;
    AdminAdded(admin?: string | null): AdminAddedEventFilter;

    "AdminRemoved(address)"(admin?: string | null): AdminRemovedEventFilter;
    AdminRemoved(admin?: string | null): AdminRemovedEventFilter;

    "CommunityStewardAdded(address)"(
      pkp?: string | null
    ): CommunityStewardAddedEventFilter;
    CommunityStewardAdded(
      pkp?: string | null
    ): CommunityStewardAddedEventFilter;

    "CommunityStewardRemoved(address)"(
      pkp?: string | null
    ): CommunityStewardRemovedEventFilter;
    CommunityStewardRemoved(
      pkp?: string | null
    ): CommunityStewardRemovedEventFilter;

    "DesignerAdded(address)"(
      designer?: string | null
    ): DesignerAddedEventFilter;
    DesignerAdded(designer?: string | null): DesignerAddedEventFilter;

    "DesignerRemoved(address)"(
      designer?: string | null
    ): DesignerRemovedEventFilter;
    DesignerRemoved(designer?: string | null): DesignerRemovedEventFilter;

    "FulfillerAdded(address)"(
      fulfiller?: string | null
    ): FulfillerAddedEventFilter;
    FulfillerAdded(fulfiller?: string | null): FulfillerAddedEventFilter;

    "FulfillerRemoved(address)"(
      fulfiller?: string | null
    ): FulfillerRemovedEventFilter;
    FulfillerRemoved(fulfiller?: string | null): FulfillerRemovedEventFilter;

    "OpenActionAdded(address)"(
      openAction?: string | null
    ): OpenActionAddedEventFilter;
    OpenActionAdded(openAction?: string | null): OpenActionAddedEventFilter;

    "OpenActionRemoved(address)"(
      openAction?: string | null
    ): OpenActionRemovedEventFilter;
    OpenActionRemoved(openAction?: string | null): OpenActionRemovedEventFilter;

    "PKPAdded(address)"(pkp?: string | null): PKPAddedEventFilter;
    PKPAdded(pkp?: string | null): PKPAddedEventFilter;

    "PKPRemoved(address)"(pkp?: string | null): PKPRemovedEventFilter;
    PKPRemoved(pkp?: string | null): PKPRemovedEventFilter;

    "VerifiedFiatAdded(address)"(
      verified?: string | null
    ): VerifiedFiatAddedEventFilter;
    VerifiedFiatAdded(verified?: string | null): VerifiedFiatAddedEventFilter;

    "VerifiedFiatRemoved(address)"(
      verified?: string | null
    ): VerifiedFiatRemovedEventFilter;
    VerifiedFiatRemoved(
      verified?: string | null
    ): VerifiedFiatRemovedEventFilter;
  };

  estimateGas: {
    addAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    addCommunitySteward(
      _communitySteward: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    addDesigner(
      _designer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    addFulfiller(
      _fulfiller: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    addOpenAction(
      _openAction: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    addPKP(
      _pkp: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    addVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    fiatPKPAddress(overrides?: CallOverrides): Promise<BigNumber>;

    isAdmin(_address: string, overrides?: CallOverrides): Promise<BigNumber>;

    isCommunitySteward(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isDesigner(_address: string, overrides?: CallOverrides): Promise<BigNumber>;

    isFulfiller(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isOpenAction(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isPKP(_address: string, overrides?: CallOverrides): Promise<BigNumber>;

    isVerifiedFiat(
      _address: string,
      _profileId: BigNumberish,
      _pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    removeAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    removeCommunitySteward(
      _communitySteward: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    removeDesigner(
      _designer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    removeFulfiller(
      _fulfiller: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    removeOpenAction(
      _openAction: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    removePKP(
      _pkp: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    removeVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setFiatPKPAddress(
      _newFiatPKPAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    addCommunitySteward(
      _communitySteward: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    addDesigner(
      _designer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    addFulfiller(
      _fulfiller: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    addOpenAction(
      _openAction: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    addPKP(
      _pkp: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    addVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    fiatPKPAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isAdmin(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isCommunitySteward(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isDesigner(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFulfiller(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isOpenAction(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isPKP(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isVerifiedFiat(
      _address: string,
      _profileId: BigNumberish,
      _pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    removeCommunitySteward(
      _communitySteward: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    removeDesigner(
      _designer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    removeFulfiller(
      _fulfiller: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    removeOpenAction(
      _openAction: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    removePKP(
      _pkp: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    removeVerifiedFiat(
      _verified: string,
      _pubId: BigNumberish,
      _profileId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setFiatPKPAddress(
      _newFiatPKPAddress: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
