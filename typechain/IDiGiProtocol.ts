/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace Types {
  export type PublicationActionParamsStruct = {
    publicationActedProfileId: BigNumberish;
    publicationActedId: BigNumberish;
    actorProfileId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    actionModuleAddress: string;
    actionModuleData: BytesLike;
  };

  export type PublicationActionParamsStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string
  ] & {
    publicationActedProfileId: BigNumber;
    publicationActedId: BigNumber;
    actorProfileId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    actionModuleAddress: string;
    actionModuleData: string;
  };

  export type EIP712SignatureStruct = {
    signer: string;
    v: BigNumberish;
    r: BytesLike;
    s: BytesLike;
    deadline: BigNumberish;
  };

  export type EIP712SignatureStructOutput = [
    string,
    number,
    string,
    string,
    BigNumber
  ] & { signer: string; v: number; r: string; s: string; deadline: BigNumber };

  export type LegacyCollectParamsStruct = {
    publicationCollectedProfileId: BigNumberish;
    publicationCollectedId: BigNumberish;
    collectorProfileId: BigNumberish;
    referrerProfileId: BigNumberish;
    referrerPubId: BigNumberish;
    collectModuleData: BytesLike;
  };

  export type LegacyCollectParamsStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    string
  ] & {
    publicationCollectedProfileId: BigNumber;
    publicationCollectedId: BigNumber;
    collectorProfileId: BigNumber;
    referrerProfileId: BigNumber;
    referrerPubId: BigNumber;
    collectModuleData: string;
  };

  export type CommentParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type CommentParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type CreateProfileParamsStruct = {
    to: string;
    followModule: string;
    followModuleInitData: BytesLike;
  };

  export type CreateProfileParamsStructOutput = [string, string, string] & {
    to: string;
    followModule: string;
    followModuleInitData: string;
  };

  export type ProfileStruct = {
    pubCount: BigNumberish;
    followModule: string;
    followNFT: string;
    __DEPRECATED__handle: string;
    __DEPRECATED__imageURI: string;
    __DEPRECATED__followNFTURI: string;
    metadataURI: string;
  };

  export type ProfileStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    string,
    string
  ] & {
    pubCount: BigNumber;
    followModule: string;
    followNFT: string;
    __DEPRECATED__handle: string;
    __DEPRECATED__imageURI: string;
    __DEPRECATED__followNFTURI: string;
    metadataURI: string;
  };

  export type PublicationMemoryStruct = {
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    contentURI: string;
    referenceModule: string;
    __DEPRECATED__collectModule: string;
    __DEPRECATED__collectNFT: string;
    pubType: BigNumberish;
    rootProfileId: BigNumberish;
    rootPubId: BigNumberish;
  };

  export type PublicationMemoryStructOutput = [
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    string,
    number,
    BigNumber,
    BigNumber
  ] & {
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    contentURI: string;
    referenceModule: string;
    __DEPRECATED__collectModule: string;
    __DEPRECATED__collectNFT: string;
    pubType: number;
    rootProfileId: BigNumber;
    rootPubId: BigNumber;
  };

  export type MirrorParamsStruct = {
    profileId: BigNumberish;
    metadataURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
  };

  export type MirrorParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string
  ] & {
    profileId: BigNumber;
    metadataURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
  };

  export type PostParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type PostParamsStructOutput = [
    BigNumber,
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };

  export type QuoteParamsStruct = {
    profileId: BigNumberish;
    contentURI: string;
    pointedProfileId: BigNumberish;
    pointedPubId: BigNumberish;
    referrerProfileIds: BigNumberish[];
    referrerPubIds: BigNumberish[];
    referenceModuleData: BytesLike;
    actionModules: string[];
    actionModulesInitDatas: BytesLike[];
    referenceModule: string;
    referenceModuleInitData: BytesLike;
  };

  export type QuoteParamsStructOutput = [
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber[],
    BigNumber[],
    string,
    string[],
    string[],
    string,
    string
  ] & {
    profileId: BigNumber;
    contentURI: string;
    pointedProfileId: BigNumber;
    pointedPubId: BigNumber;
    referrerProfileIds: BigNumber[];
    referrerPubIds: BigNumber[];
    referenceModuleData: string;
    actionModules: string[];
    actionModulesInitDatas: string[];
    referenceModule: string;
    referenceModuleInitData: string;
  };
}

export interface IDiGiProtocolInterface extends utils.Interface {
  functions: {
    "act((uint256,uint256,uint256,uint256[],uint256[],address,bytes))": FunctionFragment;
    "actWithSig((uint256,uint256,uint256,uint256[],uint256[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)": FunctionFragment;
    "changeDelegatedExecutorsConfig(uint256,address[],bool[])": FunctionFragment;
    "changeDelegatedExecutorsConfigWithSig(uint256,address[],bool[],uint64,bool,(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "collectLegacy((uint256,uint256,uint256,uint256,uint256,bytes))": FunctionFragment;
    "collectLegacyWithSig((uint256,uint256,uint256,uint256,uint256,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "comment((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes))": FunctionFragment;
    "commentWithSig((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "createProfile((address,address,bytes))": FunctionFragment;
    "follow(uint256,uint256[],uint256[],bytes[])": FunctionFragment;
    "followWithSig(uint256,uint256[],uint256[],bytes[],(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "getContentURI(uint256,uint256)": FunctionFragment;
    "getDelegatedExecutorsConfigNumber(uint256)": FunctionFragment;
    "getDelegatedExecutorsMaxConfigNumberSet(uint256)": FunctionFragment;
    "getDelegatedExecutorsPrevConfigNumber(uint256)": FunctionFragment;
    "getProfile(uint256)": FunctionFragment;
    "getPublication(uint256,uint256)": FunctionFragment;
    "getPublicationType(uint256,uint256)": FunctionFragment;
    "incrementNonce(uint8)": FunctionFragment;
    "isActionModuleEnabledInPublication(uint256,uint256,address)": FunctionFragment;
    "isBlocked(uint256,uint256)": FunctionFragment;
    "isDelegatedExecutorApproved(uint256,address)": FunctionFragment;
    "isDelegatedExecutorApproved(uint256,address,uint64)": FunctionFragment;
    "isFollowing(uint256,uint256)": FunctionFragment;
    "mirror((uint256,string,uint256,uint256,uint256[],uint256[],bytes))": FunctionFragment;
    "mirrorWithSig((uint256,string,uint256,uint256,uint256[],uint256[],bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "post((uint256,string,address[],bytes[],address,bytes))": FunctionFragment;
    "postWithSig((uint256,string,address[],bytes[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "quote((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes))": FunctionFragment;
    "quoteWithSig((uint256,string,uint256,uint256,uint256[],uint256[],bytes,address[],bytes[],address,bytes),(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "setBlockStatus(uint256,uint256[],bool[])": FunctionFragment;
    "setBlockStatusWithSig(uint256,uint256[],bool[],(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "setFollowModule(uint256,address,bytes)": FunctionFragment;
    "setFollowModuleWithSig(uint256,address,bytes,(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "setProfileMetadataURI(uint256,string)": FunctionFragment;
    "setProfileMetadataURIWithSig(uint256,string,(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
    "unfollow(uint256,uint256[])": FunctionFragment;
    "unfollowWithSig(uint256,uint256[],(address,uint8,bytes32,bytes32,uint256))": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "act"
      | "actWithSig"
      | "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"
      | "changeDelegatedExecutorsConfig(uint256,address[],bool[])"
      | "changeDelegatedExecutorsConfigWithSig"
      | "collectLegacy"
      | "collectLegacyWithSig"
      | "comment"
      | "commentWithSig"
      | "createProfile"
      | "follow"
      | "followWithSig"
      | "getContentURI"
      | "getDelegatedExecutorsConfigNumber"
      | "getDelegatedExecutorsMaxConfigNumberSet"
      | "getDelegatedExecutorsPrevConfigNumber"
      | "getProfile"
      | "getPublication"
      | "getPublicationType"
      | "incrementNonce"
      | "isActionModuleEnabledInPublication"
      | "isBlocked"
      | "isDelegatedExecutorApproved(uint256,address)"
      | "isDelegatedExecutorApproved(uint256,address,uint64)"
      | "isFollowing"
      | "mirror"
      | "mirrorWithSig"
      | "post"
      | "postWithSig"
      | "quote"
      | "quoteWithSig"
      | "setBlockStatus"
      | "setBlockStatusWithSig"
      | "setFollowModule"
      | "setFollowModuleWithSig"
      | "setProfileMetadataURI"
      | "setProfileMetadataURIWithSig"
      | "unfollow"
      | "unfollowWithSig"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "act",
    values: [Types.PublicationActionParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "actWithSig",
    values: [Types.PublicationActionParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)",
    values: [BigNumberish, string[], boolean[], BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[])",
    values: [BigNumberish, string[], boolean[]]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDelegatedExecutorsConfigWithSig",
    values: [
      BigNumberish,
      string[],
      boolean[],
      BigNumberish,
      boolean,
      Types.EIP712SignatureStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "collectLegacy",
    values: [Types.LegacyCollectParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "collectLegacyWithSig",
    values: [Types.LegacyCollectParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "comment",
    values: [Types.CommentParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "commentWithSig",
    values: [Types.CommentParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createProfile",
    values: [Types.CreateProfileParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "follow",
    values: [BigNumberish, BigNumberish[], BigNumberish[], BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "followWithSig",
    values: [
      BigNumberish,
      BigNumberish[],
      BigNumberish[],
      BytesLike[],
      Types.EIP712SignatureStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getContentURI",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegatedExecutorsConfigNumber",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegatedExecutorsMaxConfigNumberSet",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelegatedExecutorsPrevConfigNumber",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProfile",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPublication",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPublicationType",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "incrementNonce",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isActionModuleEnabledInPublication",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isBlocked",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isDelegatedExecutorApproved(uint256,address)",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isDelegatedExecutorApproved(uint256,address,uint64)",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isFollowing",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mirror",
    values: [Types.MirrorParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "mirrorWithSig",
    values: [Types.MirrorParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "post",
    values: [Types.PostParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "postWithSig",
    values: [Types.PostParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "quote",
    values: [Types.QuoteParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "quoteWithSig",
    values: [Types.QuoteParamsStruct, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setBlockStatus",
    values: [BigNumberish, BigNumberish[], boolean[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setBlockStatusWithSig",
    values: [
      BigNumberish,
      BigNumberish[],
      boolean[],
      Types.EIP712SignatureStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModule",
    values: [BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setFollowModuleWithSig",
    values: [BigNumberish, string, BytesLike, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileMetadataURI",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProfileMetadataURIWithSig",
    values: [BigNumberish, string, Types.EIP712SignatureStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "unfollow",
    values: [BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "unfollowWithSig",
    values: [BigNumberish, BigNumberish[], Types.EIP712SignatureStruct]
  ): string;

  decodeFunctionResult(functionFragment: "act", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "actWithSig", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDelegatedExecutorsConfig(uint256,address[],bool[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeDelegatedExecutorsConfigWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectLegacy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collectLegacyWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "comment", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "commentWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createProfile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "follow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "followWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContentURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegatedExecutorsConfigNumber",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegatedExecutorsMaxConfigNumberSet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDelegatedExecutorsPrevConfigNumber",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getProfile", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPublication",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPublicationType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "incrementNonce",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isActionModuleEnabledInPublication",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isBlocked", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isDelegatedExecutorApproved(uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isDelegatedExecutorApproved(uint256,address,uint64)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isFollowing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mirror", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mirrorWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "post", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "postWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "quote", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "quoteWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBlockStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBlockStatusWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFollowModuleWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileMetadataURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProfileMetadataURIWithSig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unfollow", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "unfollowWithSig",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IDiGiProtocol extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IDiGiProtocolInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[Types.ProfileStructOutput]>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[Types.PublicationMemoryStructOutput]>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  act(
    publicationActionParams: Types.PublicationActionParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  actWithSig(
    publicationActionParams: Types.PublicationActionParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
    delegatorProfileId: BigNumberish,
    delegatedExecutors: string[],
    approvals: boolean[],
    configNumber: BigNumberish,
    switchToGivenConfig: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
    delegatorProfileId: BigNumberish,
    delegatedExecutors: string[],
    approvals: boolean[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  changeDelegatedExecutorsConfigWithSig(
    delegatorProfileId: BigNumberish,
    delegatedExecutors: string[],
    approvals: boolean[],
    configNumber: BigNumberish,
    switchToGivenConfig: boolean,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  collectLegacy(
    collectParams: Types.LegacyCollectParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  collectLegacyWithSig(
    collectParams: Types.LegacyCollectParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  comment(
    commentParams: Types.CommentParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  commentWithSig(
    commentParams: Types.CommentParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  createProfile(
    createProfileParams: Types.CreateProfileParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  follow(
    followerProfileId: BigNumberish,
    idsOfProfilesToFollow: BigNumberish[],
    followTokenIds: BigNumberish[],
    datas: BytesLike[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  followWithSig(
    followerProfileId: BigNumberish,
    idsOfProfilesToFollow: BigNumberish[],
    followTokenIds: BigNumberish[],
    datas: BytesLike[],
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getContentURI(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getDelegatedExecutorsConfigNumber(
    delegatorProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDelegatedExecutorsMaxConfigNumberSet(
    delegatorProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDelegatedExecutorsPrevConfigNumber(
    delegatorProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getProfile(
    profileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<Types.ProfileStructOutput>;

  getPublication(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<Types.PublicationMemoryStructOutput>;

  getPublicationType(
    profileId: BigNumberish,
    pubId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  incrementNonce(
    increment: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  isActionModuleEnabledInPublication(
    profileId: BigNumberish,
    pubId: BigNumberish,
    module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isBlocked(
    profileId: BigNumberish,
    byProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isDelegatedExecutorApproved(uint256,address)"(
    delegatorProfileId: BigNumberish,
    delegatedExecutor: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isDelegatedExecutorApproved(uint256,address,uint64)"(
    delegatorProfileId: BigNumberish,
    delegatedExecutor: string,
    configNumber: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isFollowing(
    followerProfileId: BigNumberish,
    followedProfileId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  mirror(
    mirrorParams: Types.MirrorParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  mirrorWithSig(
    mirrorParams: Types.MirrorParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  post(
    postParams: Types.PostParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  postWithSig(
    postParams: Types.PostParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  quote(
    quoteParams: Types.QuoteParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  quoteWithSig(
    quoteParams: Types.QuoteParamsStruct,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBlockStatus(
    byProfileId: BigNumberish,
    idsOfProfilesToSetBlockStatus: BigNumberish[],
    blockStatus: boolean[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBlockStatusWithSig(
    byProfileId: BigNumberish,
    idsOfProfilesToSetBlockStatus: BigNumberish[],
    blockStatus: boolean[],
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setFollowModule(
    profileId: BigNumberish,
    followModule: string,
    followModuleInitData: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setFollowModuleWithSig(
    profileId: BigNumberish,
    followModule: string,
    followModuleInitData: BytesLike,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setProfileMetadataURI(
    profileId: BigNumberish,
    metadataURI: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setProfileMetadataURIWithSig(
    profileId: BigNumberish,
    metadataURI: string,
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  unfollow(
    unfollowerProfileId: BigNumberish,
    idsOfProfilesToUnfollow: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  unfollowWithSig(
    unfollowerProfileId: BigNumberish,
    idsOfProfilesToUnfollow: BigNumberish[],
    signature: Types.EIP712SignatureStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: CallOverrides
    ): Promise<void>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<Types.ProfileStructOutput>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<Types.PublicationMemoryStructOutput>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: CallOverrides
    ): Promise<void>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    act(
      publicationActionParams: Types.PublicationActionParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    actWithSig(
      publicationActionParams: Types.PublicationActionParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[],uint64,bool)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    "changeDelegatedExecutorsConfig(uint256,address[],bool[])"(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    changeDelegatedExecutorsConfigWithSig(
      delegatorProfileId: BigNumberish,
      delegatedExecutors: string[],
      approvals: boolean[],
      configNumber: BigNumberish,
      switchToGivenConfig: boolean,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    collectLegacy(
      collectParams: Types.LegacyCollectParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    collectLegacyWithSig(
      collectParams: Types.LegacyCollectParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    comment(
      commentParams: Types.CommentParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    commentWithSig(
      commentParams: Types.CommentParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    createProfile(
      createProfileParams: Types.CreateProfileParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    follow(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    followWithSig(
      followerProfileId: BigNumberish,
      idsOfProfilesToFollow: BigNumberish[],
      followTokenIds: BigNumberish[],
      datas: BytesLike[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getContentURI(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelegatedExecutorsConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelegatedExecutorsMaxConfigNumberSet(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelegatedExecutorsPrevConfigNumber(
      delegatorProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProfile(
      profileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPublicationType(
      profileId: BigNumberish,
      pubId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    incrementNonce(
      increment: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    isActionModuleEnabledInPublication(
      profileId: BigNumberish,
      pubId: BigNumberish,
      module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isBlocked(
      profileId: BigNumberish,
      byProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isDelegatedExecutorApproved(uint256,address)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isDelegatedExecutorApproved(uint256,address,uint64)"(
      delegatorProfileId: BigNumberish,
      delegatedExecutor: string,
      configNumber: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFollowing(
      followerProfileId: BigNumberish,
      followedProfileId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mirror(
      mirrorParams: Types.MirrorParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    mirrorWithSig(
      mirrorParams: Types.MirrorParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    post(
      postParams: Types.PostParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    postWithSig(
      postParams: Types.PostParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    quote(
      quoteParams: Types.QuoteParamsStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    quoteWithSig(
      quoteParams: Types.QuoteParamsStruct,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBlockStatus(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBlockStatusWithSig(
      byProfileId: BigNumberish,
      idsOfProfilesToSetBlockStatus: BigNumberish[],
      blockStatus: boolean[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setFollowModule(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setFollowModuleWithSig(
      profileId: BigNumberish,
      followModule: string,
      followModuleInitData: BytesLike,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setProfileMetadataURI(
      profileId: BigNumberish,
      metadataURI: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setProfileMetadataURIWithSig(
      profileId: BigNumberish,
      metadataURI: string,
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    unfollow(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    unfollowWithSig(
      unfollowerProfileId: BigNumberish,
      idsOfProfilesToUnfollow: BigNumberish[],
      signature: Types.EIP712SignatureStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
