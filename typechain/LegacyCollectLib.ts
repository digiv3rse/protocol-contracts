/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface LegacyCollectLibInterface extends utils.Interface {
  functions: {};

  events: {
    "CollectedLegacy(uint256,uint256,uint256,address,uint256,uint256,address,bytes,uint256,uint256)": EventFragment;
    "LegacyCollectNFTDeployed(uint256,uint256,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CollectedLegacy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LegacyCollectNFTDeployed"): EventFragment;
}

export interface CollectedLegacyEventObject {
  publicationCollectedProfileId: BigNumber;
  publicationCollectedId: BigNumber;
  collectorProfileId: BigNumber;
  transactionExecutor: string;
  referrerProfileId: BigNumber;
  referrerPubId: BigNumber;
  collectModule: string;
  collectModuleData: string;
  tokenId: BigNumber;
  timestamp: BigNumber;
}
export type CollectedLegacyEvent = TypedEvent<
  [
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    string,
    string,
    BigNumber,
    BigNumber
  ],
  CollectedLegacyEventObject
>;

export type CollectedLegacyEventFilter = TypedEventFilter<CollectedLegacyEvent>;

export interface LegacyCollectNFTDeployedEventObject {
  profileId: BigNumber;
  pubId: BigNumber;
  collectNFT: string;
  timestamp: BigNumber;
}
export type LegacyCollectNFTDeployedEvent = TypedEvent<
  [BigNumber, BigNumber, string, BigNumber],
  LegacyCollectNFTDeployedEventObject
>;

export type LegacyCollectNFTDeployedEventFilter =
  TypedEventFilter<LegacyCollectNFTDeployedEvent>;

export interface LegacyCollectLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LegacyCollectLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "CollectedLegacy(uint256,uint256,uint256,address,uint256,uint256,address,bytes,uint256,uint256)"(
      publicationCollectedProfileId?: BigNumberish | null,
      publicationCollectedId?: BigNumberish | null,
      collectorProfileId?: BigNumberish | null,
      transactionExecutor?: null,
      referrerProfileId?: null,
      referrerPubId?: null,
      collectModule?: null,
      collectModuleData?: null,
      tokenId?: null,
      timestamp?: null
    ): CollectedLegacyEventFilter;
    CollectedLegacy(
      publicationCollectedProfileId?: BigNumberish | null,
      publicationCollectedId?: BigNumberish | null,
      collectorProfileId?: BigNumberish | null,
      transactionExecutor?: null,
      referrerProfileId?: null,
      referrerPubId?: null,
      collectModule?: null,
      collectModuleData?: null,
      tokenId?: null,
      timestamp?: null
    ): CollectedLegacyEventFilter;

    "LegacyCollectNFTDeployed(uint256,uint256,address,uint256)"(
      profileId?: BigNumberish | null,
      pubId?: BigNumberish | null,
      collectNFT?: string | null,
      timestamp?: null
    ): LegacyCollectNFTDeployedEventFilter;
    LegacyCollectNFTDeployed(
      profileId?: BigNumberish | null,
      pubId?: BigNumberish | null,
      collectNFT?: string | null,
      timestamp?: null
    ): LegacyCollectNFTDeployedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
